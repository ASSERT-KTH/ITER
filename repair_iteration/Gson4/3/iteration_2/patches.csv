bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON. ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	47	None	replace
2	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON.n ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON.n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON.n ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	47	None	replace
3	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	47	None	replace
4	[BUG]  [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	47	None	replace
5	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	33	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	33	None	replace
7	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	33	None	replace
8	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	33	None	replace
9	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON: ");  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON: ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	33	None	replace
10	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	33	None	replace
11	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON: ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	25	None	replace
12	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	25	None	replace
13	[BUG]  [BUGGY]  Throwables.warning( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.warning( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.warning( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	25	None	replace
14	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  new  JSON: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  new  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  new  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	25	None	replace
15	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	51	None	replace
16	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	51	None	replace
17	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  lenient);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	51	None	replace
18	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  0);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  0);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	51	None	replace
19	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	51	None	replace
20	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  0);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    0);    	non-compiled	[CE]  	39	None	replace
21	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ",  0);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    0);    	non-compiled	[CE]  	39	None	replace
22	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    ++c)    {    }    	non-compiled	[CE]  	13	None	replace
23	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    ++c)    {    }    	non-compiled	[CE]  	13	None	replace
24	[BUG]  [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    ++c)    {    }    	non-compiled	[CE]  	13	None	replace
25	[BUG]  [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
26	[BUG]  [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null)  {  buffer  =  new  StringBuffer();  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
27	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(buffer!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
28	[BUG]  [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
29	[BUG]  [BUGGY]  bucket!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
30	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  StringBuffer();  }  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(buffer  ==  null)  {  buffer  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(buffer  ==  null)  {  buffer  =  new  StringBuffer();  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
31	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	3	None	replace
32	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	3	None	replace
33	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL,   ");    	non-compiled	[CE]  	90	None	replace
34	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value, ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL,   ");    	non-compiled	[CE]  	90	None	replace
35	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative,   ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative,   ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative,   ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL,   ");    	non-compiled	[CE]  	90	None	replace
36	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  DEFAULT_TYPE);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  DEFAULT_TYPE);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  DEFAULT_TYPE);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL,   ");    	non-compiled	[CE]  	90	None	replace
37	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	79	None	replace
38	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	79	None	replace
39	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	79	None	replace
40	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	79	None	replace
41	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	79	None	replace
42	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	79	None	replace
43	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON. ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	8	None	replace
44	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	8	None	replace
45	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ",  0);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ",  0);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	8	None	replace
46	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ",  c);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ",  c);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ",  c);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	8	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	6	None	replace
49	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	6	None	replace
50	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	6	None	replace
51	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  this);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  this);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  this);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	6	None	replace
52	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  illegal  JSON ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  illegal  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
53	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON. ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
54	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON, ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
55	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  ignoring ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  ignoring ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  ignoring ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
56	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
57	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  cannot  be  lenient ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  cannot  be  lenient ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  cannot  be  lenient ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
58	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative. ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
59	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
60	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  negative ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  negative ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  negative ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
61	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  MIN_INCOMPLETE_INTEGER);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
62	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  new  String[]  {  }  );  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
63	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	82	None	replace
64	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  value,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  value,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  value,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	82	None	replace
65	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  result,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  result,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  result,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	82	None	replace
66	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  unexpected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  unexpected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  unexpected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	82	None	replace
67	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	82	None	replace
68	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  true)to  accept  malformed  JSON ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false,  true)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	46	None	replace
69	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON. ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	46	None	replace
70	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  true)to  accept  malformed  JSON ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true,  true)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	46	None	replace
71	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON, ");  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	46	None	replace
72	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON: ");  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	46	None	replace
73	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON.n ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON.n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON.n ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	22	None	replace
74	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	22	None	replace
75	[BUG]  [BUGGY]  ((  charsLoaded  ||  buffer.length  >  0)||(stack[0].length()  ==  0)));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  charsLoaded  ||  buffer.length  >  0)||(stack[0].length()  ==  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  charsLoaded  ||  buffer.length  >  0)||(stack[0].length()  ==  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
76	[BUG]  [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(stack[0].length()!=  0)));  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(stack[0].length()!=  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  charsLoaded  &&  buffer.length  >  0)||(stack[0].length()!=  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
77	[BUG]  [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(peekStack[0].length()  ==  0)));  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(peekStack[0].length()  ==  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  charsLoaded  &&  buffer.length  >  0)||(peekStack[0].length()  ==  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
78	[BUG]  [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(stack[1].length()  ==  0)));  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(stack[1].length()  ==  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  charsLoaded  &&  buffer.length  >  0)||(stack[1].length()  ==  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
79	[BUG]  [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(buffer[0].length()  ==  0)));  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(buffer[0].length()  ==  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  charsLoaded  &&  buffer.length  >  0)||(buffer[0].length()  ==  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
80	[BUG]  [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(stack[0].length()  >=  0)));  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  charsLoaded  &&  buffer.length  >  0)||(stack[0].length()  >=  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  charsLoaded  &&  buffer.length  >  0)||(stack[0].length()  >=  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
81	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  	40	None	replace
82	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: "  +  lenient);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: "  +  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  	40	None	replace
83	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: "  +  getMessage());  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: "  +  getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  	40	None	replace
84	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  	40	None	replace
85	[BUG]  [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(true)to  accept  negative: ");  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(true)to  accept  negative: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.warning( "Use  JsonReader.setLenient(true)to  accept  negative: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  	40	None	replace
86	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: "  +  0);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: "  +  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: "  +  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  	40	None	replace
87	[BUG]  [BUGGY]  throwOnEof  =  true;  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throwOnEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throwOnEof  =  true;	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
88	[BUG]  [BUGGY]  throw  onEof  =  true;  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  onEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  onEof  =  true;	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
89	[BUG]  [BUGGY]  bucketOnEof  =  true;  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucketOnEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucketOnEof  =  true;	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
90	[BUG]  [BUGGY]  thrownOnEof  =  true;  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  thrownOnEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	thrownOnEof  =  true;	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
91	[BUG]  [BUGGY]  bucket.setLenient(true);  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket.setLenient(true);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket.setLenient(true);	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
92	[BUG]  [BUGGY]  Throwable  onEof  =  true;  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwable  onEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwable  onEof  =  true;	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
93	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  	17	None	replace
94	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  	17	None	replace
95	[BUG]  [BUGGY]  if(!lenient)  {  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient)  {  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  	17	None	replace
96	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
97	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
98	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
99	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
100	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  PEEKED_NULL);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  PEEKED_NULL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  PEEKED_NULL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
101	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON. ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	42	None	replace
102	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON, ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	42	None	replace
103	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON: ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true,    true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	42	None	replace
104	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	49	None	replace
105	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  ' "+getMessage());  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  ' "+getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  ' "+getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	49	None	replace
106	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, "  + ";  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, "  + ";  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, "  + ";	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	49	None	replace
107	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  missing  line ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  missing  line ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  missing  line ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	49	None	replace
108	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	60	None	replace
109	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");	  new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	60	None	replace
110	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	60	None	replace
111	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	60	None	replace
112	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  unlenient  JSON ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  unlenient  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  unlenient  JSON ");	  new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	60	None	replace
113	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,   ");    	non-compiled	[CE]  	37	None	replace
114	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,   ");    	non-compiled	[CE]  	37	None	replace
115	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  positive, ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  positive, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  positive, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,   ");    	non-compiled	[CE]  	37	None	replace
116	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, "  + "n ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, "  + "n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, "  + "n ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,   ");    	non-compiled	[CE]  	37	None	replace
117	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	54	None	replace
118	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	54	None	replace
119	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	54	None	replace
120	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	54	None	replace
121	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  lenient);	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	54	None	replace
122	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  charsLoaded);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  charsLoaded);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  charsLoaded);	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	54	None	replace
123	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ",  0);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    0);    	non-compiled	[CE]  	11	None	replace
124	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  + ",  0);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  + ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  + ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    0);    	non-compiled	[CE]  	11	None	replace
125	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON "  + ",  0);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON "  + ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON "  + ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    0);    	non-compiled	[CE]  	11	None	replace
126	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	80	None	replace
127	[BUG]  [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	80	None	replace
128	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	80	None	replace
129	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	80	None	replace
130	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	80	None	replace
131	[BUG]  [BUGGY]  bucket  ==  null  ||!lenient)  {  throwOnEof;  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  ||!lenient)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  ||!lenient)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
132	[BUG]  [BUGGY]  bucket!=  null  &&!lenient)  {  throwOnEof;  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null  &&!lenient)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null  &&!lenient)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
133	[BUG]  [BUGGY]  bucket!=  null  ||!lenient)  {  throwOnEof;  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null  ||!lenient)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null  ||!lenient)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
134	[BUG]  [BUGGY]  bucket  ==  null  &&!lenient)  {  throwOnEof;  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  &&!lenient)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  &&!lenient)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
135	[BUG]  [BUGGY]  bucket  ==  null  &&!lenient.booleanValue())  {  throwOnEof;  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  &&!lenient.booleanValue())  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  &&!lenient.booleanValue())  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
136	[BUG]  [BUGGY]  bucket  ==  null  &&!lenient.booleanValue();  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  &&!lenient.booleanValue();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  &&!lenient.booleanValue();	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
137	[BUG]  [BUGGY]  bucket  ==  null  &&!lenient.equals(null))  {  throwOnEof;  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  &&!lenient.equals(null))  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  &&!lenient.equals(null))  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
138	[BUG]  [BUGGY]  bucket  ==  null  ||!lenient)  {  throw  onEof;  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  ||!lenient)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  ||!lenient)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
139	[BUG]  [BUGGY]  bucket!=  null  ||!lenient)  {  throw  onEof;  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null  ||!lenient)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null  ||!lenient)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
140	[BUG]  [BUGGY]  bucket!=  null  &&!lenient)  {  throw  onEof;  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null  &&!lenient)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null  &&!lenient)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
141	[BUG]  [BUGGY]  bucket  ==  null  &&!lenient)  {  throw  onEof;  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  &&!lenient)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  &&!lenient)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
142	[BUG]  [BUGGY]  bucket  ==  null  &&!lenient.equals(throwOnEof);  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  &&!lenient.equals(throwOnEof);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  &&!lenient.equals(throwOnEof);	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
143	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	64	None	replace
144	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	64	None	replace
145	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	64	None	replace
146	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ");	  Throwables.throw(syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	63	None	replace
147	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ");	  Throwables.throw(syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	63	None	replace
148	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative "));  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative "));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative "));	  Throwables.throw(syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	63	None	replace
149	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative. ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative. ");	  Throwables.throw(syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	63	None	replace
150	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  charsLoaded);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  charsLoaded);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  charsLoaded);	  Throwables.throw(syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	63	None	replace
151	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  charsLoaded));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  charsLoaded));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  charsLoaded));	  Throwables.throw(syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	63	None	replace
152	[BUG]  [BUGGY]  if(in!=  null)  {  in.skipChildren();  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.skipChildren();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.skipChildren();  }	  in.skipChildren();    	non-compiled	[CE]  	72	None	replace
153	[BUG]  [BUGGY]  if(in!=  null)  {  in.skipChildren();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.skipChildren();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.skipChildren();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.skipChildren();    	non-compiled	[CE]  	72	None	replace
154	[BUG]  [BUGGY]  if(in.isLenient())  {  in.skipChildren();  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in.isLenient())  {  in.skipChildren();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in.isLenient())  {  in.skipChildren();  }	  in.skipChildren();    	non-compiled	[CE]  	72	None	replace
155	[BUG]  [BUGGY]  if(in!=  null)  {  in.skipChildren();  }  else  {  checkLenient();  }  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.skipChildren();  }  else  {  checkLenient();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.skipChildren();  }  else  {  checkLenient();  }	  in.skipChildren();    	non-compiled	[CE]  	72	None	replace
156	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative  JSON ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
157	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON. ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
158	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
159	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ",  0);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
160	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON: "  +  getMessage());  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
161	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ",  n);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ",  n);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ",  n);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
162	[BUG]  [BUGGY]  in.setLenient(true);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  in.setLenient(true);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.setLenient(true);	  in.close();    	non-compiled	[CE]  	74	None	replace
163	[BUG]  [BUGGY]  in.flush();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  in.flush();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.flush();	  in.close();    	non-compiled	[CE]  	74	None	replace
164	[BUG]  [BUGGY]  in.write(buffer,  0,  buffer.length);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  in.write(buffer,  0,  buffer.length);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.write(buffer,  0,  buffer.length);	  in.close();    	non-compiled	[CE]  	74	None	replace
165	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(buffer!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  	69	None	replace
166	[BUG]  [BUGGY]  bucket!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  	69	None	replace
167	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	28	None	replace
168	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	28	None	replace
169	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	28	None	replace
170	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON, ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	41	None	replace
171	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON: ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	41	None	replace
172	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	5	None	replace
173	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ",  c);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ",  c);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ",  c);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    c);    	non-compiled	[CE]  	12	None	replace
174	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON "  +  c);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON "  +  c);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON "  +  c);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    c);    	non-compiled	[CE]  	12	None	replace
175	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON ");	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	83	None	replace
176	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON ");	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	83	None	replace
177	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	83	None	replace
178	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	83	None	replace
179	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	83	None	replace
180	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	83	None	replace
181	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	83	None	replace
182	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  1);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  1);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ",  1);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ",    0);    	non-compiled	[CE]  	58	None	replace
183	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
184	[BUG]  [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
185	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  this);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  this);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  this);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
186	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  + "n ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  + "n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  + "n ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
187	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    c++)    {    return;    }    	non-compiled	[CE]  	14	None	replace
188	[BUG]  [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    c++)    {    return;    }    	non-compiled	[CE]  	14	None	replace
189	[BUG]  [BUGGY]  String[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  String[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	String[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    c++)    {    return;    }    	non-compiled	[CE]  	14	None	replace
190	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  lenient);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    lenient);    	non-compiled	[CE]  	91	None	replace
191	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ",  lenient);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ",  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ",  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    lenient);    	non-compiled	[CE]  	91	None	replace
192	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  charsLoaded);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  charsLoaded);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  charsLoaded);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    lenient);    	non-compiled	[CE]  	91	None	replace
193	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  lenient,  value);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  lenient,  value);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  lenient,  value);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    lenient);    	non-compiled	[CE]  	91	None	replace
194	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	85	None	replace
195	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	85	None	replace
196	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	85	None	replace
197	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	85	None	replace
198	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	85	None	replace
199	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	85	None	replace
200	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON "  + ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON "  + ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON "  + ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	50	None	replace
201	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON "  +  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON "  +  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON "  +  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	50	None	replace
202	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	50	None	replace
203	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON.n ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON.n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON.n ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	27	None	replace
204	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON. ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON.   ");    	non-compiled	[CE]  	9	None	replace
205	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON. ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON.   ");    	non-compiled	[CE]  	9	None	replace
206	[BUG]  [BUGGY]  bucket!=  null  &&!lenient)  {  throw  onEof();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null  &&!lenient)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null  &&!lenient)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
207	[BUG]  [BUGGY]  bucket  ==  null  &&!lenient)  {  throw  onEof();  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  &&!lenient)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  &&!lenient)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
208	[BUG]  [BUGGY]  bucket  ==  null  ||!lenient)  {  throw  onEof();  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  ||!lenient)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  ||!lenient)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
209	[BUG]  [BUGGY]  bucket!=  null  ||!lenient)  {  throw  onEof();  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null  ||!lenient)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null  ||!lenient)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
210	[BUG]  [BUGGY]  bucket!=  null  &&!lenient)  {  throw  onLenient();  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null  &&!lenient)  {  throw  onLenient();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null  &&!lenient)  {  throw  onLenient();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
211	[BUG]  [BUGGY]  bucket  ==  null  &&!lenient)  {  throw  onLenient();  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null  &&!lenient)  {  throw  onLenient();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null  &&!lenient)  {  throw  onLenient();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
212	[BUG]  [BUGGY]  while(!lenient)  {  throw  onEof();  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  while(!lenient)  {  throw  onEof();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	while(!lenient)  {  throw  onEof();	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
213	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
214	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
215	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
216	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
217	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
218	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON. ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	55	None	replace
219	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON: ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	55	None	replace
220	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	48	None	replace
221	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	48	None	replace
222	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  0);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  0);	  throw    syntaxError(   "Use    JSONReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	48	None	replace
223	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative  JSON ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	93	None	replace
224	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON. ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	93	None	replace
225	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON, ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	93	None	replace
226	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	93	None	replace
227	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ",  0);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ",  0);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	93	None	replace
228	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ",  n);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ",  n);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ",  n);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	93	None	replace
229	[BUG]  [BUGGY]  whileLenient)  {  throwOnEof  =  true;  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  whileLenient)  {  throwOnEof  =  true;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	whileLenient)  {  throwOnEof  =  true;  }	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  	73	None	replace
230	[BUG]  [BUGGY]  ThrowOnEof  =  true;  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ThrowOnEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	ThrowOnEof  =  true;	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  	73	None	replace
231	[BUG]  [BUGGY]  bucket.throwOnEof  =  true;  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket.throwOnEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket.throwOnEof  =  true;	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  	73	None	replace
232	[BUG]  [BUGGY]  bucket  =  true;  [CE]  [FE]                                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  =  true;	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  	73	None	replace
233	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    	non-compiled	[CE]  	19	None	replace
234	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  empty  JSON ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
235	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON. ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
236	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
237	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
238	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON, ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
239	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ",  0);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
240	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  1);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  1);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  1);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ",    0);    	non-compiled	[CE]  	24	None	replace
241	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	32	None	replace
242	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON.   ");  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON.   ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON.   ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	32	None	replace
243	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	59	None	replace
244	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ",  new  String[]  {  }  );  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	59	None	replace
245	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  new  String[]  {  }  );  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	59	None	replace
246	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON. ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false,    true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	43	None	replace
247	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON, ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false,    true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	43	None	replace
248	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false,    true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	43	None	replace
249	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON. ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
250	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON, ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
251	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  negative  JSON ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  negative  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
252	[BUG]  [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.warning( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
253	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ",  new  String[]  {  }  );  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
254	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ",  0);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
255	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  throw    new    IllegalStateException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
256	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  throw    new    IllegalStateException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
257	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    new    IllegalStateException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
258	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	57	None	replace
259	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ",  new  String[]  {  }  );  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON, ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	57	None	replace
260	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  new  String[]  {  }  );  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	57	None	replace
261	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	35	None	replace
262	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON: ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	35	None	replace
263	[BUG]  [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.warning( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.warning( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	35	None	replace
264	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	56	None	replace
265	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  value, ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  value, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  value, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	56	None	replace
266	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  n ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  n ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	56	None	replace
267	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  ' "+getMessage());  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  ' "+getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  ' "+getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	56	None	replace
268	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.toString  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.toString  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.toString	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
269	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  buffer[i]  =  Integer.toString(  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  buffer[i]  =  Integer.toString(  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  buffer[i]  =  Integer.toString(	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
270	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.to  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.to  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.to	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
271	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
272	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  buffer[i]  =  Integer.toString(  [CE]  [FE]                                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  buffer[i]  =  Integer.toString(  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  buffer[i]  =  Integer.toString(	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
273	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
274	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
275	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
276	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
277	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  value);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
278	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON,  expected  value ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON,    expected    value   ");    	non-compiled	[CE]  	88	None	replace
279	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value. ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON,    expected    value   ");    	non-compiled	[CE]  	88	None	replace
280	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON,  expected  value ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON,    expected    value   ");    	non-compiled	[CE]  	88	None	replace
281	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value ",  MIN_INCOMPLETE_INTEGER);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value ",  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value ",  MIN_INCOMPLETE_INTEGER);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON,    expected    value   ");    	non-compiled	[CE]  	88	None	replace
282	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value: ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON,    expected    value   ");    	non-compiled	[CE]  	88	None	replace
283	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value: "  +  getMessage());  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value: "  +  getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON,    expected    value   ");    	non-compiled	[CE]  	88	None	replace
284	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);	  Throwables.throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
285	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());	  Throwables.throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
286	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	53	None	replace
287	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	53	None	replace
288	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON, ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON, ");	  new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	53	None	replace
289	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, "  + ";  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, "  + ";  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON, "  + ";	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	21	None	replace
290	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	7	None	replace
291	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  expecting  a  value ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
292	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value. ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
293	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  expecting  a  value. ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  expecting  a  value. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  expecting  a  value. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
294	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value! ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value! ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value! ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
295	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value, ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
296	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  value,  expecting  a  value ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  value,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  value,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
297	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    ++c)    {    return;    }    	non-compiled	[CE]  	15	None	replace
298	[BUG]  [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    ++c)    {    return;    }    	non-compiled	[CE]  	15	None	replace
299	[BUG]  [BUGGY]  int  lineNumber  =  stack.size()  -  1;  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int  lineNumber  =  stack.size()  -  1;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int  lineNumber  =  stack.size()  -  1;	  int    lineNumber    =    stack.size();    	non-compiled	[CE]  	75	None	replace
300	[BUG]  [BUGGY]  int  lineNumber  =  stack.size()  +  1;  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int  lineNumber  =  stack.size()  +  1;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int  lineNumber  =  stack.size()  +  1;	  int    lineNumber    =    stack.size();    	non-compiled	[CE]  	75	None	replace
301	[BUG]  [BUGGY]  int  lineNumber  =  stackSize.size();  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int  lineNumber  =  stackSize.size();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int  lineNumber  =  stackSize.size();	  int    lineNumber    =    stack.size();    	non-compiled	[CE]  	75	None	replace
302	[BUG]  [BUGGY]  int  lineNumber  =  stack.size()  -  2;  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int  lineNumber  =  stack.size()  -  2;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int  lineNumber  =  stack.size()  -  2;	  int    lineNumber    =    stack.size();    	non-compiled	[CE]  	75	None	replace
303	[BUG]  [BUGGY]  int  lineNumber  =  stack.length();  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int  lineNumber  =  stack.length();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int  lineNumber  =  stack.length();	  int    lineNumber    =    stack.size();    	non-compiled	[CE]  	75	None	replace
304	[BUG]  [BUGGY]  int  lineNumber  =  this.stack.size();  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int  lineNumber  =  this.stack.size();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int  lineNumber  =  this.stack.size();	  int    lineNumber    =    stack.size();    	non-compiled	[CE]  	75	None	replace
305	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
306	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  0);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  0);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
307	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  c);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  c);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  c);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
308	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  n);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  n);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  n);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
309	[BUG]  [BUGGY]  Throwables.warning( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.warning( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.warning( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
310	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
311	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
312	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  + "n ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  + "n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  + "n ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
313	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  this);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  this);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  this);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
314	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON.n ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON.n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON.n ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false,    false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	45	None	replace
315	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices  ==  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  	16	None	replace
316	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  	16	None	replace
317	[BUG]  [BUGGY]  if(!lenient)  {  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient)  {  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  	16	None	replace
318	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
319	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
320	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getClass());  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getClass());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getClass());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
321	[BUG]  [BUGGY]  Throwables.warning( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.warning( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.warning( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
322	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");	  Throwables.throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	29	None	replace
323	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON. ");	  Throwables.throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	29	None	replace
324	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);	  Throwables.throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	29	None	replace
325	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  getMessage());	  Throwables.throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	29	None	replace
326	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  illegal  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  illegal  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	95	None	replace
327	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	95	None	replace
328	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON. ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	95	None	replace
329	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON, ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	95	None	replace
330	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ",  0);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ",  0);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	95	None	replace
331	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ",  n);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ",  n);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ",  n);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	95	None	replace
332	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    new    IllegalArgumentException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	30	None	replace
333	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    new    IllegalArgumentException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	30	None	replace
334	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    new    IllegalArgumentException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	30	None	replace
335	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
336	[BUG]  [BUGGY]  While(!lenient)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  While(!lenient)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	While(!lenient)  {  throwOnEof  Reader.throwAsIOException( " ");  }	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
337	[BUG]  [BUGGY]  While(!lenient  &&  throwOnEof  Reader.throwAsIOException( " "))  {  throwOnEof  Reader.throwAsIOException( " ");  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  While(!lenient  &&  throwOnEof  Reader.throwAsIOException( " "))  {  throwOnEof  Reader.throwAsIOException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	While(!lenient  &&  throwOnEof  Reader.throwAsIOException( " "))  {  throwOnEof  Reader.throwAsIOException( " ");  }	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
338	[BUG]  [BUGGY]  While(true)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  While(true)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	While(true)  {  throwOnEof  Reader.throwAsIOException( " ");  }	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
339	[BUG]  [BUGGY]  While(!lenient  &&  throwOnEof  Reader.throwAsIOException( " "));  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  While(!lenient  &&  throwOnEof  Reader.throwAsIOException( " "));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	While(!lenient  &&  throwOnEof  Reader.throwAsIOException( " "));	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
340	[BUG]  [BUGGY]  bucketOnEof  Reader.throwAsIOException( " ");  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucketOnEof  Reader.throwAsIOException( " ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucketOnEof  Reader.throwAsIOException( " ");	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
341	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	84	None	replace
342	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	84	None	replace
343	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	84	None	replace
344	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative.   ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative.   ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative.   ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative.   ");    	non-compiled	[CE]  	38	None	replace
345	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative.n ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative.n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative.n ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative.   ");    	non-compiled	[CE]  	38	None	replace
346	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON.n ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON.n ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON.n ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	20	None	replace
347	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	66	None	replace
348	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ",  new  String[]  {  }  );  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON, ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	66	None	replace
349	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	66	None	replace
350	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	66	None	replace
351	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON "  + ",  new  String[]  {  }  );  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON "  + ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON "  + ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	66	None	replace
352	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON. ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
353	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
354	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
355	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  illegal  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  illegal  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
356	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ",  new  String[]  {  }  );  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
357	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ",  0);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
358	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative: "  +  getMessage());  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative: "  +  getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative   ");    	non-compiled	[CE]  	36	None	replace
359	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  ignoring ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  ignoring ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  ignoring ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative   ");    	non-compiled	[CE]  	36	None	replace
360	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
361	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
362	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative,  expecting  a  value ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
363	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  expected  value ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON,    expected    value   ");    	non-compiled	[CE]  	88	None	replace
364	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON,    expected    value   ");    	non-compiled	[CE]  	88	None	replace
365	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof!=  NON_EXECUTE_PREFIX)  {  throwOnEof;  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof!=  NON_EXECUTE_PREFIX)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof!=  NON_EXECUTE_PREFIX)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
366	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throwOnEof;  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
367	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_ON_CLOSE))  {  throwOnEof;  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_ON_CLOSE))  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_ON_CLOSE))  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
368	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throwOnEof;  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
369	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof  >  0)  {  throwOnEof;  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof  >  0)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof  >  0)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
370	[BUG]  [BUGGY]  if(!lenient  &&  buffer.length  >  0)  {  throwOnEof;  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  buffer.length  >  0)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  buffer.length  >  0)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
371	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_KEY))  {  throwOnEof;  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_KEY))  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_KEY))  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
372	[BUG]  [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    }    	non-compiled	[CE]  	17	None	replace
373	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  should  not  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  should  not  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  should  not  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
374	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  missing  lineNumber ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  missing  lineNumber ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  missing  lineNumber ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
375	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  ignoring ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  ignoring ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  ignoring ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	56	None	replace
376	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  should  not  be  null. ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  should  not  be  null. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  should  not  be  null. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	56	None	replace
377	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  should  not  be  a  string  value ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  should  not  be  a  string  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  should  not  be  a  string  value ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	56	None	replace
378	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  cannot  be  lenient ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  cannot  be  lenient ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  cannot  be  lenient ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	95	None	replace
379	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	95	None	replace
380	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  should  not  be  null. ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  should  not  be  null. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  should  not  be  null. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	95	None	replace
381	[BUG]  [BUGGY]  bucket!=  null)  {  buffer  =  new  StringBuffer();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null)  {  buffer  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null)  {  buffer  =  new  StringBuffer();  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  	69	None	replace
382	[BUG]  [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  if(!lenient)  {  buffer.append('n');  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  if(!lenient)  {  buffer.append('n');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  if(!lenient)  {  buffer.append('n');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  	69	None	replace
383	[BUG]  [BUGGY]  buffer  =  new  StringBuffer();  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  buffer  =  new  StringBuffer();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	buffer  =  new  StringBuffer();	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  	69	None	replace
384	[BUG]  [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  if(buffer.length()  ==  0)  {  buffer.append('n');  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  if(buffer.length()  ==  0)  {  buffer.append('n');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null)  {  buffer  =  new  StringBuffer();  }  else  if(buffer.length()  ==  0)  {  buffer.append('n');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  	69	None	replace
385	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.close();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.close();  }	  in.close();    	non-compiled	[CE]  	74	None	replace
386	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(in,  0,  newPathIndices,  0,  in.length);  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(in,  0,  newPathIndices,  0,  in.length);  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.close();  }  else  {  System.arraycopy(in,  0,  newPathIndices,  0,  in.length);  }	  in.close();    	non-compiled	[CE]  	74	None	replace
387	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  throwOnEof  =  true;  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  throwOnEof  =  true;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.close();  }  else  {  throwOnEof  =  true;  }	  in.close();    	non-compiled	[CE]  	74	None	replace
388	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  throwOnEof  =  false;  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  throwOnEof  =  false;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.close();  }  else  {  throwOnEof  =  false;  }	  in.close();    	non-compiled	[CE]  	74	None	replace
389	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  negative ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  negative ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  negative ");	  Throwables.throw(syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	63	None	replace
390	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  0);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  0);	  Throwables.throw(syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  	63	None	replace
391	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  expected  value ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
392	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
393	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  missing  lineNumber ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  missing  lineNumber ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  missing  lineNumber ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
394	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  	16	None	replace
395	[BUG]  [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Integer[]  newPathIndices  =  getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  	16	None	replace
396	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
397	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  expected  value ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
398	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL  value ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  expected  NUMBER_CHAR_DECIMAL  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
399	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	80	None	replace
400	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	80	None	replace
401	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	80	None	replace
402	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DEGIT);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DEGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DEGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	80	None	replace
403	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	33	None	replace
404	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices(pathNames);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices(pathNames);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices(pathNames);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    c++)    {    return;    }    	non-compiled	[CE]  	14	None	replace
405	[BUG]  [BUGGY]  While(!lenient  &&  stack.size()  >  0)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  While(!lenient  &&  stack.size()  >  0)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	While(!lenient  &&  stack.size()  >  0)  {  throwOnEof  Reader.throwAsIOException( " ");  }	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
406	[BUG]  [BUGGY]  safeThanIgnoreCase(throwOnEof  Reader.throwAsIOException( " ");  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  safeThanIgnoreCase(throwOnEof  Reader.throwAsIOException( " ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	safeThanIgnoreCase(throwOnEof  Reader.throwAsIOException( " ");	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
407	[BUG]  [BUGGY]  safeThanIgnoreCase(lenient)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  safeThanIgnoreCase(lenient)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	safeThanIgnoreCase(lenient)  {  throwOnEof  Reader.throwAsIOException( " ");  }	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
408	[BUG]  [BUGGY]  safeThanIgnoreCase(throwOnEof  Reader)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  safeThanIgnoreCase(throwOnEof  Reader)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	safeThanIgnoreCase(throwOnEof  Reader)  {  throwOnEof  Reader.throwAsIOException( " ");  }	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
409	[BUG]  [BUGGY]  safeThanIgnoreCase(throwOnEof  Reader.throwAsIOException( " "));  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  safeThanIgnoreCase(throwOnEof  Reader.throwAsIOException( " "));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	safeThanIgnoreCase(throwOnEof  Reader.throwAsIOException( " "));	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
410	[BUG]  [BUGGY]  sweepOnEof  Reader.throwAsIOException( " ");  [CE]  [FE]                                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  sweepOnEof  Reader.throwAsIOException( " ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	sweepOnEof  Reader.throwAsIOException( " ");	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
411	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	8	None	replace
412	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	8	None	replace
413	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ");	  new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	53	None	replace
414	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  new  JSON ",  new  String[]  {  }  );  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  new  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  new  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	57	None	replace
415	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ",  new  String[]  {  }  );  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	57	None	replace
416	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  +  0);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  +  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  +  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    0);    	non-compiled	[CE]  	11	None	replace
417	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  +  String.valueOf(this.value),  0);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  +  String.valueOf(this.value),  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  +  String.valueOf(this.value),  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    0);    	non-compiled	[CE]  	11	None	replace
418	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  new  String[]  {  }  );  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative   ");    	non-compiled	[CE]  	36	None	replace
419	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
420	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  missing  lineNumber ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  missing  lineNumber ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  missing  lineNumber ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
421	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  	40	None	replace
422	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative: ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  	40	None	replace
423	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
424	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
425	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
426	[BUG]  [BUGGY]  pawne();  throwOnEof  =  true;  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  pawne();  throwOnEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	pawne();  throwOnEof  =  true;	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  	73	None	replace
427	[BUG]  [BUGGY]  pawnEof  =  true;  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  pawnEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	pawnEof  =  true;	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  	73	None	replace
428	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	66	None	replace
429	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DIGIT);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  expected  NUMBER_CHAR_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	82	None	replace
430	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	82	None	replace
431	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ");	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	83	None	replace
432	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	83	None	replace
433	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
434	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
435	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
436	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices(pathNames);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices(pathNames);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices(pathNames);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    ++c)    {    }    	non-compiled	[CE]  	13	None	replace
437	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
438	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  expected  value ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
439	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  value ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	49	None	replace
440	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL, ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	49	None	replace
441	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL  + ", ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL  + ", ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL  + ", ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	49	None	replace
442	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  value ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  value ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	21	None	replace
443	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  should  not  be  null. ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  should  not  be  null. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  should  not  be  null. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	21	None	replace
444	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  should  not  be  a  string  value ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  should  not  be  a  string  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  should  not  be  a  string  value ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	21	None	replace
445	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  ' "+getMessage());  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  ' "+getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  ' "+getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	21	None	replace
446	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON,  expected  value ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON,  expected  value ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	93	None	replace
447	[BUG]  [BUGGY]  while(!lenient)  {  throw  onEof  =  true;  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  while(!lenient)  {  throw  onEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	while(!lenient)  {  throw  onEof  =  true;	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
448	[BUG]  [BUGGY]  while(!lenient)  {  throw  onEof  =  true;  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  while(!lenient)  {  throw  onEof  =  true;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	while(!lenient)  {  throw  onEof  =  true;  }	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
449	[BUG]  [BUGGY]  while(!lenient)  {  throw  onEof  =  false;  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  while(!lenient)  {  throw  onEof  =  false;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	while(!lenient)  {  throw  onEof  =  false;  }	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
450	[BUG]  [BUGGY]  while(!lenient)  {  throwOnEof  =  true;  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  while(!lenient)  {  throwOnEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	while(!lenient)  {  throwOnEof  =  true;	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
451	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");	  new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	60	None	replace
452	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	55	None	replace
453	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	20	None	replace
454	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
455	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
456	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  negative ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  negative ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  negative ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
457	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	22	None	replace
458	[BUG]  [BUGGY]  int  lineNumber  =  stack.getLength();  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int  lineNumber  =  stack.getLength();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int  lineNumber  =  stack.getLength();	  int    lineNumber    =    stack.size();    	non-compiled	[CE]  	75	None	replace
459	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_EXP_DIGIT);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_EXP_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_EXP_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	50	None	replace
460	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DIGIT);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DIGIT);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	50	None	replace
461	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	25	None	replace
462	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	25	None	replace
463	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	25	None	replace
464	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  onEof;  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
465	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  onEof;  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
466	[BUG]  [BUGGY]  if(!lenient  &&  stack.size()  >  0)  {  throw  onEof;  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  stack.size()  >  0)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  stack.size()  >  0)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
467	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_ON_CLOSE))  {  throw  onEof;  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_ON_CLOSE))  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_ON_CLOSE))  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
468	[BUG]  [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_KEY))  {  throw  onEof;  }  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_KEY))  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  isEnabled(Feature.QUOTE_LENING_KEY))  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
469	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
470	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_EXP_DIGIT);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
471	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
472	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DEECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
473	[BUG]  [BUGGY]  safeGet(buffer,  0))  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  safeGet(buffer,  0))  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	safeGet(buffer,  0))  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
474	[BUG]  [BUGGY]  safeGet(buffer,  0))  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  safeGet(buffer,  0))  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	safeGet(buffer,  0))  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
475	[BUG]  [BUGGY]  safeGet(buffer,  0)>  0)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  safeGet(buffer,  0)>  0)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	safeGet(buffer,  0)>  0)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('ufffd');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
476	[BUG]  [BUGGY]  parent  =  parent.getParent();  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  parent  =  parent.getParent();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	parent  =  parent.getParent();	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
477	[BUG]  [BUGGY]  safeGet(buffer,  0)>  0)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  safeGet(buffer,  0)>  0)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	safeGet(buffer,  0)>  0)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
478	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	47	None	replace
479	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  cannot  be  lenient. ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  cannot  be  lenient. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  cannot  be  lenient. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	47	None	replace
480	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  should  not  be  null. ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  should  not  be  null. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  should  not  be  null. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	47	None	replace
481	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON, ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	7	None	replace
482	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ",  new  String[]  {  }  );  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	7	None	replace
483	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	35	None	replace
484	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: "  +  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	35	None	replace
485	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	64	None	replace
486	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	64	None	replace
487	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(buffer[i]  ==  null)  {  buffer[i]  =  Integer.toString(  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(buffer[i]  ==  null)  {  buffer[i]  =  Integer.toString(  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(buffer[i]  ==  null)  {  buffer[i]  =  Integer.toString(	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
488	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(buffer[i]!=  null)  {  buffer[i]  =  Integer.toString(  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices();  if(buffer[i]!=  null)  {  buffer[i]  =  Integer.toString(  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices();  if(buffer[i]!=  null)  {  buffer[i]  =  Integer.toString(	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
489	[BUG]  [BUGGY]  if(!lenient)  {  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient)  {  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  throw    new    IllegalArgumentException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	30	None	replace
490	[BUG]  [BUGGY]  if(!lenient)  {  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient)  {  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient)  {  throw  new  IllegalStateException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON ");  }	  throw    new    IllegalStateException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	4	None	replace
491	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  null);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  null);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  malformed  JSON ",  null);	  throw    syntaxError(   "Use    JSONReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	48	None	replace
492	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  true)to  accept  empty  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  true)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true,  true)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
493	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
494	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
495	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  +  lenient);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
496	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  +  c);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  +  c);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON "  +  c);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    c);    	non-compiled	[CE]  	12	None	replace
497	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  cannot  be  lenient. ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  cannot  be  lenient. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  cannot  be  lenient. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	27	None	replace
498	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  new  String[]  {  }  );  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	59	None	replace
499	[BUG]  [BUGGY]  bucket  ==  null)  {  throw  onEof();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket  ==  null)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket  ==  null)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
500	[BUG]  [BUGGY]  bucket!=  null)  {  throw  onEof();  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  bucket!=  null)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	bucket!=  null)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
501	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
502	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  toString());  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  toString());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  toString());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
503	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getSourceName());  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getSourceName());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getSourceName());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
504	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL,  negative);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL,  negative);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL,  negative);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL,   ");    	non-compiled	[CE]  	90	None	replace
505	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL,   ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL,   ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DIGIT,  NUMBER_CHAR_DECIMAL,   ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL,   ");    	non-compiled	[CE]  	90	None	replace
506	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  lenient);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    lenient);    	non-compiled	[CE]  	91	None	replace
507	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ",  lenient);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ",  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative, ",  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    lenient);    	non-compiled	[CE]  	91	None	replace
508	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices(pathNames);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices(pathNames);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices(pathNames);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  ++c)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    ++c)    {    return;    }    	non-compiled	[CE]  	15	None	replace
509	[BUG]  [BUGGY]  ((  lenient  &&  buffer.length  >  0)||(stack[0].length()  ==  0)));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  lenient  &&  buffer.length  >  0)||(stack[0].length()  ==  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  lenient  &&  buffer.length  >  0)||(stack[0].length()  ==  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
510	[BUG]  [BUGGY]  ((  stack[0]  &&  buffer.length  >  0)||(stack[0].length()  ==  0)));  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  stack[0]  &&  buffer.length  >  0)||(stack[0].length()  ==  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  stack[0]  &&  buffer.length  >  0)||(stack[0].length()  ==  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
511	[BUG]  [BUGGY]  in.copyCurrentStructure(newPathIndices);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  in.copyCurrentStructure(newPathIndices);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.copyCurrentStructure(newPathIndices);	  in.skipChildren();    	non-compiled	[CE]  	72	None	replace
512	[BUG]  [BUGGY]  in.copyCurrentStructure(in);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  in.copyCurrentStructure(in);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.copyCurrentStructure(in);	  in.skipChildren();    	non-compiled	[CE]  	72	None	replace
513	[BUG]  [BUGGY]  in.copyCurrentStructure(null);  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  in.copyCurrentStructure(null);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.copyCurrentStructure(null);	  in.skipChildren();    	non-compiled	[CE]  	72	None	replace
514	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	54	None	replace
515	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
516	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
517	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  getMessage());  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
518	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  lenient);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON: "  +  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
519	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON: ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
520	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  + "IllegalArgumentException: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  + "IllegalArgumentException: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON: "  + "IllegalArgumentException: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	23	None	replace
521	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof  ==  NON_EXECUTE_PREFIX)  {  throwOnEof;  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof  ==  NON_EXECUTE_PREFIX)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof  ==  NON_EXECUTE_PREFIX)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
522	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof  <  =  16)  {  throwOnEof;  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof  <  =  16)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof  <  =  16)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
523	[BUG]  [BUGGY]  if(lenient  ==  false)  {  throwOnEof;  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(lenient  ==  false)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(lenient  ==  false)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
524	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof  <  =  127)  {  throwOnEof;  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof  <  =  127)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof  <  =  127)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
525	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof  >  0.0)  {  throwOnEof;  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof  >  0.0)  {  throwOnEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof  >  0.0)  {  throwOnEof;  }	  if(!lenient)    {    throwOnEof;    }    	non-compiled	[CE]  	67	None	replace
526	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON: ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  empty  JSON: ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	6	None	replace
527	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON: ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	6	None	replace
528	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  c);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  c);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  c);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    c);    	non-compiled	[CE]  	12	None	replace
529	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON: ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
530	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON: ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
531	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  new  JSON: ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  new  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  new  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
532	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON: ");  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	52	None	replace
533	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ",  new  String[]  {  }  );  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	57	None	replace
534	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
535	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON_LENAME ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON_LENAME ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON_LENAME ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	81	None	replace
536	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON, ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true,  false)to  accept  malformed  JSON, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	55	None	replace
537	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false,  false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	46	None	replace
538	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	79	None	replace
539	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON: ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	33	None	replace
540	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  negative  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	51	None	replace
541	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  unlenient  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  unlenient  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(null)to  accept  unlenient  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	51	None	replace
542	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value, ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON,  expected  value, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON,    expected    value   ");    	non-compiled	[CE]  	88	None	replace
543	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	28	None	replace
544	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	28	None	replace
545	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  - ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  - ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  - ");	  Throwables.throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	2	None	replace
546	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON: ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	35	None	replace
547	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  new  JSON: ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  new  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  new  JSON: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	35	None	replace
548	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL,   ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL,   ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL,   ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL,   ");    	non-compiled	[CE]  	90	None	replace
549	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL,   ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL,   ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL,   ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL,   ");    	non-compiled	[CE]  	90	None	replace
550	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  0);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    0);    	non-compiled	[CE]  	39	None	replace
551	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ",  0);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative, ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    0);    	non-compiled	[CE]  	39	None	replace
552	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  0);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  0);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    0);    	non-compiled	[CE]  	39	None	replace
553	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
554	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  NUMBER_CHAR_DECIMAL   ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  NUMBER_CHAR_DECIMAL   ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  NUMBER_CHAR_DECIMAL   ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
555	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  NUMBER_CHAR_DECIMAL, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  NUMBER_CHAR_DECIMAL, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative  JSON,  NUMBER_CHAR_DECIMAL, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative    JSON   ");    	non-compiled	[CE]  	65	None	replace
556	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  false)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false,    false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	41	None	replace
557	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  rejected  JSON ");  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  rejected  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  rejected  JSON ");	  new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	53	None	replace
558	[BUG]  [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalArgumentException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");	  new    IllegalArgumentException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	53	None	replace
559	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON ");	  throw    new    IllegalArgumentException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	30	None	replace
560	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");	  throw    new    IllegalArgumentException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	30	None	replace
561	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    new    IllegalArgumentException(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	30	None	replace
562	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
563	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	34	None	replace
564	[BUG]  [BUGGY]  [Delete]  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  [Delete]  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	[Delete]	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
565	[BUG]  [BUGGY]  readOnEof()  {  throwOnEof  Reader.throwAsIOException( " ");  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  readOnEof()  {  throwOnEof  Reader.throwAsIOException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	readOnEof()  {  throwOnEof  Reader.throwAsIOException( " ");  }	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
566	[BUG]  [BUGGY]  îndeclaration(throwOnEof  Reader)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  îndeclaration(throwOnEof  Reader)  {  throwOnEof  Reader.throwAsIOException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	îndeclaration(throwOnEof  Reader)  {  throwOnEof  Reader.throwAsIOException( " ");  }	  if(!lenient)    {    throwOnEof    Reader.throwAsIOException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
567	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [CE]  not  a  statement  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  not  a  statement	64	None	replace
568	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  empty  JSON ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    empty    JSON   ");    	non-compiled	[CE]  	7	None	replace
569	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON. ");  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  empty  JSON. ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	5	None	replace
570	[BUG]  [BUGGY]  ((  charsLoaded  &&  stack.length  >  0)||(stack[0].length()  ==  0)));  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  charsLoaded  &&  stack.length  >  0)||(stack[0].length()  ==  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  charsLoaded  &&  stack.length  >  0)||(stack[0].length()  ==  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
571	[BUG]  [BUGGY]  ((  charsLoaded  &&  stack.length  >  0)||(stack[0].length()!=  0)));  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  ((  charsLoaded  &&  stack.length  >  0)||(stack[0].length()!=  0)));  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	((  charsLoaded  &&  stack.length  >  0)||(stack[0].length()!=  0)));	  ((    charsLoaded    &&    buffer.length    >    0)||(stack[0].length()    ==    0)));    	non-compiled	[CE]  	68	None	replace
572	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  EOF);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  EOF);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  EOF);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
573	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",!lenient);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",!lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",!lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
574	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  ZERO);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  ZERO);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative ",  ZERO);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    negative   ");    	non-compiled	[CE]  	62	None	replace
575	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  asPath());  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  asPath());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  asPath());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
576	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage(),  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage(),  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  getMessage(),  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
577	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON: "  +  getMessage());  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON: "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  empty  JSON: "  +  getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
578	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  message);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  message);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  malformed  JSON: "  +  message);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   "    +    getMessage());    	non-compiled	[CE]  	26	None	replace
579	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON: ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	25	None	replace
580	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON: ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON: ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON:   ");    	non-compiled	[CE]  	25	None	replace
581	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false,  true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false,    true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	43	None	replace
582	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  - ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  - ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON  - ");	  Throwables.throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	29	None	replace
583	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative,  expected  NUMBER_CHAR_DECIMAL);  [CE]  empty  character  literal  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  negative,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  empty  character  literal	82	None	replace
584	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [CE]  empty  character  literal  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  empty  character  literal	82	None	replace
585	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  next  NUMBER_CHAR_DECIMAL);  [CE]  empty  character  literal  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  next  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  next  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  empty  character  literal	82	None	replace
586	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [CE]  empty  character  literal  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  MIN_INCOMPLETE_INTEGER);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON,    expected    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  empty  character  literal	82	None	replace
587	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ");  [CE]  empty  character  literal  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative   ");    	non-compiled	[CE]  empty  character  literal	36	None	replace
588	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  rejected  JSON ");  [CE]  empty  character  literal  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  rejected  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  rejected  JSON ");	  new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  empty  character  literal	60	None	replace
589	[BUG]  [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ");  [CE]  empty  character  literal  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  negative  JSON ");	  new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  empty  character  literal	60	None	replace
590	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON, ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	21	None	replace
591	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative,   ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative,   ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative,   ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,   ");    	non-compiled	[CE]  	21	None	replace
592	[BUG]  [BUGGY]  while(!lenient)  {  throwOnEof  =  true;  }  [CE]  empty  character  literal  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  while(!lenient)  {  throwOnEof  =  true;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	while(!lenient)  {  throwOnEof  =  true;  }	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  empty  character  literal	73	None	replace
593	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  empty  character  literal  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Thread.currentThread().interrupt();	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  empty  character  literal	73	None	replace
594	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Thread.currentThread().getContextClassLoader().reset();	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  	73	None	replace
595	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  throwOnEof  =  true;  [CE]  [FE]                                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Thread.currentThread().interrupt();  throwOnEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Thread.currentThread().interrupt();  throwOnEof  =  true;	  if(!lenient)    {    throwOnEof    =    true;    }    	non-compiled	[CE]  	73	None	replace
596	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  empty  JSON. ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  empty  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  	47	None	replace
597	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  malformed  JSON,  NUMBER_CHAR_DECIMAL,  negative);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	85	None	replace
598	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL);	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	85	None	replace
599	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL  +  1);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL  +  1);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON ",  NUMBER_CHAR_DECIMAL  +  1);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	50	None	replace
600	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ",  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ",  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ",  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	50	None	replace
601	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [CE]  empty  character  literal  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON.   ");    	non-compiled	[CE]  empty  character  literal	9	None	replace
602	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(undefined)to  accept  negative, ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(undefined)to  accept  negative, ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(undefined)to  accept  negative, ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,   ");    	non-compiled	[CE]  	37	None	replace
603	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [CE]  empty  character  literal  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  malformed  JSON. ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON.   ");    	non-compiled	[CE]  empty  character  literal	20	None	replace
604	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [CE]  empty  character  literal  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  empty  character  literal	83	None	replace
605	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  rejected  JSON ");  [CE]  not  a  statement  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  rejected  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  rejected  JSON ");	  Throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  not  a  statement	83	None	replace
606	[BUG]  [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");  [CE]  empty  character  literal  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  empty  character  literal	93	None	replace
607	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON,  expecting  a  value ");  [CE]  empty  character  literal  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON,  expecting  a  value ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  empty  character  literal	93	None	replace
608	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON,  expected  NUMBER_CHAR_DECIMAL);  [CE]  empty  character  literal  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON,  expected  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative  JSON,  expected  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  empty  character  literal	93	None	replace
609	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  new  String[]  {  }  );  [CE]  empty  character  literal  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  empty  character  literal	59	None	replace
610	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  missing  line ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  missing  line ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  empty  JSON,  missing  line ");	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    empty    JSON   ");    	non-compiled	[CE]  	10	None	replace
611	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  lenient);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative,  lenient);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ",    lenient);    	non-compiled	[CE]  	91	None	replace
612	[BUG]  [BUGGY]  thrown  onEof  =  true;  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  thrown  onEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	thrown  onEof  =  true;	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
613	[BUG]  [BUGGY]  Throw  onEof  =  true;  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throw  onEof  =  true;  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throw  onEof  =  true;	  if(!lenient)    {    throw    onEof    =    true;    }    	non-compiled	[CE]  	77	None	replace
614	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.close();  }  else  {  throw  new  IllegalStateException( " ");  }	  in.close();    	non-compiled	[CE]  	74	None	replace
615	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.close();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  in.close();    	non-compiled	[CE]  	74	None	replace
616	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  buffer.close();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.close();  }  else  {  buffer.close();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.close();  }  else  {  buffer.close();  }	  in.close();    	non-compiled	[CE]  	74	None	replace
617	[BUG]  [BUGGY]  if(in!=  null)  {  in.close();  }  else  if(!lenient)  {  return;  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(in!=  null)  {  in.close();  }  else  if(!lenient)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(in!=  null)  {  in.close();  }  else  if(!lenient)  {  return;  }	  in.close();    	non-compiled	[CE]  	74	None	replace
618	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer  =  new  StringBuffer();  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(buffer!=  null)  {  buffer  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(buffer!=  null)  {  buffer  =  new  StringBuffer();  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
619	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  buffer  =  new  StringBuffer();  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  buffer  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(buffer  ==  null  ||  buffer.length()  ==  0)  {  buffer  =  new  StringBuffer();  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('ufffd');    }    	non-compiled	[CE]  	70	None	replace
620	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
621	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  expecting  a  value ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  	87	None	replace
622	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  expected  value ");  [CE]  not  a  statement  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON,  expected  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  not  a  statement	87	None	replace
623	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  1);  [CE]  empty  character  literal  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  1);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true)to  accept  empty  JSON ",  1);	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    empty    JSON   ",    0);    	non-compiled	[CE]  empty  character  literal	11	None	replace
624	[BUG]  [BUGGY]  int[]  newPathIndices  =  getPathIndices(c);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [CE]  empty  character  literal  [FE]                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  getPathIndices(c);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  getPathIndices(c);  if(newPathIndices!=  null)  {  for(int  c  =  0;  c  <  newPathIndices.length;  c++)  {  return;  }	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    c    =    0;    c    <    newPathIndices.length;    c++)    {    return;    }    	non-compiled	[CE]  empty  character  literal	14	None	replace
625	[BUG]  [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  lenient);  [CE]  empty  character  literal  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  lenient);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Throwables.throw(syntaxError( "Use  JsonReader.setLenient(true)to  accept  negative ",  lenient);	  Throwables.throw(syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative   ");    	non-compiled	[CE]  empty  character  literal	63	None	replace
626	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof()  >  0)  {  throw  onEof();  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof()  >  0)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof()  >  0)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
627	[BUG]  [BUGGY]  if(!lenient  &&  stack.size()  >  0)  {  throw  onEof();  }  [CE]  [FE]                              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  stack.size()  >  0)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  stack.size()  >  0)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
628	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof())  {  throw  onEof();  }  [CE]  empty  character  literal  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof())  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof())  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  empty  character  literal	76	None	replace
629	[BUG]  [BUGGY]  if(!lenient  &&  buffer.length  >  0)  {  throw  onEof();  }  [CE]  empty  character  literal  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  buffer.length  >  0)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  buffer.length  >  0)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  empty  character  literal	76	None	replace
630	[BUG]  [BUGGY]  while(!lenient)  {  throw  onEof();  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  while(!lenient)  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	while(!lenient)  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  	76	None	replace
631	[BUG]  [BUGGY]  if(!lenient  &&  buffer.isEmpty())  {  throw  onEof();  }  [CE]  empty  character  literal  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  buffer.isEmpty())  {  throw  onEof();  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  buffer.isEmpty())  {  throw  onEof();  }	  if(!lenient)    {    throw    onEof();    }    	non-compiled	[CE]  empty  character  literal	76	None	replace
632	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  negative: ");  [CE]  empty  character  literal  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  negative: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true,  true)to  accept  negative: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  empty  character  literal	40	None	replace
633	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(undefined)to  accept  negative: ");  [CE]  empty  character  literal  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(undefined)to  accept  negative: ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(undefined)to  accept  negative: ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative:   ");    	non-compiled	[CE]  empty  character  literal	40	None	replace
634	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  expecting  a  value ");  [CE]  empty  character  literal  [FE]                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  expecting  a  value ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  empty  character  literal	95	None	replace
635	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON  ' "  +  getMessage());  [CE]  empty  character  literal  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON  ' "  +  getMessage());  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON  ' "  +  getMessage());	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  empty  character  literal	95	None	replace
636	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  expected  value ");  [CE]  empty  character  literal  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  expected  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  illegal  JSON,  expected  value ");	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    illegal    JSON   ");    	non-compiled	[CE]  empty  character  literal	95	None	replace
637	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ",  new  String[]  {  }  );  [CE]  empty  character  literal  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  empty  character  literal	66	None	replace
638	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  new  String[]  {  }  );  [CE]  empty  character  literal  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  malformed  JSON,  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  empty  character  literal	66	None	replace
639	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  new  JSON ",  new  String[]  {  }  );  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  new  JSON ",  new  String[]  {  }  );  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  new  JSON ",  new  String[]  {  }  );	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ",    new    String[]    {    }    );    	non-compiled	[CE]  	66	None	replace
640	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof  >  0)  {  throw  onEof;  }  [CE]  [FE]                                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof  >  0)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof  >  0)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
641	[BUG]  [BUGGY]  if(!lenient  &&  buffer.length  >  0)  {  throw  onEof;  }  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  buffer.length  >  0)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  buffer.length  >  0)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
642	[BUG]  [BUGGY]  if(lenient  ==  false)  {  throw  onEof;  }  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(lenient  ==  false)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(lenient  ==  false)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
643	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof  <  =  16)  {  throw  onEof;  }  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof  <  =  16)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof  <  =  16)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
644	[BUG]  [BUGGY]  if(!lenient  &&  throwOnEof)  {  throw  onEof;  }  [CE]  [FE]                                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(!lenient  &&  throwOnEof)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(!lenient  &&  throwOnEof)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
645	[BUG]  [BUGGY]  while(!lenient)  {  throw  onEof;  }  [CE]  [FE]                                          MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  while(!lenient)  {  throw  onEof;  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	while(!lenient)  {  throw  onEof;  }	  if(!lenient)    {    throw    onEof;    }    	non-compiled	[CE]  	78	None	replace
646	[BUG]  [BUGGY]  in.write(buffer,  0,  pos);  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  in.write(buffer,  0,  pos);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.write(buffer,  0,  pos);	  in.skipChildren();    	non-compiled	[CE]  	72	None	replace
647	[BUG]  [BUGGY]  in.write(buffer,  0,  0);  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  in.write(buffer,  0,  0);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	in.write(buffer,  0,  0);	  in.skipChildren();    	non-compiled	[CE]  	72	None	replace
648	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  negative,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
649	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  new  JSON(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  new  JSON(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(true)to  accept  new  JSON(NUMBER_CHAR_DECIMAL,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(true)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	89	None	replace
650	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative.. ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative.. ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative.. ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative.   ");    	non-compiled	[CE]  	38	None	replace
651	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative,  NUMBER_CHAR_DECIMAL);  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(false)to  accept  negative,  NUMBER_CHAR_DECIMAL);	  throw    syntaxError(   "Use    JSONReader.setLenient(false)to    accept    malformed    JSON,    NUMBER_CHAR_DECIMAL);    	non-compiled	[CE]  	94	None	replace
652	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [CE]  [FE]                            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	if(buffer  ==  null  ||  buffer.length()  ==  0)  {  buffer  =  new  StringBuffer();  }  else  {  buffer.append('n');  }	  if(buffer    ==    null)    {    buffer    =    new    StringBuffer();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  	69	None	replace
653	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ");  [CE]  [FE]                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  illegal  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	54	None	replace
654	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  unlenient  JSON ");  [CE]  [FE]                        MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  unlenient  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalArgumentException( "Use  JsonReader.setLenient(null)to  accept  unlenient  JSON ");	  throw    new    IllegalArgumentException(   "Use    JsonReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	54	None	replace
655	[BUG]  [BUGGY]  int[]  newPathIndices  =  stack.getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.toString  [CE]  [FE]                                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  stack.getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.toString  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  stack.getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.toString	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
656	[BUG]  [BUGGY]  Integer.toString(  [CE]  [FE]                                    MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  Integer.toString(  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	Integer.toString(	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
657	[BUG]  [BUGGY]  int[]  newPathIndices  =  stack.getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.to  [CE]  [FE]                                      MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  int[]  newPathIndices  =  stack.getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.to  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	int[]  newPathIndices  =  stack.getPathIndices();  if(newPathIndices!=  null)  {  for(int  i  =  0,  len  =  newPathIndices.length;  i  <  len;  ++i)  {  buffer[i]  =  Integer.to	  int[]    newPathIndices    =    getPathIndices();    if(newPathIndices!=    null)    {    for(int    i    =    0,    len    =    newPathIndices.length;    i    <    len;    ++i)    {    buffer[i]    =    Integer.toString(    	non-compiled	[CE]  	18	None	replace
658	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [CE]  [FE]                  MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  new  IllegalStateException( "Use  JsonReader.setLenient(false)to  accept  illegal  JSON ");	  throw    new    IllegalStateException(   "Use    JsonReader.setLenient(false)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	1	None	replace
659	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  expecting  a  value ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(false)to  accept  negative  JSON,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(false)to    accept    negative    JSON   ");    	non-compiled	[CE]  	86	None	replace
660	[BUG]  [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  unlenient  JSON ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  unlenient  JSON ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JSONReader.setLenient(null)to  accept  unlenient  JSON ");	  throw    syntaxError(   "Use    JSONReader.setLenient(null)to    accept    malformed    JSON   ");    	non-compiled	[CE]  	48	None	replace
661	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  missing  line ");  [CE]  [FE]            MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  missing  line ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  missing  line ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
662	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL   ");  [CE]  [FE]              MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL   ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(null)to  accept  empty  JSON,  NUMBER_CHAR_DECIMAL   ");	  throw    syntaxError(   "Use    JsonReader.setLenient(null)to    accept    empty    JSON   ");    	non-compiled	[CE]  	61	None	replace
663	[BUG]  [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  expecting  a  value ");  [CE]  [FE]                MalformedJsonException      [CONTEXT]      private  void  checkLenient()  throws  IOException  {  if  (!lenient)  {      [BUGGY]  throw  syntaxError( "Use  JsonReader.setLenient(true,  expecting  a  value ");  [BUGGY]      }  }  [CLASS]  JsonReader  1  [METHOD]  checkLenient  [RETURN_TYPE]  void  [VARIABLES]  boolean  charsLoaded  fitsInLong  lenient  negative  throwOnEof  Reader  in  int[]  newPathIndices  newStack  pathIndices  stack  String  keyword  keywordUpper  peekedString  result  String[]  newPathNames  pathNames  long  MIN_INCOMPLETE_INTEGER  newValue  peekedLong  result  value  int  NUMBER_CHAR_DECIMAL  NUMBER_CHAR_DIGIT  NUMBER_CHAR_EXP_DIGIT  NUMBER_CHAR_EXP_E  NUMBER_CHAR_EXP_SIGN  NUMBER_CHAR_FRACTION_DIGIT  NUMBER_CHAR_NONE  NUMBER_CHAR_SIGN  PEEKED_BEGIN_ARRAY  PEEKED_BEGIN_OBJECT  PEEKED_BUFFERED  PEEKED_DOUBLE_QUOTED  PEEKED_DOUBLE_QUOTED_NAME  PEEKED_END_ARRAY  PEEKED_END_OBJECT  PEEKED_EOF  PEEKED_FALSE  PEEKED_LONG  PEEKED_NONE  PEEKED_NULL  PEEKED_NUMBER  PEEKED_SINGLE_QUOTED  PEEKED_SINGLE_QUOTED_NAME  PEEKED_TRUE  PEEKED_UNQUOTED  PEEKED_UNQUOTED_NAME  c  count  i  l  last  length  limit  lineNumber  lineStart  minimum  newTop  p  peekStack  peeked  peekedNumberLength  peeking  pos  result  stackSize  start  total  char[]  NON_EXECUTE_PREFIX  buffer  	projects/Gson4/gson/src/main/java/com/google/gson/stream/JsonReader.java	0.2182178902359924	1422	1422	3	replace	throw  syntaxError( "Use  JsonReader.setLenient(true,  expecting  a  value ");	  throw    syntaxError(   "Use    JsonReader.setLenient(true)to    accept    negative,    expecting    a    value   ");    	non-compiled	[CE]  	92	None	replace
