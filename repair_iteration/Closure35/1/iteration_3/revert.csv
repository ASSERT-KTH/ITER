projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(str.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.getRecordType(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.recordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraintObj.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordObj.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(record.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObj.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraintObj.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());timeout
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordType.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraintObj,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraintObj,constraintType);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructor.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122timeout
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypetypeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());PropertyTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeconstraint=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjectType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());timeout
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypetypeToInfer=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTyperesultObjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());PropertyTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjectType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(boolean.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictByNotNullOrUndefined(),constraintObj,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraintObj,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getInstanceType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getConstructor();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getObjectType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeibjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(type,constraintObj));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(strObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraint.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restricted.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictedPropertyType.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraint.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypepropType=constraintObj.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraint.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeconstraint=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeconstraint=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeconstraintObj=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeconstraintObj=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeconstraintObjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeconstraintObjType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getConstructor();ObjectTypeobjType=constraintObj.getConstructor();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getConstructor();ObjectTypeiobjType=constraintObj.getConstructor();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getConstructor();ObjectTypeobjtype=constraintObj.getConstructor();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getConstructor();ObjectTypeconstraintObjType=constraintObj.getConstructor();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getConstructor();ObjectTypetypeToInfer=constraintObj.getConstructor();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getConstructor();ObjectTypeobjType=constraintstObj.getConstructor();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(record.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(str.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.recordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordType.recordByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.recordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraint.recordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraintObj.recordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined(),type,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined(),type,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(boolean.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(boolean.restrictByNotNullOrUndefined()||constraintObj.isRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());PropertyTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());PropertyTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());PropertyTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.cast(restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.cast(restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(syntacticScope.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(record.restrictByNotNullOrUndefined(),constraintObj,constraintType);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraintObj,null);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraintObj,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,type,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry,type,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj,constraint.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint,constraintObj.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getRecordType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraint.restrictByNotNullOrUndefined()||constraintObj.isRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraint.getPropertyType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraint.restrictByNotNullOrUndefined()||constraintObj.hasProperty(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraint.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(prop,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(type,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(type,null);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(type,property);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(scope,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(type,constraintObj),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(scope,constraintObj));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(constraintObj,type));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(type,constraintObj)+1);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(type,constraintObj),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(type,constraintObj,type));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.cast(ObjectType.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getObjectType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.getObjectType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj,constraint.getObjectType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=type.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.recordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypetypeToInfer=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypetypeToInfer=constraintObj.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122typeToInfer=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypetypeToInfer=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypepropType=constraintObj.getPropertyType(prop,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypepropType=constraintObj.getRecordType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypepropType=constraintObj.getPropertyType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNu
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.cast(constraint.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypepropType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint,constraintObj.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj,constraint.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj,type.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraintObj,constraint.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope,constraintObj.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint,type.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.defineInferredProperty(type,constraintObj));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry,constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope,constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,type,constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraintObj,type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraintObj.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeibjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeibjType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.getInstanceType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj,constraint.getInstanceType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=type.getInstanceType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictByNotNullOrUndefined(),type,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.getNativeType(UNKNOWN_TYPE));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.getPropertyType(type));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.getOwnPropertyType(type));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(compiler.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(compiler,constraint.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(register.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(record.restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraint.restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(str.restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,null);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined(),constraint,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj,constraint.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordObj.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraintObj,typeToInfer);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraintObj,type,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(prop,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(type,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(type,null);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(type,property);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(type,prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectType[]objType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictedPropertyType.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictedPropertyType.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictedPropertyType.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getConstructor();timeout
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.getConstructor();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getRawType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getRecordType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getRecordType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordByNotNullOrUndefined(),constraintObj,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined(),constraintObj,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(record.restrictByNotNullOrUndefined(),constraintObj,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraint.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObj,constraint.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObjinstanceofObjectType?(ObjectType)constraintObj:constraint.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObjinstanceofObjectType?(ObjectType)type:constraint.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.getRecordType(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.getRecordType(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(str.getRecordType(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope.getRecordType(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(straint.getRecordType(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraint.getPropertyType(prop,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypetypeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypetypeToInfer=constraint.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122typeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictBy
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(0);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraint.getPropertyType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(strObj.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraint.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry,constraint.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry,constraint.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope,constraint.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraint.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(compiler,constraint.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),constraintObj,null);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),constraintObj,constraintType);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=type.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.restrictByNotNullOrUndefined()||constraintObj.isRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraints.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(value);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(name);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(this);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjectType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypetypeToInfer=constraint.restrictByNotNullOrUndefined();ObjectTypeobjectType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraintObj.restrictBy
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraintObj.restrict
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraintObj.restrictByNot
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(str.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(straint.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restricted.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(str.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recorded.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(record.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.cast(restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(register.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(compiler.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(markupScope.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry,constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(scope,constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(register,constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(compiler,constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined(),type,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructor.restrictByNotNullOrUndefined(),constraintObj,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),constraintObj,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictByNotNullOrUndefined(),constraintObj,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(record.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(type,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTyperesultObjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeconstraintObjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypetypeToInfer=constraint.restrictByNotNullOrUndefined();ObjectTyperesultObjType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraint.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraintObj,constraint.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraintObj.type.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraintObj.getRecordType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=type.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjectType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjectType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(prop,null);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(prop)+1;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getObjectType(scope);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getObjectType(registry);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(nullObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintOP.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getImplicitPrototype();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObj.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(name,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined(),constraintObj,constraints);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(recordObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(type,constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,type,constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraintObj,constraint.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(name,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypetypeToInfer=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectTypetypeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypetypeToInfer=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordObj.recordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.recordByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type!=null){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNu
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type!=null){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNu
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type==null){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(scope);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getPropertyType(null);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());PropertyTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictByNotNullOrUndefined());PropertyTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getConstructor();ObjectTypeobjType=constraintObj.getConstructor());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypepropType=constraintObj.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraints.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintOP.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordObj,constraint.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraintObj.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(recordType,constraintObj));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(null,constraintObj));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(type,constraintObj)||constraintObj!=null);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyObj.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.restrictByUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedObj.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(strObj.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictedObj.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(typeToInfer);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(typeObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),constraintObj,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj<null?null:constraintObj.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj!=null?constraintObj.getRecordType():null;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj}?constraint.getRecordType():null;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj<null?null:constraint.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObj!=null?constraintObj.getRecordType():null;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObj.recordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObj!=null?constraintObj.getRecordType():type;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,type.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(strObj.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),constraintObj;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined(),constraintObj+1);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type,constraintObj.restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordObj.getRecordType(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(strObj.getRecordType(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(straint.getRecordType(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type!=null){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNu
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type!=null){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNu
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type==null){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(resultObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(boolean.valueOf(type.restrictByNotNullOrUndefined()));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(boolean.valueOf(type.isRecordType()));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintobj.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=type.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraints.restrictByNotNullOrUndefined();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type!=null){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraint.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type!=null){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type!=null){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraint.restrictByNotNullOrUndefined());}else{
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjectType=ObjectType.cast(typeToInfer);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(name);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getPropertyType(value);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordByNotNullOrUndefined(),constraintObj,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintobj.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj<null?null:constraintObj.getInstanceType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj!=null?constraintObj.getInstanceType():null;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj<null?null:constraint.getInstanceType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());PropertyTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraintObj.getRecordType(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(strictt.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.restrictByNotNullOrUndefined()||constraintObj.isRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraintObj.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(functionScope.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registeredPropertyType.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraintObj<null?null:constraintObj.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraintObj!=null?constraintObj.getRecordType():null;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraintObj==null?null:constraintObj.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraintObj}?constraint.getRecordType():null;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122TypeobjType=constraintObj!=null?constraintObj.getRecordType():type;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraint.getOwnPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj,constraint.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());}else{
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined()
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordt.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(record.getRecordType(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(boolean.valueOf(type.isUnknownType()));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(boolean.isRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(boolean.TRUE.equals(type));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraintObj.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraintObj.restrictByNotNu
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypepropType=ObjectType.cast(constraintObj.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(strictt.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(object.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypetypeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypetypeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypetypeToInfer=ObjectType.cast(constraint.restrictByNotNullOrUndefined());}else{
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraintObj.restrictBy
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraint.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectType[]objType=ObjectType.cast(constraint.restrictByNotNu
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTyperesultObjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTyperesultObjType=ObjectType.cast(constraintObj.restrictBy
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTyperesultObjType=ObjectType.cast(constraintObj.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectTyperesultObjType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeconstraint=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.getNativeType(UNKNOWN_TYPE),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registry.getOwnPropertyType(type),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=type.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type!=null){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type==null){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restrictedPropertyType.restrictByUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypepropType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=ObjectType.cast(restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraint.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type!=null){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictBy
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type==null){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraintObj.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=type.getPropertyType(constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(limiter.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(type.getRecordType()));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.getRecordByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=ObjectType.cast(type.restrictByNotNullOrUndefined());ObjectTypeobjectType=ObjectType.cast(type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypetypeToInfer=constraint.restrictByNotNullOrUndefined();ObjectTypeobjectType=ObjectType.cast(typeToInfer);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(parent,constraint.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,type.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restricted.restrictByNotNullOrUndefined(),constraintObj,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(record.restrictByNotNullOrUndefined(),constraintObj,type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypepropType=type.getPropertyType(prop);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(type,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constructType(type,constraintObj));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constructType(type,constraint));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined(),type,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj.getOwnPropertyNames();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=type.getConstructor();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObj.inferPropertyType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypetypeToInfer=constraintObj.getRecordType(type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=type.getPropertyType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypepropType=constraintObj.getOwnPropertyType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(getNativeType(UNKNOWN_TYPE));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(getNativeType(JSTypeNative.UNKNOWN_TYPE));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraint,type.getRecordType();
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordObj,type.getRecordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(dataset.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraint.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(limiter.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraint.restrictByNotNullOrUndefined());}
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraint.restrictByNotNullOr
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122if(type.isRecordType()){ObjectTypeobjType=ObjectType.cast(constraint.restrictByNotNullOrUndefined());ObjectTypeobjtype=ObjectType.cast(constraint.restrictByNotNullOrUndefined());}else{
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordt.getRecordType(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(str.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122JSTypeobjType=ObjectType.cast(constructType(type.restrictByNotNullOrUndefined()));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registeredPropertyTypes,constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(parent,constraintObj.restrictByNotNullOrUndefined(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restricte.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restricted.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.getUnknownType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.defineInferredProperty(type,constraint));
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,constraint.restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(object.restrictByNotEmptyOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restricted.restrictByNotNullOrUndefined(),type);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(registered.restrictByNotNullOrUndefined(),constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(null,type.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(parent,constraint.restrictByNotNullOrUndefined());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.restrictByNotNullOrUndefined(),constraintObj,constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(recordedPropertyType.restrictByNotNullOrUndefined(),constraintObj,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(restricted.restrictByNotNullOrUndefined(),constraintObj,constraintObj);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(type.recordType(),constraint);
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=ObjectType.cast(record.recordType());
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=constraintObj!=null?constraintObj.getInstanceType():type;
projects/Closure35/src/com/google/javascript/jscomp/TypeInference.java1122ObjectTypeobjType=type.getObjectType();
