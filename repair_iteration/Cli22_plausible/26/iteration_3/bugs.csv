bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  this.arguments.iterator();	  Iterator    iter    =    arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
2	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  opt.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  <  String>  iter  =  opt.iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  <  String>  iter  =  opt.iterator();	  Iterator    <    String>    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  tokens.add(pos  +  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add(pos  +  1);  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add(pos  +  1);	  tokens.add(pos);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(token);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(token);  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  options.iterator();  tokens.add(token);	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  tokens.add( ",n ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add( ",n ");  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( ",n ");	  tokens.add(   ",   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
6	[BUG]  [BUGGY]  List  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  List  <  String>  iter  =  options.values().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	List  <  String>  iter  =  options.values().iterator();	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  List  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  List  <  String>  iter  =  options.keySet().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	List  <  String>  iter  =  options.keySet().iterator();	  Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  Iterator  iter  =  tokens.values().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  iter  =  tokens.values().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  tokens.values().iterator();	  Iterator    iter    =    tokens.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
9	[BUG]  [BUGGY]  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  iter  =  options.values().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	iter  =  options.values().iterator();	  iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
10	[BUG]  [BUGGY]  tokens.add( "- "  +  opt);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add( "- "  +  opt);  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( "- "  +  opt);	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  tokens.add( "-n ");  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add( "-n ");  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( "-n ");	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  tokens.add( "- "  +  pos);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add( "- "  +  pos);  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( "- "  +  pos);	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  0]);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  0]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	return(String[])tokens.toArray(new  String[tokens.size()  0]);	  return(String[])tokens.toArray(new    String[tokens.size()    1]);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
14	[BUG]  [BUGGY]  iter.set(pos,  options.size());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  iter.set(pos,  options.size());  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	iter.set(pos,  options.size());	  iter.set(pos,    options.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
15	[BUG]  [BUGGY]  iter.set(0,  options.size());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  iter.set(0,  options.size());  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	iter.set(0,  options.size());	  iter.set(pos,    options.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
16	[BUG]  [BUGGY]  Option  options  =  options.get(pos);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Option  options  =  options.get(pos);  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Option  options  =  options.get(pos);	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
17	[BUG]  [BUGGY]  (String[])options.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  (String[])options.toArray(new  String[tokens.size()  ]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	(String[])options.toArray(new  String[tokens.size()  ]);	  (String[])tokens.toArray(new    String[tokens.size()]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
18	[BUG]  [BUGGY]  (String[])tokens.toArray(new  String[tokens.size()  -  1]);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  (String[])tokens.toArray(new  String[tokens.size()  -  1]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	(String[])tokens.toArray(new  String[tokens.size()  -  1]);	  (String[])tokens.toArray(new    String[tokens.size()]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
19	[BUG]  [BUGGY]  (String[])tokens.toArray(new  String[tokens.size()  +  1]);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  (String[])tokens.toArray(new  String[tokens.size()  +  1]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	(String[])tokens.toArray(new  String[tokens.size()  +  1]);	  (String[])tokens.toArray(new    String[tokens.size()]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
20	[BUG]  [BUGGY]  tokens.add(getOptionValue());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add(getOptionValue());  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add(getOptionValue());	  tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
21	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(arguments[pos]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(arguments[pos]);  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  options.iterator();  tokens.add(arguments[pos]);	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
22	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }	  Iterator    iter    =    options.iterator();    tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
23	[BUG]  [BUGGY]  tokens.add( "-- ");  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add( "-- ");  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( "-- ");	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
24	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Option  options  =  options.getOptions();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Option  options  =  options.getOptions();	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  Ilerator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Ilerator  iter  =  options.values().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Ilerator  iter  =  options.values().iterator();	  Ilerator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
26	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Ilerator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Ilerator  <  String>  iter  =  options.keySet().iterator();	  Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
27	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Ilerator  <  String>  iter  =  options.values().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Ilerator  <  String>  iter  =  options.values().iterator();	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  tokens.add(getOptionName());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add(getOptionName());  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add(getOptionName());	  tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  return(String[])options.toArray(new  String[tokens.size()  0]);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  return(String[])options.toArray(new  String[tokens.size()  0]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	return(String[])options.toArray(new  String[tokens.size()  0]);	  return(String[])tokens.toArray(new    String[tokens.size()    1]);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
30	[BUG]  [BUGGY]  return(String[])opt.toArray(new  String[tokens.size()  1]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  return(String[])opt.toArray(new  String[tokens.size()  1]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	return(String[])opt.toArray(new  String[tokens.size()  1]);	  return(String[])tokens.toArray(new    String[tokens.size()    1]);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
31	[BUG]  [BUGGY]  tokens.add( ",  eatTheRest ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add( ",  eatTheRest ");  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( ",  eatTheRest ");	  tokens.add(   ",   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
32	[BUG]  [BUGGY]  (String[])opt.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  (String[])opt.toArray(new  String[tokens.size()  ]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	(String[])opt.toArray(new  String[tokens.size()  ]);	  (String[])tokens.toArray(new    String[tokens.size()]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
33	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  else  {  tokens.add(option);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  else  {  tokens.add(option);  }  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  else  {  tokens.add(option);  }	  Iterator    iter    =    options.iterator();    tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
34	[BUG]  [BUGGY]  if(stopAtNonOption)  {  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  for(int  pos  =  0;  pos  <  arguments.length;  pos++)  {  tokens.add(arguments[pos]);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  if(stopAtNonOption)  {  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  for(int  pos  =  0;  pos  <  arguments.length;  pos++)  {  tokens.add(arguments[pos]);  }  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  String[]  arguments  =  options.toArray(new  String[tokens.size()  ]);  for(int  pos  =  0;  pos  <  arguments.length;  pos++)  {  tokens.add(arguments[pos]);  }	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
35	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  options  =  options.iterator();  tokens.add(opt);  }  else  {  tokens.add(arguments[pos]);  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  if(stopAtNonOption)  {  Iterator  options  =  options.iterator();  tokens.add(opt);  }  else  {  tokens.add(arguments[pos]);  }  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  Iterator  options  =  options.iterator();  tokens.add(opt);  }  else  {  tokens.add(arguments[pos]);  }	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
36	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  else  {  tokens.add(arguments[pos]);  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  else  {  tokens.add(arguments[pos]);  }  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  else  {  tokens.add(arguments[pos]);  }	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
37	[BUG]  [BUGGY]  Iterator  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  tokens.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  tokens.iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  tokens.iterator();	  Iterator    iter    =    this.tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
38	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  tokens.keySet().iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  <  String>  iter  =  tokens.keySet().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  <  String>  iter  =  tokens.keySet().iterator();	  Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
39	[BUG]  [BUGGY]  return(String[])options.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  return(String[])options.toArray(new  String[tokens.size()  ]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	return(String[])options.toArray(new  String[tokens.size()  ]);	  return(String[])tokens.toArray(new    String[tokens.size()    1]);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
40	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
41	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
42	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
43	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  <  String>  iter  =  this.tokens.iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  <  String>  iter  =  this.tokens.iterator();	  Iterator    <    String>    iter    =    tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  tokens.add( ": ");  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add( ": ");  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( ": ");	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  arguments.iterator();  tokens.add(opt);  }  else  {  tokens.add(arguments[pos]);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  arguments.iterator();  tokens.add(opt);  }  else  {  tokens.add(arguments[pos]);  }  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  arguments.iterator();  tokens.add(opt);  }  else  {  tokens.add(arguments[pos]);  }	  if(stopAtNonOption)    {    Iterator    iter    =    options.iterator();    tokens.add(opt);    }    else    {    tokens.add(arguments[pos]);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
46	[BUG]  [BUGGY]  tokens.add( ",  null ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add( ",  null ");  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( ",  null ");	  tokens.add(   ",   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
47	[BUG]  [BUGGY]  tokens.add( ",  0 ");  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  tokens.add( ",  0 ");  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	tokens.add( ",  0 ");	  tokens.add(   ",   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
48	[BUG]  [BUGGY]  Iterator  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  null;  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  null;	  Iterator    iter    =    this.tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(option);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  Iterator    iter    =    options.iterator();    tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
50	[BUG]  [BUGGY]  Iterator  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  iter  =  options.entrySet().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  iter  =  options.entrySet().iterator();	  Iterator    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
51	[BUG]  [BUGGY]  (String[])this.options.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  (String[])this.options.toArray(new  String[tokens.size()  ]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	(String[])this.options.toArray(new  String[tokens.size()  ]);	  (String[])tokens.toArray(new    String[tokens.size()]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
52	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [BUGGY]      return  (String[])  tokens.toArray(new  String[tokens.size()]);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	Iterator  <  String>  iter  =  options.entrySet().iterator();	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  2]);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }      [BUGGY]  return(String[])tokens.toArray(new  String[tokens.size()  2]);  [BUGGY]      }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	158	158	2	replace	return(String[])tokens.toArray(new  String[tokens.size()  2]);	  return(String[])tokens.toArray(new    String[tokens.size()    +    1]);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
