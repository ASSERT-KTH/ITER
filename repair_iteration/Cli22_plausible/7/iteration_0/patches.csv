bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(stopTheRest)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]  else  if(stopTheRest)  {  [BUGGY]  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopTheRest)  {	else  if  (stopAtNonOption)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
2	[BUG]  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]  else  if(stopAtNonOption  &&  options.hasOption(token))  {  [BUGGY]  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  &&  options.hasOption(token))  {	else  if  (stopAtNonOption)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
3	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]  else  if(stopAtNonOption  ||  options.hasOption(token))  {  [BUGGY]  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  options.hasOption(token))  {	else  if  (stopAtNonOption)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
4	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(opt))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(opt))  {  [BUGGY]  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  tokens.contains(opt))  {	else  if  (stopAtNonOption)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
5	[BUG]  [BUGGY]    [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    [BUGGY]  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	  	else  if  (stopAtNonOption)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
6	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [BUGGY]  else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	    Iterator  <  String>  iter  =  options.iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	add
7	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	add
8	[BUG]  [BUGGY]    tokens.add(token);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    tokens.add(token);  [BUGGY]  else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	    tokens.add(token);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	add
9	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]  else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	    Iterator  <  String>  iter  =  arguments.iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	add
10	[BUG]  [BUGGY]    iter.remove();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    iter.remove();  [BUGGY]  else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	    iter.remove();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	add
11	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.getOptions().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    Iterator  <  String>  iter  =  options.getOptions().iterator();  [BUGGY]  else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	    Iterator  <  String>  iter  =  options.getOptions().iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	add
12	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    Iterator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]  else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	    Iterator  <  String>  iter  =  options.keySet().iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	add
13	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  tokens.add(opt);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  tokens.add(opt);  [BUGGY]  else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	    Iterator  <  String>  iter  =  options.iterator();  tokens.add(opt);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	add
14	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]    Iterator  <  String>  iter  =  options.entrySet().iterator();  [BUGGY]  else  if  (stopAtNonOption)    {  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	    Iterator  <  String>  iter  =  options.entrySet().iterator();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	add
15	[BUG]  [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(token))  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure  [CONTEXT]  if  (token.length()  ==  2  ||  options.hasOption(token))  {  processOptionToken(token,  stopAtNonOption);  }  else  {  burstToken(token,  stopAtNonOption);  }  }  [BUGGY]  else  if(stopAtNonOption  ||  tokens.contains(token))  {  [BUGGY]  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);  }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.3922322702763681	146	147	2	replace	else  if(stopAtNonOption  ||  tokens.contains(token))  {	else  if  (stopAtNonOption)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
