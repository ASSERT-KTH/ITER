bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(token.startsWith( "- ")&&  token.endsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "- ")&&  token.endsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")&&  token.endsWith( "-- "))  {	  if(token.startsWith(   "-   ")||    token.endsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  if(token.startsWith( "/ ")||  token.endsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "/ ")||  token.endsWith( "/ "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "/ ")||  token.endsWith( "/ "))  {	  if(token.startsWith(   "-   ")||    token.endsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  tokens.add( "- "  +  token);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add( "- "  +  token);  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "- "  +  token);	  tokens.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
4	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.endsWith( "- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "- ")||  token.endsWith( "- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")||  token.endsWith( "- "))  {	  if(token.startsWith(   "-   ")&&    token.endsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
5	[BUG]  [BUGGY]  if(token.startsWith( "/   ")&&  token.endsWith( "/   "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "/   ")&&  token.endsWith( "/   "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "/   ")&&  token.endsWith( "/   "))  {	  if(token.startsWith(   "-   ")&&    token.endsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
6	[BUG]  [BUGGY]  if(token.startsWith( ":   ")&&  token.endsWith( ":   "))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( ":   ")&&  token.endsWith( ":   "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( ":   ")&&  token.endsWith( ":   "))  {	  if(token.startsWith(   "-   ")&&    token.endsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
7	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments  ==  null)?  arguments.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(arguments  ==  null)?  arguments.iterator()  :  null;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments  ==  null)?  arguments.iterator()  :  null;	  Iterator    <    String>    iter    =(arguments!=    null)?    arguments.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
8	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null)?  arguments.iterator()  :  token;  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null)?  arguments.iterator()  :  token;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments!=  null)?  arguments.iterator()  :  token;	  Iterator    <    String>    iter    =(arguments!=    null)?    arguments.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
9	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null)?  tokens.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null)?  tokens.iterator()  :  null;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments!=  null)?  tokens.iterator()  :  null;	  Iterator    <    String>    iter    =(arguments!=    null)?    arguments.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
10	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( "=   "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  ||  token.startsWith( "=   "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( "=   "))  {	  if(token!=    null    &&    token.startsWith(   "=   "))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
11	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "=0 "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( "=0 "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "=0 "))  {	  if(token!=    null    &&    token.startsWith(   "=   "))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
12	[BUG]  [BUGGY]  tokens.add( "-- ",  token);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add( "-- ",  token);  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "-- ",  token);	  tokens.add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
13	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  ||  token.startsWith( "/ "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( "/ "))  {	  if(token!=    null    &&    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
14	[BUG]  [BUGGY]  if(token  ==  null  &&  token.startsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token  ==  null  &&  token.startsWith( "/ "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token  ==  null  &&  token.startsWith( "/ "))  {	  if(token!=    null    &&    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
15	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =  options.entrySet().iterator();	  Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
16	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( ".- "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  ||  token.startsWith( ".- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( ".- "))  {	  if(token!=    null    &&    token.startsWith(   ".-   "))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
17	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( ". "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( ". "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( ". "))  {	  if(token!=    null    &&    token.startsWith(   ".-   "))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
18	[BUG]  [BUGGY]  if(token  ==  null  &&  token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token  ==  null  &&  token.startsWith( "- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token  ==  null  &&  token.startsWith( "- "))  {	  if(token!=    null    &&    token.startsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( ": "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( ": "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( ": "))  {	  if(token!=    null    &&    token.startsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  if(token  ==  null  ||  token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token  ==  null  ||  token.startsWith( "- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token  ==  null  ||  token.startsWith( "- "))  {	  if(token    ==    null    ||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
21	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(this.options!=  null)?  this.options.iterator()  :  token;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(this.options!=  null)?  this.options.iterator()  :  token;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(this.options!=  null)?  this.options.iterator()  :  token;	  Iterator    <    String>    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
22	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  tokens.iterator();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  tokens.iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  tokens.iterator();	  Iterator    <    String>    iter    =    this.tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(this.tokens  ==  null)?  this.tokens.iterator()  :  tokens.iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(this.tokens  ==  null)?  this.tokens.iterator()  :  tokens.iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(this.tokens  ==  null)?  this.tokens.iterator()  :  tokens.iterator();	  Iterator    <    String>    iter    =    this.tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  if(token.startsWith( "/   ")&&  token.startsWith( "/   "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "/   ")&&  token.startsWith( "/   "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "/   ")&&  token.startsWith( "/   "))  {	  if(token.startsWith(   "-   ")&&    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  token  =(String)iter.getValue()  +  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  token  =(String)iter.getValue()  +  1;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	token  =(String)iter.getValue()  +  1;	  token    =(String)iter.next()    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
26	[BUG]  [BUGGY]  if(token.startsWith( "= ")||  token.endsWith( "- "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "= ")||  token.endsWith( "- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")||  token.endsWith( "- "))  {	  if(token.startsWith(   "=   ")&&    token.endsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
27	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens.iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens.iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens.iterator();	  Iterator    <    String>    iter    =    this.arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
28	[BUG]  [BUGGY]  if(token.startsWith( "./ ")||  token.startsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "./ ")||  token.startsWith( "/ "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "./ ")||  token.startsWith( "/ "))  {	  if(token.startsWith(   "/   ")||    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  if(token.startsWith( "/ ")||  token.startsWith( "* "))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "/ ")||  token.startsWith( "* "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "/ ")||  token.startsWith( "* "))  {	  if(token.startsWith(   "/   ")||    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  tokens.add( "null ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add( "null ");  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "null ");	  tokens.add(   "n   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
31	[BUG]  [BUGGY]  Iterator  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens.iterator();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens.iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens.iterator();	  Iterator    iter    =    this.arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
32	[BUG]  [BUGGY]  tokens  =(String[])iter.clone();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens  =(String[])iter.clone();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens  =(String[])iter.clone();	  tokens    =(String[])iter.next();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
33	[BUG]  [BUGGY]  tokens  =(String[])iter.remove();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens  =(String[])iter.remove();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens  =(String[])iter.remove();	  tokens    =(String[])iter.next();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
34	[BUG]  [BUGGY]  Iterator  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  tokens.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  tokens.iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  tokens.iterator();	  Iterator    iter    =    this.tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
35	[BUG]  [BUGGY]  tokens  =(ArrayList)iter.next();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens  =(ArrayList)iter.next();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens  =(ArrayList)iter.next();	  tokens    =(List)iter.next();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
36	[BUG]  [BUGGY]  if(token.startsWith( "-- ")&&  token.endsWith( "--))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "-- ")&&  token.endsWith( "--))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "-- ")&&  token.endsWith( "--))  {	  if(token.startsWith(   "--   ")||    token.endsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  tokens  =(String[])iter.getValue();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens  =(String[])iter.getValue();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens  =(String[])iter.getValue();	  token    =(String)iter.getValue();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
38	[BUG]  [BUGGY]  List  <  String>  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  List  <  String>  iter  =  options.values().iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	List  <  String>  iter  =  options.values().iterator();	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  if(token.startsWith( "= ")&&  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "= ")&&  token.startsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")&&  token.startsWith( "-- "))  {	  if(token.startsWith(   "=   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
40	[BUG]  [BUGGY]  token  =(String)iter.getValue()  -  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  token  =(String)iter.getValue()  -  1;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	token  =(String)iter.getValue()  -  1;	  token    =(String)iter.next()    -    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
41	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  iter  =  this.options.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "-   ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( "-   ")||  token.startsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "-   ")||  token.startsWith( "-- "))  {	  if(token!=    null    ||    token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
43	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( "-- ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  ||  token.startsWith( "-- ")||  token.startsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( "-- ")||  token.startsWith( "-- "))  {	  if(token!=    null    ||    token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
44	[BUG]  [BUGGY]  tokens.add(token.substring(0,  pos  +  1));  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add(token.substring(0,  pos  +  1));  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add(token.substring(0,  pos  +  1));	  tokens.add(token.substring(0,    pos));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
45	[BUG]  [BUGGY]  tokens.add(token.substring(0,  pos  +  2));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add(token.substring(0,  pos  +  2));  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add(token.substring(0,  pos  +  2));	  tokens.add(token.substring(0,    pos));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
46	[BUG]  [BUGGY]  tokens.add(token.substring(0,  pos)+  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add(token.substring(0,  pos)+  1);  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add(token.substring(0,  pos)+  1);	  tokens.add(token.substring(0,    pos));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
47	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments  ==  null?  null  :  arguments.iterator()).iterator();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(arguments  ==  null?  null  :  arguments.iterator()).iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments  ==  null?  null  :  arguments.iterator()).iterator();	  Iterator    <    String>    iter    =(arguments.iterator()).iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
48	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null?  null  :  arguments.iterator()).iterator();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null?  null  :  arguments.iterator()).iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments!=  null?  null  :  arguments.iterator()).iterator();	  Iterator    <    String>    iter    =(arguments.iterator()).iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
49	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null?  arguments.iterator()  :  null).iterator();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null?  arguments.iterator()  :  null).iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments!=  null?  arguments.iterator()  :  null).iterator();	  Iterator    <    String>    iter    =(arguments.iterator()).iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
50	[BUG]  [BUGGY]  tokens.add( "-- "  +  token.toLowerCase());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add( "-- "  +  token.toLowerCase());  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "-- "  +  token.toLowerCase());	  tokens.add(   "--   "    +    token);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
51	[BUG]  [BUGGY]  tokens.add( "-- "  +  token.substring(0,  pos));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add( "-- "  +  token.substring(0,  pos));  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "-- "  +  token.substring(0,  pos));	  tokens.add(   "--   "    +    token);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
52	[BUG]  [BUGGY]  tokens.add( "-- "  +  token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add( "-- "  +  token,  stopAtNonOption);  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "-- "  +  token,  stopAtNonOption);	  tokens.add(   "--   "    +    token);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
53	[BUG]  [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "- ")&&  token.startsWith( "- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")&&  token.startsWith( "- "))  {	  if(token.startsWith(   "-   ")||    token.startsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
54	[BUG]  [BUGGY]  tokens.add(token,  eatTheRest);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add(token,  eatTheRest);  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add(token,  eatTheRest);	  tokens.add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
55	[BUG]  [BUGGY]  tokens.add(token,  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add(token,  null);  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add(token,  null);	  tokens.add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
56	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.endsWith( "-))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "- ")||  token.endsWith( "-))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")||  token.endsWith( "-))  {	  if(token.startsWith(   "-   ")&&    token.endsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
57	[BUG]  [BUGGY]  if(token.startsWith( "-+ ")&&  token.endsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "-+ ")&&  token.endsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "-+ ")&&  token.endsWith( "-- "))  {	  if(token.startsWith(   "-   ")&&    token.endsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
58	[BUG]  [BUGGY]  tokens.add(token.substring(0,  pos),   "-- ");  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add(token.substring(0,  pos),   "-- ");  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add(token.substring(0,  pos),   "-- ");	  tokens.add(token.substring(0,    pos));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
59	[BUG]  [BUGGY]  tokens.add(token,  stopAtNonOption)+  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add(token,  stopAtNonOption)+  1;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add(token,  stopAtNonOption)+  1;	  tokens.add(token,    stopAtNonOption);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
60	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-+ "))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "- ")||  token.startsWith( "-+ "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")||  token.startsWith( "-+ "))  {	  if(token.startsWith(   "-   ")||    token.startsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
61	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator(token);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator(token);  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =  options.values().iterator(token);	  Iterator    <    String>    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
62	[BUG]  [BUGGY]  token  =(String)iter.get();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  token  =(String)iter.get();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	token  =(String)iter.get();	  token    =(String)iter.next()    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
63	[BUG]  [BUGGY]  Iterator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  iter  =  options.values().iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  iter  =  options.values().iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
64	[BUG]  [BUGGY]  tokens  =(String[])iter.previous();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens  =(String[])iter.previous();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens  =(String[])iter.previous();	  tokens    =(String[])iter.next();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
65	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( "=   ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  ||  token.startsWith( "=   ")||  token.startsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( "=   ")||  token.startsWith( "-- "))  {	  if(token.startsWith(   "=   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
66	[BUG]  [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "--))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")||  token.startsWith( "--))  {	  if(token.startsWith(   "=   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
67	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( "- ")||  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  ||  token.startsWith( "- ")||  token.startsWith( "--))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( "- ")||  token.startsWith( "--))  {	  if(token.startsWith(   "-   ")||    token.startsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
68	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Ilerator  <  String>  iter  =  options.keySet().iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Ilerator  <  String>  iter  =  options.keySet().iterator();	  Iterator    <    String>    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
69	[BUG]  [BUGGY]  if(token.startsWith( "-+ ")&&  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "-+ ")&&  token.startsWith( "--))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "-+ ")&&  token.startsWith( "--))  {	  if(token.startsWith(   "-   ")&&    token.startsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
70	[BUG]  [BUGGY]  token  =(String)iter.getKey();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  token  =(String)iter.getKey();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	token  =(String)iter.getKey();	  token    =(String)iter.getValue();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
71	[BUG]  [BUGGY]  if(token.startsWith( "/ ")||  token.startsWith( "/ ")||  token.startsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "/ ")||  token.startsWith( "/ ")||  token.startsWith( "/ "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "/ ")||  token.startsWith( "/ ")||  token.startsWith( "/ "))  {	  if(token.startsWith(   "/   ")||    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
72	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( "/   ")||  token.startsWith( "/   "))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  ||  token.startsWith( "/   ")||  token.startsWith( "/   "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( "/   ")||  token.startsWith( "/   "))  {	  if(token.startsWith(   "/   ")||    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
73	[BUG]  [BUGGY]  if(token  ==  null  ||  token.startsWith( "/   ")||  token.startsWith( "/   "))  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token  ==  null  ||  token.startsWith( "/   ")||  token.startsWith( "/   "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token  ==  null  ||  token.startsWith( "/   ")||  token.startsWith( "/   "))  {	  if(token.startsWith(   "/   ")||    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
74	[BUG]  [BUGGY]  tokens.add( "--? ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add( "--? ");  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add( "--? ");	  tokens.add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
75	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null)?  options.iterator()  :  null;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(arguments!=  null)?  options.iterator()  :  null;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments!=  null)?  options.iterator()  :  null;	  Iterator    <    String>    iter    =(arguments!=    null)?    arguments.iterator()    :    null;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
76	[BUG]  [BUGGY]  if(token  ==  null  &&  token.startsWith( "= "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token  ==  null  &&  token.startsWith( "= "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token  ==  null  &&  token.startsWith( "= "))  {	  if(token!=    null    &&    token.startsWith(   "=   "))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
77	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "/ ")||  token.startsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( "/ ")||  token.startsWith( "/ "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "/ ")||  token.startsWith( "/ "))  {	  if(token!=    null    &&    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
78	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(this.options!=  null)?  options.iterator()  :  this.options.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(this.options!=  null)?  options.iterator()  :  this.options.iterator();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(this.options!=  null)?  options.iterator()  :  this.options.iterator();	  Iterator    <    String>    iter    =    this.options.iterator();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
79	[BUG]  [BUGGY]  if(token!=  null  ||  token.startsWith( "-- ")&&  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  ||  token.startsWith( "-- ")&&  token.startsWith( "--))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  ||  token.startsWith( "-- ")&&  token.startsWith( "--))  {	  if(token.startsWith(   "--   ")&&    token.startsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
80	[BUG]  [BUGGY]  if(token.startsWith( "= ")||  token.endsWith( ".- "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "= ")||  token.endsWith( ".- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")||  token.endsWith( ".- "))  {	  if(token.startsWith(   "=   ")&&    token.endsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
81	[BUG]  [BUGGY]  if(token.startsWith( "= ")&&  token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "= ")&&  token.startsWith( "- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")&&  token.startsWith( "- "))  {	  if(token.startsWith(   "-   ")&&    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
82	[BUG]  [BUGGY]  if(token.startsWith( "=? ")&&  token.endsWith( "- "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "=? ")&&  token.endsWith( "- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "=? ")&&  token.endsWith( "- "))  {	  if(token.startsWith(   "=   ")&&    token.endsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
83	[BUG]  [BUGGY]  if(token.startsWith( ". ")||  token.endsWith( ".- "))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( ". ")||  token.endsWith( ".- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( ". ")||  token.endsWith( ".- "))  {	  if(token.startsWith(   "=   ")&&    token.endsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
84	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "- ")&&  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( "- ")&&  token.startsWith( "--))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "- ")&&  token.startsWith( "--))  {	  if(token.startsWith(   "--   ")&&    token.startsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
85	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "- ")&&  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( "- ")&&  token.startsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "- ")&&  token.startsWith( "-- "))  {	  if(token.startsWith(   "--   ")&&    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
86	[BUG]  [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "- "))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")||  token.startsWith( "- "))  {	  if(token.startsWith(   "-   ")||    token.startsWith(   "-   "))    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
87	[BUG]  [BUGGY]  tokens.add('-');  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens.add('-');  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens.add('-');	  tokens.add(   "--   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
88	[BUG]  [BUGGY]  if(token.startsWith( "= ")||  token.endsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "= ")||  token.endsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")||  token.endsWith( "-- "))  {	  if(token.startsWith(   "-   ")||    token.endsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
89	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  token;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  token;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(this.tokens!=  null)?  this.tokens.iterator()  :  token;	  Iterator    <    String>    iter    =    this.tokens.iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
90	[BUG]  [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "/ "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "= ")||  token.startsWith( "/ "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")||  token.startsWith( "/ "))  {	  if(token.startsWith(   "/   ")||    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
91	[BUG]  [BUGGY]  if(token.startsWith( ": ")||  token.startsWith( ": "))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( ": ")||  token.startsWith( ": "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( ": ")||  token.startsWith( ": "))  {	  if(token.startsWith(   "/   ")||    token.startsWith(   "/   "))    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
92	[BUG]  [BUGGY]  if(token.startsWith( "=? ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "=? ")||  token.startsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "=? ")||  token.startsWith( "-- "))  {	  if(token.startsWith(   "=   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
93	[BUG]  [BUGGY]  if(token.startsWith( "= ")&&  token.startsWith( "--))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "= ")&&  token.startsWith( "--))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "= ")&&  token.startsWith( "--))  {	  if(token.startsWith(   "-   ")&&    token.startsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
94	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "=? "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( "=? "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "=? "))  {	  if(token!=    null    &&    token.startsWith(   "=   "))    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
95	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "-- ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( "-- ")||  token.startsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "-- ")||  token.startsWith( "-- "))  {	  if(token!=    null    ||    token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
96	[BUG]  [BUGGY]  if(token  ==  null  ||  token.startsWith( "- ")||  token.startsWith( "-- "))  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token  ==  null  ||  token.startsWith( "- ")||  token.startsWith( "-- "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token  ==  null  ||  token.startsWith( "- ")||  token.startsWith( "-- "))  {	  if(token!=    null    ||    token.startsWith(   "-   ")||    token.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
97	[BUG]  [BUGGY]  iter.previous();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  iter.previous();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	iter.previous();	  iter.next();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
98	[BUG]  [BUGGY]  tokens  =(List)iter.getValue();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  tokens  =(List)iter.getValue();  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	tokens  =(List)iter.getValue();	  token    =(String)iter.getValue();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
99	[BUG]  [BUGGY]  if(token.startsWith( "- ")&&  token.endsWith( "--))  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "- ")&&  token.endsWith( "--))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")&&  token.endsWith( "--))  {	  if(token.startsWith(   "--   ")||    token.endsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
100	[BUG]  [BUGGY]  if(token.startsWith( "- ")||  token.endsWith( "--))  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token.startsWith( "- ")||  token.endsWith( "--))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token.startsWith( "- ")||  token.endsWith( "--))  {	  if(token.startsWith(   "--   ")||    token.endsWith(   "--))    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
101	[BUG]  [BUGGY]  Iterator  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  iter  =(this.arguments!=  null)?  this.arguments.iterator()  :  tokens;	  Iterator    iter    =    this.arguments.iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
102	[BUG]  [BUGGY]  Iterator  <  String>  iter  =(arguments.iterator())+  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  Iterator  <  String>  iter  =(arguments.iterator())+  1;  [BUGGY]      if  (token.startsWith(     "--     "))    {  {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	Iterator  <  String>  iter  =(arguments.iterator())+  1;	  Iterator    <    String>    iter    =(arguments.iterator()).iterator();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
103	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "/.* "))  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( "/.* "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "/.* "))  {	  if(token!=    null    &&    token.startsWith(   ".-   "))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
104	[BUG]  [BUGGY]  if(token!=  null  &&  token.startsWith( "@ "))  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();        [BUGGY]  if(token!=  null  &&  token.startsWith( "@ "))  {  [BUGGY]      {  int  pos  =  token.indexOf('=');  String  opt  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  //  --foo  if  (!options.hasOption(opt))  {  processNonOptionToken(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	109	110	2	replace	if(token!=  null  &&  token.startsWith( "@ "))  {	  if(token!=    null    &&    token.startsWith(   ".-   "))    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
