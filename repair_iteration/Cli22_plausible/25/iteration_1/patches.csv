bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  options.iterator();	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(option);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption(pos);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Option  option  =  options.getOption(pos);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  option  =  options.getOption(pos);	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(option);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  option  =  options.getOption(opt);	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(option);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
4	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  options);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  options);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  options);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   " ");  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   " ");  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {   " ");	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  opt);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  opt);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  },  opt);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[1]);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[1]);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[1]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[0]);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
8	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[pos]);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[pos]);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[pos]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[0]);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
9	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  arguments.iterator();	      Iterator    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  tokens.add(choose);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  tokens.add(choose);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(choose);	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  tokens.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
12	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[tokens.size()  ]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
13	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  +  1]);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  +  1]);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  +  1]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  -  1]);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  -  1]);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[tokens.size()  -  1]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[tokens.size()    ]);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  arguments.iterator();	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  tokens.add(opt);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  iter  =  arguments.iterator();  tokens.add(opt);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  arguments.iterator();  tokens.add(opt);	      Iterator    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
17	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(option);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(option);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  options.iterator();  tokens.add(option);	      Iterator    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
18	[BUG]  [BUGGY]  iter.remove();  tokens.add(token);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  iter.remove();  tokens.add(token);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.remove();  tokens.add(token);	      iter.remove();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  iter.remove();  tokens.add(option);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  iter.remove();  tokens.add(option);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.remove();  tokens.add(option);	      iter.remove();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  tokens.add(pos);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  tokens.add(pos);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(pos);	      tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  tokens.add(i);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  tokens.add(i);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(i);	      tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  iter  =  options.keySet().iterator();  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter  =  options.keySet().iterator();	      Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  tokens.add( "- ");  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  tokens.add( "- ");  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add( "- ");	      tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  options.add(token);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  options.add(token);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(token);	      options.add(opt);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
25	[BUG]  [BUGGY]  options.add(option);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  options.add(option);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(option);	      options.add(opt);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
26	[BUG]  [BUGGY]  options.add(arguments[pos]);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  options.add(arguments[pos]);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments[pos]);	      options.add(opt);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  options.add(pos);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  options.add(pos);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(pos);	      options.add(opt);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  tokens.add(getOptionName());  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  tokens.add(getOptionName());  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(getOptionName());	      tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  options.add(arguments);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  options.add(arguments);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments);	      options.add(opt);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[0]);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[0]);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[0]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[0]);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
31	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]);	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[0]);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
32	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Option  options  =  options.getOptions();  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOptions();	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Option  options  =  options.getOption(opt);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Option  options  =  options.getOption(opt);	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Ilerator  iter  =  options.keySet().iterator();  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Ilerator  iter  =  options.keySet().iterator();	      Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  Ilerator  iter  =  options.values().iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Ilerator  iter  =  options.values().iterator();  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Ilerator  iter  =  options.values().iterator();	      Iterator    iter    =    options.values().iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {  }  );  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens!=  null)?  null  :  tokens.toArray(new  String[]  {  }  );	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	11	None	replace
37	[BUG]  [BUGGY]  tokens.add(chomp);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  tokens.add(chomp);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(chomp);	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
38	[BUG]  [BUGGY]  iter.clear();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  iter.clear();  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.clear();	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
39	[BUG]  [BUGGY]  iter.remove(option);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  iter.remove(option);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.remove(option);	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
40	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	if(stopAtNonOption)  {  Iterator  iter  =  options.iterator();  tokens.add(opt);  }	      Iterator    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
41	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(arguments[pos]);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(arguments[pos]);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  options.iterator();  tokens.add(arguments[pos]);	      Iterator    iter    =    options.iterator();    tokens.add(opt);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
42	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Ilerator  iter  =  options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  tokens.add(getPosition());  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  tokens.add(getPosition());  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	tokens.add(getPosition());	      tokens.add(option);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  options.add(arguments[pos],  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  options.add(arguments[pos],  stopAtNonOption);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	options.add(arguments[pos],  stopAtNonOption);	      options.add(opt);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  iter.set(pos,  options.size()  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  iter.set(pos,  options.size()  -  1);  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.set(pos,  options.size()  -  1);	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
46	[BUG]  [BUGGY]  iter.set(pos,  options.indexOf(opt));  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  iter.set(pos,  options.indexOf(opt));  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	iter.set(pos,  options.indexOf(opt));	      iter.remove();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  tokens.add(token);  }	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.length;  pos++)  {  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.length;  pos++)  {  tokens.add(opt);  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.length;  pos++)  {  tokens.add(opt);  }	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.size();  pos++)  {  tokens.add(opt);  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.size();  pos++)  {  tokens.add(opt);  }  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	else  if(stopAtNonOption)  {  tokens.add(token);  }  else  {  for(int  pos  =  0;  pos  <  arguments.size();  pos++)  {  tokens.add(opt);  }	      tokens.add(token);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  Iterator  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  iter  =  options.entrySet().iterator();  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  options.entrySet().iterator();	      Iterator    iter    =    options.keySet().iterator();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
51	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(option);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
52	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(option);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
53	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  {  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  {	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(option);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
54	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(iter);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(iter);  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti(iter);	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(option);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
55	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    }  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Opcodes.Iterator  <  Option>  iter  =  options.iterator();  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Opcodes.Iterator  <  Option>  iter  =  options.iterator();	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  Iterator  <  String>  iter  =  options.entrySet().iterator();  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	Iterator  <  String>  iter  =  options.entrySet().iterator();	  if(stopAtNonOption)    {    processNonOptionToken(token);    }    else    {    tokens.add(opt);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    else  if  (stopAtNonOption)  {  processNonOptionToken(token);  }  else  {  tokens.add(token);  }  gobble(iter);    [BUGGY]  return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );  [BUGGY]      [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  String[]  arguments  String  opt  token  int  pos  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.282842712474619	156	156	2	replace	return(tokens  ==  null)?  null  :  tokens.toArray(new  String[]  {  opt  }  );	  return(tokens    ==    null)?    null    :    tokens.toArray(new    String[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	11	None	replace
