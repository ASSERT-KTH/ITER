bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next()  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  while  (iter.hasNext()  &&  iter.next()  ==  null)  {  [BUGGY]    {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	while  (iter.hasNext()  &&  iter.next()  ==  null)  {	  while    (iter.hasNext()    &&    iter.next()!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
2	[BUG]  [BUGGY]  tokens.add(iter.getKey());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  tokens.add(iter.getKey());  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	tokens.add(iter.getKey());	      tokens.add(iter.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
3	[BUG]  [BUGGY]  tokens.add(iter.getValue(),  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  tokens.add(iter.getValue(),  stopAtNonOption);  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	tokens.add(iter.getValue(),  stopAtNonOption);	      tokens.add(iter.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
4	[BUG]  [BUGGY]  tokens.add(iter.getValue(),  iter.next());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  tokens.add(iter.getValue(),  iter.next());  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	tokens.add(iter.getValue(),  iter.next());	      tokens.add(iter.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
5	[BUG]  [BUGGY]  while(iter.hasNext()  ||  stopAtNonOption)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  while(iter.hasNext()  ||  stopAtNonOption)  {  [BUGGY]    {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	while(iter.hasNext()  ||  stopAtNonOption)  {	  while(iter.hasNext()    &&    stopAtNonOption)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
6	[BUG]  [BUGGY]  while(iter.hasNext()  &&  stopAtNonOption  ||  iter.hasNext())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  while(iter.hasNext()  &&  stopAtNonOption  ||  iter.hasNext())  {  [BUGGY]    {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	while(iter.hasNext()  &&  stopAtNonOption  ||  iter.hasNext())  {	  while(iter.hasNext()    &&    stopAtNonOption)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
7	[BUG]  [BUGGY]  while(iter.hasNext()  &&  stopAtNonOption  <  options.size())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  while(iter.hasNext()  &&  stopAtNonOption  <  options.size())  {  [BUGGY]    {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	while(iter.hasNext()  &&  stopAtNonOption  <  options.size())  {	  while(iter.hasNext()    &&    stopAtNonOption)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
8	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  iter  =  tokens.iterator();	      iter.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
9	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Option>  options  =  iter.iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Option>  options  =  iter.iterator();	      Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
10	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.next();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Option>  options  =  iter.next();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Option>  options  =  iter.next();	      Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
11	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  this.options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Option>  options  =  this.options.iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Option>  options  =  this.options.iterator();	      Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
12	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iters.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Option>  options  =  iters.iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Option>  options  =  iters.iterator();	      Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
13	[BUG]  [BUGGY]  tokens.add(iter.next(),  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  tokens.add(iter.next(),  stopAtNonOption);  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	tokens.add(iter.next(),  stopAtNonOption);	      tokens.add(iter.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
14	[BUG]  [BUGGY]  tokens.add(iter.next()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  tokens.add(iter.next()  +  1);  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	tokens.add(iter.next()  +  1);	      tokens.add(iter.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
15	[BUG]  [BUGGY]  Iterator  iter  =  options.getIterator( "stopAtNonOption ",  eatTheRest);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  iter  =  options.getIterator( "stopAtNonOption ",  eatTheRest);  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  iter  =  options.getIterator( "stopAtNonOption ",  eatTheRest);	      Iterator    iter    =    options.getIterator(   "stopAtNonOption   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
16	[BUG]  [BUGGY]  Iterator  iter  =  options.getIterator( "stopAtNonOption ").iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  iter  =  options.getIterator( "stopAtNonOption ").iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  iter  =  options.getIterator( "stopAtNonOption ").iterator();	      Iterator    iter    =    options.getIterator(   "stopAtNonOption   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
17	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Option>  iter  =  options.iterator();  tokens.add(iter.next());	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
18	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(iter.next(),  stopAtNonOption);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  iter  =  options.iterator();  tokens.add(iter.next(),  stopAtNonOption);  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  iter  =  options.iterator();  tokens.add(iter.next(),  stopAtNonOption);	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
19	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Object>  iter  =  options.values().iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Object>  iter  =  options.values().iterator();	      Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
20	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Object>  iter  =  options.keySet().iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Object>  iter  =  options.keySet().iterator();	      Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
21	[BUG]  [BUGGY]  Ilerator  <  Object>  iter  =  options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Ilerator  <  Object>  iter  =  options.iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Ilerator  <  Object>  iter  =  options.iterator();	      Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
22	[BUG]  [BUGGY]  Iterator  iter  =  options.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  iter  =  options.values().iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  iter  =  options.values().iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
23	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Ilerator  iter  =  options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
24	[BUG]  [BUGGY]  Iterator  options  =  options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  options  =  options.iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  options  =  options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
25	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  iter.next())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  while  (iter.hasNext()  &&  iter.next())  {  [BUGGY]    {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	while  (iter.hasNext()  &&  iter.next())  {	  while    (iter.hasNext()    &&    iter.hasNext())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
26	[BUG]  [BUGGY]  while  (iter.hasNext()  ||  iter.hasNext())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  while  (iter.hasNext()  ||  iter.hasNext())  {  [BUGGY]    {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	while  (iter.hasNext()  ||  iter.hasNext())  {	  while    (iter.hasNext()    &&    iter.hasNext())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
27	[BUG]  [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  iter  =  options.keySet().iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  iter  =  options.keySet().iterator();	      Iterator    iter    =    options.entrySet().iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
28	[BUG]  [BUGGY]  Iterator  iter  =  options.getIterator( "stopAtNonOption. ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  iter  =  options.getIterator( "stopAtNonOption. ");  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  iter  =  options.getIterator( "stopAtNonOption. ");	      Iterator    iter    =    options.getIterator(   "stopAtNonOption   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
29	[BUG]  [BUGGY]  while(iter.hasNext()  &&  endAtNonOption)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  while(iter.hasNext()  &&  endAtNonOption)  {  [BUGGY]    {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	while(iter.hasNext()  &&  endAtNonOption)  {	  while(iter.hasNext()    &&    stopAtNonOption)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
30	[BUG]  [BUGGY]  tokens.add(iter.next()  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  tokens.add(iter.next()  -  1);  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	tokens.add(iter.next()  -  1);	      tokens.add(iter.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
31	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Ilerator  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Ilerator  iter  =  options.iterator();  tokens.add(iter.next());	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
32	[BUG]  [BUGGY]  tokens.add(iter.getValue()  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  tokens.add(iter.getValue()  +  1);  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	tokens.add(iter.getValue()  +  1);	      tokens.add(iter.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
33	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Option>  options  =  iter.options.iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Option>  options  =  iter.options.iterator();	      Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
34	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  iter.options();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Option>  options  =  iter.options();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Option>  options  =  iter.options();	      Iterator    <    Option>    options    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
35	[BUG]  [BUGGY]  tokens.add(iter.next().toString());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  tokens.add(iter.next().toString());  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	tokens.add(iter.next().toString());	      tokens.add(iter.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
36	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  iter  =  this.options.iterator();	      Iterator    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  <  Object>  iter  =  options.entrySet().iterator();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  <  Object>  iter  =  options.entrySet().iterator();	      Iterator    <    Object>    iter    =    options.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
38	[BUG]  [BUGGY]  iter.clear();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  iter.clear();  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	iter.clear();	      iter.remove();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
39	[BUG]  [BUGGY]  tokens.add(iter.getImmediateParentPointer());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  tokens.add(iter.getImmediateParentPointer());  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	tokens.add(iter.getImmediateParentPointer());	      tokens.add(iter.getValue());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
40	[BUG]  [BUGGY]  IllegalArgumentIterator  iter  =  options.iterator();  tokens.add(iter.next());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  IllegalArgumentIterator  iter  =  options.iterator();  tokens.add(iter.next());  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	IllegalArgumentIterator  iter  =  options.iterator();  tokens.add(iter.next());	      Iterator    iter    =    options.iterator();    tokens.add(iter.next());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
41	[BUG]  [BUGGY]  Iterator  iter  =  options.getIterator( "stopAtNonOptions ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]    private  void  gobble(Iterator  iter)  {  if  (eatTheRest)  {    [BUGGY]  Iterator  iter  =  options.getIterator( "stopAtNonOptions ");  [BUGGY]    while  (iter.hasNext())    {  {  tokens.add(iter.next());  }  }  }  [CLASS]  PosixParser  [METHOD]  gobble  [RETURN_TYPE]  void  Iterator  iter  [VARIABLES]  Iterator  iter  Options  options  List  tokens  boolean  eatTheRest  stopAtNonOption  	projects/Cli22/src/java/org/apache/commons/cli/PosixParser.java	0.4472135954999579	170	171	2	replace	Iterator  iter  =  options.getIterator( "stopAtNonOptions ");	      Iterator    iter    =    options.getIterator(   "stopAtNonOption   ");    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
