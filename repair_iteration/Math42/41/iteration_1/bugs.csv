bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-(restrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-(restrictToNonNegative?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-(restrictToNonNegative?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
2	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	  	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
3	[BUG]  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  mostNegative);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  mostNegative);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
4	[BUG]  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(restrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(restrictToNonNegative?  0  :  mostNegative);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(restrictToNonNegative?  0  :  mostNegative);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
5	[BUG]  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset())));		non-compiled	[CE]  illegal  start  of  expression	82	None	add
6	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-(basicRow.length  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-(basicRow.length  <  0?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-(basicRow.length  <  0?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
7	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-  (restrictToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-  (restrictToNonNegative?  0  :  MostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-  (restrictToNonNegative?  0  :  MostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
8	[BUG]  [BUGGY]    int  baseRow  =  basicRows.size();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    int  baseRow  =  basicRows.size();  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    int  baseRow  =  basicRows.size();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
9	[BUG]  [BUGGY]    Integer  baseRow  =  basicRows.get(basicRow);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    Integer  baseRow  =  basicRows.get(basicRow);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    Integer  baseRow  =  basicRows.get(basicRow);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
10	[BUG]  [BUGGY]    int  baseRow  =  basicRows.indexOf(basicRow);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    int  baseRow  =  basicRows.indexOf(basicRow);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    int  baseRow  =  basicRows.indexOf(basicRow);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
11	[BUG]  [BUGGY]    Integer  baseRow  =  getBasicRow(basicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    Integer  baseRow  =  getBasicRow(basicRow);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    Integer  baseRow  =  getBasicRow(basicRow);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
12	[BUG]  [BUGGY]    Integer  baseRow  =  basicRows.get(basicColumn);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    Integer  baseRow  =  basicRows.get(basicColumn);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    Integer  baseRow  =  basicRows.get(basicColumn);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
13	[BUG]  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
14	[BUG]  [BUGGY]    if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]    if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0;  }  [BUGGY]  coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	    if(basicRows  ==  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0;  }		non-compiled	[CE]  illegal  start  of  expression	82	None	add
15	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))-  (restrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))-  (restrictToNonNegative?  0  :  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))-  (restrictToNonNegative?  0  :  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
16	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  =  mostNegative);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  =  mostNegative);  [BUGGY]  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  =  mostNegative);	coefficients[i]  =    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -      (restrictToNonNegative  ?  0  :  mostNegative);  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
