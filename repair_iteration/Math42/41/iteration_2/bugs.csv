bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.restrictToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.restrictToNonNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.restrictToNonNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))    -(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.length  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.length  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.length  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))    -(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))    -(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  int  baseRow  =  basicRows.size()  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  baseRow  =  basicRows.size()  -  1;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	int  baseRow  =  basicRows.size()  -  1;	      int    baseRow    =    basicRows.size();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  int  baseRow  =  basicRows.size()  -  2;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  baseRow  =  basicRows.size()  -  2;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	int  baseRow  =  basicRows.size()  -  2;	      int    baseRow    =    basicRows.size();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  int  baseRow  =  basicRows.size()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  baseRow  =  basicRows.size()  +  1;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	int  baseRow  =  basicRows.size()  +  1;	      int    baseRow    =    basicRows.size();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRows);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  getBasicRow(basicRows);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow.length);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  getBasicRow(basicRow.length);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  basicRows);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  basicRows);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  basicRows.length);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  basicRows.length);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.length  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.length  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.length  :  mostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  :  mostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0;  }	      if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0.0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0.0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0.0;  }	      if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  <  MostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  <  MostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  <  MostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  >  MostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  >  MostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.getValue()  >  MostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow  +  1);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(basicRow  +  1);	      Integer    baseRow    =    basicRows.get(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow.length);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(basicRow.length);	      Integer    baseRow    =    basicRows.get(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow  -  1);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(basicRow  -  1);	      Integer    baseRow    =    basicRows.get(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -  (basicRow  <  =  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -  (basicRow  <  =  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -  (basicRow  <  =  mostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicRow    <    =    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
22	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  mostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicRow    <    =    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(basicColumn  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(basicColumn  +  1);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(basicColumn  +  1);	      Integer    baseRow    =    basicRows.get(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(basicColumn  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(basicColumn  -  1);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(basicColumn  -  1);	      Integer    baseRow    =    basicRows.get(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(basicColumn,  coefficients.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(basicColumn,  coefficients.length);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(basicColumn,  coefficients.length);	      Integer    baseRow    =    basicRows.get(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -  (restrictToNonNegative?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  =  MostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  =  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow  <  =  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow.getValue()  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow.getValue()  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow.getValue()  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset());  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  getEntry(basicRow,  getRhsOffset());	      	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnsOffset());  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  getEntry(basicRow,  getColumnsOffset());	      	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  Integer  j  =  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  j  =  getEntry(basicRow,  getRhsOffset());  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  j  =  getEntry(basicRow,  getRhsOffset());	      	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset());  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  getEntry(basicRow,  getColumnOffset());	      	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow.getValue()  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow.getValue()  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow.getValue()  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow.length  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow.length  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicRow.length  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.length  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.length  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.length  :  mostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnOffset()))-    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
36	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset())));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow!=  null?  0  :  getEntry(basicRow,  getRhsOffset())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset())));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.length  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.length  <  0?  0  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.length  <  0?  0  :  mostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-(basicRow.length    <    0?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumn()))  -(basicRow.length  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumn()))  -(basicRow.length  <  0?  0  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumn()))  -(basicRow.length  <  0?  0  :  mostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-(basicRow.length    <    0?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow.length  <  1?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow.length  <  1?  0  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow.length  <  1?  0  :  mostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-(basicRow.length    <    0?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  int  baseRow  =  basicRows.indexOf(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  baseRow  =  basicRows.indexOf(basicRow,  negativeVarBasicRow);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	int  baseRow  =  basicRows.indexOf(basicRow,  negativeVarBasicRow);	      int    baseRow    =    basicRows.indexOf(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  int  baseRow  =  basicRows.indexOf(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  baseRow  =  basicRows.indexOf(basicRow  +  1);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	int  baseRow  =  basicRows.indexOf(basicRow  +  1);	      int    baseRow    =    basicRows.indexOf(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  int  baseRow  =  basicRows.indexOf(basicRow)-  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  baseRow  =  basicRows.indexOf(basicRow)-  1;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	int  baseRow  =  basicRows.indexOf(basicRow)-  1;	      int    baseRow    =    basicRows.indexOf(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  coefficients);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  coefficients);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  int  baseRow  =  basicRows.indexOf(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  baseRow  =  basicRows.indexOf(negativeVarBasicRow);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	int  baseRow  =  basicRows.indexOf(negativeVarBasicRow);	      int    baseRow    =    basicRows.indexOf(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow.length  >=  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow.length  >=  0?  0  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow.length  >=  0?  0  :  mostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-(basicRow.length    <    0?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow.length  <  =  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow.length  <  =  0?  0  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -(basicRow.length  <  =  0?  0  :  mostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))-(basicRow.length    <    0?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow,  negativeVarBasicRow);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(basicRow,  negativeVarBasicRow);	      Integer    baseRow    =    basicRows.get(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-(basicRow  >  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-(basicRow  >  0?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-(basicRow  >  0?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))    -(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-(basicRow.getNegativeValue()  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-(basicRow.getNegativeValue()  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-(basicRow.getNegativeValue()  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))    -(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -  (basicRowCount  -  1  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -  (basicRowCount  -  1  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -  (basicRowCount  -  1  :  mostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnOffset()))-    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.getValue()  <  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.getValue()  <  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.getValue()  <  mostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnOffset()))-    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
54	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.equals(mostNegative));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.equals(mostNegative));  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -(basicRow.equals(mostNegative));	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnOffset()))-    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
55	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  >  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  >  0?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  >  0?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  =  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  =  0?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  =  0?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  0?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  0?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  basicRows.size();  ++i)  {  coefficients[i]  =  0;  }	      if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
60	[BUG]  [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  baseRows.size();  ++i)  {  coefficients[i]  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  if(basicRows!=  null)  {  for(int  i  =  0;  i  <  baseRows.size();  ++i)  {  coefficients[i]  =  0;  }  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	if(basicRows!=  null)  {  for(int  i  =  0;  i  <  baseRows.size();  ++i)  {  coefficients[i]  =  0;  }	      if(basicRows    ==    null)    {    for(int    i    =    0;    i    <    basicRows.size();    ++i)    {    coefficients[i]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
61	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-  (basicRow  <  =  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-  (basicRow  <  =  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))-  (basicRow  <  =  mostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (basicRow    <    =    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
62	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  >  0?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  >  0?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  >  0?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
63	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  0?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  0?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  0?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow!=  null?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow!=  null?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow!=  null?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  =  MostNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  =  MostNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))-  (basicRow  <  =  MostNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
66	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.equals(mostNegative));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.equals(mostNegative));  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.equals(mostNegative));	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.length  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.length  :  MostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow.length  :  MostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRowCount  -  1  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRowCount  -  1  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRowCount  -  1  :  mostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -  (basicRow  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -  (basicRow  <  0?  0  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnOffset()))  -  (basicRow  <  0?  0  :  mostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnOffset()))-    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow  <  0?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow  <  0?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))    -(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
71	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicToNonNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicToNonNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))    -(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow  <  0?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow  <  0?  0  :  mostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =(basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -(basicRow  <  0?  0  :  mostNegative);	  coefficients[i]    =(basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-(restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
73	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(basicColumn).intValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(basicColumn).intValue();  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(basicColumn).intValue();	      Integer    baseRow    =    basicRows.get(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNonNegative?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNonNegative?  0  :  MostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNonNegative?  0  :  MostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicToNonNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -  (basicRow  <  0?  0  :  MostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -  (basicRow  <  0?  0  :  MostNegative);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	coefficients[i]  =  (basicRow  ==  null?  0  :  getEntry(basicRow,  getColumnsOffset()))  -  (basicRow  <  0?  0  :  MostNegative);	  coefficients[i]    =    (basicRow    ==    null?    0    :    getEntry(basicRow,    getColumnsOffset()))-    (restrictToNonNegative?    0    :    MostNegative);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
78	[BUG]  [BUGGY]  (basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset())));  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  <  null?  0  :  getEntry(basicRow,  getRhsOffset())));	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset())));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNonNegative?  0  :  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  (basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNonNegative?  0  :  mostNegative);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	(basicRow  ==  null?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (basicNonNegative?  0  :  mostNegative);	      (basicRow    ==    null?    0    :    getEntry(basicRow,    getRhsOffset()))    -    (restrictToNonNegative?    0    :    mostNegative);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
80	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(i);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(i);  [BUGGY]    (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(i);	      	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
81	[BUG]  [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  Integer  baseRow  =  basicRows.get(basicRow,  coefficients);  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	Integer  baseRow  =  basicRows.get(basicRow,  coefficients);	      Integer    baseRow    =    basicRows.get(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
82	[BUG]  [BUGGY]  int  baseRow  =  basicRows.indexOf(basicRow)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);    [BUGGY]  int  baseRow  =  basicRows.indexOf(basicRow)+  1;  [BUGGY]    coefficients[i]  =      (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -          (restrictToNonNegative  ?  0  :  mostNegative);  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	419	421	1	replace	int  baseRow  =  basicRows.indexOf(basicRow)+  1;	      int    baseRow    =    basicRows.indexOf(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
