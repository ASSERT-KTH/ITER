bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.numArtificialVariables  =  1;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]  this.numArtificialVariables  =  1;  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	this.numArtificialVariables  =  1;	this.numArtificialVariables  =  0;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
2	[BUG]  [BUGGY]  this.numArtificialVariables  =  DEFAULT_ULPS;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]  this.numArtificialVariables  =  DEFAULT_ULPS;  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	this.numArtificialVariables  =  DEFAULT_ULPS;	this.numArtificialVariables  =  0;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
3	[BUG]  [BUGGY]  this.numArtificialVariables  =  columnLabels;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]  this.numArtificialVariables  =  columnLabels;  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	this.numArtificialVariables  =  columnLabels;	this.numArtificialVariables  =  0;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	  	this.numArtificialVariables  =  0;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]    this.tableau.setEntry(columnLabels[i  -  1][col++]);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    this.tableau.setEntry(columnLabels[i  -  1][col++]);  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    this.tableau.setEntry(columnLabels[i  -  1][col++]);		non-compiled	[CE]  illegal  start  of  expression	38	None	add
6	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(columnLabels.size(),  columnsToDrop.size());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    int  maxUlps  =  Math.max(columnLabels.size(),  columnsToDrop.size());  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    int  maxUlps  =  Math.max(columnLabels.size(),  columnsToDrop.size());		non-compiled	[CE]  illegal  start  of  expression	38	None	add
7	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(col,  columnsToDrop.size()  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    int  maxUlps  =  Math.max(col,  columnsToDrop.size()  -  1);  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    int  maxUlps  =  Math.max(col,  columnsToDrop.size()  -  1);		non-compiled	[CE]  illegal  start  of  expression	38	None	add
8	[BUG]  [BUGGY]    this.tableau.setEntry(columnLabels[i  -  1][col++],  col);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    this.tableau.setEntry(columnLabels[i  -  1][col++],  col);  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    this.tableau.setEntry(columnLabels[i  -  1][col++],  col);		non-compiled	[CE]  illegal  start  of  expression	38	None	add
9	[BUG]  [BUGGY]    int  maxUlps  =  Math.max(columnLabels.size(),  columnsToDrop.size()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    int  maxUlps  =  Math.max(columnLabels.size(),  columnsToDrop.size()  -  1);  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    int  maxUlps  =  Math.max(columnLabels.size(),  columnsToDrop.size()  -  1);		non-compiled	[CE]  illegal  start  of  expression	38	None	add
10	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  matrix.getEntry(i,  j);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  matrix.getEntry(i,  j);  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  matrix.getEntry(i,  j);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
11	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  matrix.getEntry(j,  col);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  matrix.getEntry(j,  col);  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  matrix.getEntry(j,  col);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
12	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  matrix[j  -  1][col++]  =  table.getEntry(j,  col);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  matrix[j  -  1][col++]  =  table.getEntry(j,  col);  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  matrix[j  -  1][col++]  =  table.getEntry(j,  col);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
13	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  matrix.getEntry(i,  col);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  matrix.getEntry(i,  col);  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  matrix.getEntry(i,  col);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
14	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  table.getEntry(i,  j);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  table.getEntry(i,  j);  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  j++)  {  columnLabels[j  -  1][col++]  =  table.getEntry(i,  j);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
15	[BUG]  [BUGGY]  this.numArtificialVariables  =  0L;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]  this.numArtificialVariables  =  0L;  [BUGGY]  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	this.numArtificialVariables  =  0L;	this.numArtificialVariables  =  0;  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
16	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  ++j)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  ++j)  {  columnLabels.remove((  int)columnLabels.get(i));  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  ++j)  {  columnLabels.remove((  int)columnLabels.get(i));  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
17	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  ++j)  {  columnLabels.add((  int)columnLabels.get(i));  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  ++j)  {  columnLabels.add((  int)columnLabels.get(i));  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  ++j)  {  columnLabels.add((  int)columnLabels.get(i));  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
18	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  matrix[i  -  1][col++]  =  column.getEntry(i,  j);  }  else  {  this.tableau.addChangeListener(this);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  matrix[i  -  1][col++]  =  column.getEntry(i,  j);  }  else  {  this.tableau.addChangeListener(this);  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  matrix[i  -  1][col++]  =  column.getEntry(i,  j);  }  else  {  this.tableau.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
19	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  matrix[i  -  1][col++]  =  table.getEntry(i,  j);  }  else  {  this.tableau.addChangeListener(this);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  matrix[i  -  1][col++]  =  table.getEntry(i,  j);  }  else  {  this.tableau.addChangeListener(this);  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  matrix[i  -  1][col++]  =  table.getEntry(i,  j);  }  else  {  this.tableau.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
20	[BUG]  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  ++j)  {  columnLabels.add((  int)columnLabels.get(j));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  matrix[i  -  1][col++]  =  tableau.getEntry(i,  j);  }  }  }  for  (int  i  =  columnsToDrop.size()  -  1;  i  >=  0;  i--)  {  columnLabels.remove((int)  columnsToDrop.get(i));  }  this.tableau  =  new  Array2DRowRealMatrix(matrix);  [BUGGY]    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  ++j)  {  columnLabels.add((  int)columnLabels.get(j));  }  [BUGGY]  this.numArtificialVariables  =  0;  }  [CLASS]  SimplexTableau  [METHOD]  dropPhase1Objective  [RETURN_TYPE]  void  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  double[][]  matrix  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  j  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.25	366	366	1	replace	    if(columnLabels!=  null)  {  for(int  j  =  0;  j  <  columnsToDrop.size();  ++j)  {  columnLabels.add((  int)columnLabels.get(j));  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
