bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  row  =  getRowCount()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowCount()  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount()  -  1;	  Integer    row    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  Integer  row  =  getRowCount()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowCount()  +  1;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount()  +  1;	  Integer    row    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  Integer  row  =  getRowCount()  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowCount()  -  2;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount()  -  2;	  Integer    row    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  Integer  row  =  this.row  +  col;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  this.row  +  col;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  +  col;	  Integer    row    =    this.row;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  Integer  row  =  col;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  col;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  col;	  Integer    row    =    this.row;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  Integer  row  =  getRow();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRow();  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow();	      Integer    row    =    getBase();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  Integer  row  =  getRowIndex();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowIndex();  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex();	      Integer    row    =    getBase();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  Integer  row  =  getColumnRow(col);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getColumnRow(col);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnRow(col);	      Integer    row    =    getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  Integer  row  =  getBasicRow(col  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getBasicRow(col  +  1);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getBasicRow(col  +  1);	      Integer    row    =    getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  Integer  row  =  getRow(col  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRow(col  -  1);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col  -  1);	  Integer    row    =    getRow(col);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  Integer  row  =  getRow(col  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRow(col  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col  +  1);	  Integer    row    =    getRow(col);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowCount(col  -  1);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col  -  1);	  Integer    row    =    getRowCount(col);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowCount(col  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col  +  1);	  Integer    row    =    getRowCount(col);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  Integer  row  =  getRowCount(row);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowCount(row);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(row);	  Integer    row    =    getRowCount(col);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  Integer  row  =  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  1;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  1;	  Integer    row    =    0;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  Integer  row  =  getRowIndex(col);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowIndex(col);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex(col);	  Integer    row    =    0;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  Integer  row  =  getRow(row,  col);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRow(row,  col);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(row,  col);	      Integer    row    =    getRow(row);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  Integer  row  =  getRowIndex(row);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowIndex(row);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex(row);	      Integer    row    =    getRow(row);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  Integer  row  =  this.getRowCount()  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  this.getRowCount()  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.getRowCount()  -  1;	  Integer    row    =    this.getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  Integer  row  =  this.getRowCount()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  this.getRowCount()  +  1;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.getRowCount()  +  1;	  Integer    row    =    this.getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  Integer  row  =  this.getColumnCount();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  this.getColumnCount();  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.getColumnCount();	  Integer    row    =    this.getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
22	[BUG]  [BUGGY]  Integer  row  =  getRowValue(col);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowValue(col);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowValue(col);	      Integer    row    =    getColumn(col);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  int  height  =  getHeight()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  int  height  =  getHeight()  +  1;  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  +  1;	      int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  int  height  =  getHeight()  -  col;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  int  height  =  getHeight()  -  col;  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  -  col;	      int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  int  height  =  getHeight()  +  col;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  int  height  =  getHeight()  +  col;  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  +  col;	      int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  int  height  =  getHeight()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  int  height  =  getHeight()  -  1;  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  -  1;	      int    height    =    getHeight();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  Integer  row  =  super.getRow(col);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  super.getRow(col);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getRow(col);	      Integer    row    =    super.getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  super.getBasicRow(col  +  1);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col  +  1);	      Integer    row    =    super.getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(row);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  super.getBasicRow(row);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(row);	      Integer    row    =    super.getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  Integer  row  =(Integer)this.row;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =(Integer)this.row;  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.row;	      Integer    row    =(Integer)this.col;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  Integer  row  =(Integer)this.col  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =(Integer)this.col  +  1;  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.col  +  1;	      Integer    row    =(Integer)this.col;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  Integer  row  =(Integer)col;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =(Integer)col;  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)col;	      Integer    row    =(Integer)this.col;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  Integer  row  =  getRow(row).intValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRow(row).intValue();  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(row).intValue();	      Integer    row    =    getRow(col).intValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  Integer  row  =  getRow(col).doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRow(col).doubleValue();  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col).doubleValue();	      Integer    row    =    getRow(col).intValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  Integer  row  =  getRow(col).floatValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRow(col).floatValue();  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col).floatValue();	      Integer    row    =    getRow(col).intValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
36	[BUG]  [BUGGY]  Integer  row  =  new  Integer(0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  new  Integer(0);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(0);	  Integer    row    =    new    Integer(col);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  Integer  row  =  new  Integer(col  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  new  Integer(col  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(col  +  1);	  Integer    row    =    new    Integer(col);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  Integer  row  =  new  Integer(col  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  new  Integer(col  -  1);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(col  -  1);	  Integer    row    =    new    Integer(col);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  Integer  row  =  new  Integer(0,  col);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  new  Integer(0,  col);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(0,  col);	  Integer    row    =    new    Integer(col);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  Integer  row  =  getColumn(col).intValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getColumn(col).intValue();  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumn(col).intValue();	      Integer    row    =    getRow(col).intValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  int  row  =  getRowIndex(col);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  int  row  =  getRowIndex(col);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowIndex(col);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  int  row  =  getRow(col);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  int  row  =  getRow(col);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRow(col);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  Integer  row  =  this.row  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  this.row  -  1;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  -  1;	  Integer    row    =    this.row;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  Integer  row  =  getBasicRow(col  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getBasicRow(col  -  1);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getBasicRow(col  -  1);	      Integer    row    =    getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  super.getBasicRow(col  -  1);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col  -  1);	      Integer    row    =    super.getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  Integer  row  =  getColumnCount(col);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getColumnCount(col);  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnCount(col);	  Integer    row    =    getRowCount(col);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS);	      Integer    row    =    super.getBasicRow(col);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  Integer  row  =  getRowValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRowValue();  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowValue();	      Integer    row    =    getBase();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
49	[BUG]  [BUGGY]  Integer  row  =  getRow(col).intValue()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  getRow(col).intValue()  +  1;  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col).intValue()  +  1;	      Integer    row    =    getRow(col).intValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  int  row  =  getRowCount();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  int  row  =  getRowCount();  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowCount();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  Integer  row  =  this.row.intValue;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =  this.row.intValue;  [BUGGY]    for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row.intValue;	  Integer    row    =    this.row;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  Integer  row  =(int)this.col;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =(int)this.col;  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(int)this.col;	      Integer    row    =(Integer)this.col;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  Integer  row  =(Integer)this.rows.get(col);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  Integer  getBasicRow(final  int  col)  {    [BUGGY]  Integer  row  =(Integer)this.rows.get(col);  [BUGGY]    Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.rows.get(col);	      Integer    row    =(Integer)this.col;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
