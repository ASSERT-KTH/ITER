bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  row  =  getRow()  -  col;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow()  -  col;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow()  -  col;	  Integer    row    =    getRow();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  Integer  row  =(int)col;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(int)col;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(int)col;	  Integer    row    =(Integer)col;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
3	[BUG]  [BUGGY]  Integer  row  =(Integer)col.intValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)col.intValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)col.intValue();	  Integer    row    =(Integer)col;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
4	[BUG]  [BUGGY]  int  height  =  getWidth();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  height  =  getWidth();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getWidth();	  int    height    =    getHeight()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]  int  height  =  getHeight()  /  col;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  height  =  getHeight()  /  col;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  /  col;	  int    height    =    getHeight()    -    col;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
6	[BUG]  [BUGGY]  int  height  =  getHeight()  *  col;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  height  =  getHeight()  *  col;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  *  col;	  int    height    =    getHeight()    -    col;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
7	[BUG]  [BUGGY]  int  height  =  getWidth()  -  col;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  height  =  getWidth()  -  col;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getWidth()  -  col;	  int    height    =    getHeight()    -    col;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
8	[BUG]  [BUGGY]  Integer  row  =  super.getRow(row);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getRow(row);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getRow(row);	  Integer    row    =    super.getRow(col);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  Integer  row  =  super.getRow(col  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getRow(col  +  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getRow(col  +  1);	  Integer    row    =    super.getRow(col);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  Integer  row  =  super.getRow(col  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getRow(col  -  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getRow(col  -  1);	  Integer    row    =    super.getRow(col);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
11	[BUG]  [BUGGY]  Integer  row  =(int)this.row;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(int)this.row;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(int)this.row;	  Integer    row    =(int)this.col;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
12	[BUG]  [BUGGY]  Integer  row  =(int)this.col  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(int)this.col  +  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(int)this.col  +  1;	  Integer    row    =(int)this.col;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
13	[BUG]  [BUGGY]  Integer  row  =  new  Integer(col  +  1d);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(col  +  1d);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(col  +  1d);	  Integer    row    =    new    Integer(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
14	[BUG]  [BUGGY]  Integer  row  =  new  Integer(col  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(col  +  2);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(col  +  2);	  Integer    row    =    new    Integer(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
15	[BUG]  [BUGGY]  Integer  row  =  this.getRowCount()  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.getRowCount()  /  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.getRowCount()  /  1;	  Integer    row    =    this.getRowCount()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
16	[BUG]  [BUGGY]  Integer  row  =  this.col;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.col;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.col;	  Integer    row    =    col;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col  +  1d);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(col  +  1d);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col  +  1d);	  Integer    row    =    getRowCount(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(col  +  2);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col  +  2);	  Integer    row    =    getRowCount(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  Integer  row  =  getColumnCount(col  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumnCount(col  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnCount(col  +  1);	  Integer    row    =    getRowCount(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  Integer  row  =  this.getColumnCount()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.getColumnCount()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.getColumnCount()  -  1;	  Integer    row    =    this.getRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
21	[BUG]  [BUGGY]  Integer  row  =  col.getRowCount();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  col.getRowCount();  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  col.getRowCount();	  Integer    row    =    this.getRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  Integer  row  =  getColumnCount();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumnCount();  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnCount();	  Integer    row    =    getRowCount()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  Integer  row  =  getRow(col  -  1d);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(col  -  1d);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col  -  1d);	  Integer    row    =    getRow(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  Integer  row  =  getRow(col  -  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(col  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col  -  2);	  Integer    row    =    getRow(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  Integer  row  =  getRow(row,  col  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(row,  col  -  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(row,  col  -  1);	  Integer    row    =    getRow(row,    col);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
26	[BUG]  [BUGGY]  Integer  row  =  getRow(row,  col  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(row,  col  +  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(row,  col  +  1);	  Integer    row    =    getRow(row,    col);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  Integer  row  =  getRow(col,  row);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(col,  row);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col,  row);	  Integer    row    =    getRow(row,    col);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  Integer  row  =  getRowIndex(row,  col);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowIndex(row,  col);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex(row,  col);	  Integer    row    =    getRowIndex(col);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  Integer  row  =  getColumnIndex(col);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumnIndex(col);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnIndex(col);	  Integer    row    =    getRowIndex(col);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  Integer  row  =  getColumnsCount();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumnsCount();  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnsCount();	  Integer    row    =    getRowCount()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  int  row  =  getRowCount(col);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRowCount(col);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowCount(col);	  int    row    =    getRow(col);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
32	[BUG]  [BUGGY]  int  row  =  getRow(row);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRow(row);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRow(row);	  int    row    =    getRow(col);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
33	[BUG]  [BUGGY]  Integer  row  =  getRowIndex(row  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowIndex(row  +  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex(row  +  1);	  Integer    row    =    getRowIndex(row);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
34	[BUG]  [BUGGY]  Integer  row  =  getRowCount(row).intValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(row).intValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(row).intValue();	  Integer    row    =    getRow(row).intValue();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
35	[BUG]  [BUGGY]  Integer  row  =  getBasicRow(col  -  1d);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getBasicRow(col  -  1d);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getBasicRow(col  -  1d);	  Integer    row    =    getBasicRow(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
36	[BUG]  [BUGGY]  Integer  row  =  getBasicRow(col  -  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getBasicRow(col  -  2);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getBasicRow(col  -  2);	  Integer    row    =    getBasicRow(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
37	[BUG]  [BUGGY]  Integer  row  =  getRowValue(row);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowValue(row);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowValue(row);	  Integer    row    =    getRowValue(col);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
38	[BUG]  [BUGGY]  Integer  row  =  getColumnValue(col);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumnValue(col);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnValue(col);	  Integer    row    =    getRowValue(col);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
39	[BUG]  [BUGGY]  Integer  row  =  getRowValue(col  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowValue(col  +  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowValue(col  +  1);	  Integer    row    =    getRowValue(col);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
40	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col,  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col,  1);	  Integer    row    =    super.getBasicRow(col,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
41	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col,  0);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col,  0);	  Integer    row    =    super.getBasicRow(col,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
42	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS,  maxUlps);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS,  maxUlps);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS,  maxUlps);	  Integer    row    =    super.getBasicRow(col,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
43	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col,  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col,  2);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col,  2);	  Integer    row    =    super.getBasicRow(col,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
44	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col  -  1d);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(col  -  1d);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col  -  1d);	  Integer    row    =    getRowCount(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col  -  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(col  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col  -  2);	  Integer    row    =    getRowCount(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  Integer  row  =  getColumnCount(col  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumnCount(col  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnCount(col  -  1);	  Integer    row    =    getRowCount(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  Integer  row  =  getRowCount(row,  col);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(row,  col);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(row,  col);	  Integer    row    =    getRowCount(row);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  Integer  row  =  getBasicRow(col  +  1d);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getBasicRow(col  +  1d);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getBasicRow(col  +  1d);	  Integer    row    =    getBasicRow(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  Integer  row  =  getBasicRow(col  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getBasicRow(col  +  2);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getBasicRow(col  +  2);	  Integer    row    =    getBasicRow(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  Integer  row  =  getColumn(col).intValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumn(col).intValue()  +  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumn(col).intValue()  +  1;	  Integer    row    =    getRow(col).intValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
51	[BUG]  [BUGGY]  Integer  row  =  col  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  col  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  col  -  1;	  Integer    row    =    this.row    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
52	[BUG]  [BUGGY]  Integer  row  =  this.row  -  1d;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row  -  1d;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  -  1d;	  Integer    row    =    this.row    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
53	[BUG]  [BUGGY]  Integer  row  =  this.row  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  +  1;	  Integer    row    =    this.row    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
54	[BUG]  [BUGGY]  Integer  row  =  0,  col  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  0,  col  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  0,  col  =  0;	  Integer    row    =    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
55	[BUG]  [BUGGY]  Integer  row  =  getRowIndex()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowIndex()  +  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex()  +  1;	  Integer    row    =    getRowIndex();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  Integer  row  =  getRowIndex()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowIndex()  -  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex()  -  1;	  Integer    row    =    getRowIndex();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  int  row  =  getRowIndex(row);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRowIndex(row);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowIndex(row);	  int    row    =    getRowIndex(col);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
58	[BUG]  [BUGGY]  int  row  =  getRowIndex(row,  col);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRowIndex(row,  col);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowIndex(row,  col);	  int    row    =    getRowIndex(col);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
59	[BUG]  [BUGGY]  int  row  =  getColumnIndex(col);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getColumnIndex(col);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getColumnIndex(col);	  int    row    =    getRowIndex(col);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
60	[BUG]  [BUGGY]  Integer  row  =  getRow(row).floatValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(row).floatValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(row).floatValue();	  Integer    row    =    getRow(col).floatValue();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
61	[BUG]  [BUGGY]  Integer  row  =  getColumnCount()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumnCount()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnCount()  -  1;	  Integer    row    =    getRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  Integer  row  =  getColumnsCount()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumnsCount()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumnsCount()  -  1;	  Integer    row    =    getRowCount()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  Integer  row  =(Integer)col  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)col  +  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)col  +  1;	  Integer    row    =(Integer)this.col    +    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
64	[BUG]  [BUGGY]  Integer  row  =(Integer)this.col  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.col  -  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.col  -  1;	  Integer    row    =(Integer)this.col    +    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  Integer  row  =(Integer)this.col  +  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.col  +  2;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.col  +  2;	  Integer    row    =(Integer)this.col    +    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
66	[BUG]  [BUGGY]  Integer  row  =  new  Integer(col  -  1d);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(col  -  1d);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(col  -  1d);	  Integer    row    =    new    Integer(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
67	[BUG]  [BUGGY]  Integer  row  =(Integer)this.row  +  col;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.row  +  col;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.row  +  col;	  Integer    row    =(Integer)this.row;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
68	[BUG]  [BUGGY]  Integer  row  =(Integer)this.row  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.row  +  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.row  +  1;	  Integer    row    =(Integer)this.row;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
69	[BUG]  [BUGGY]  Integer  row  =  getRowValue(col).intValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowValue(col).intValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowValue(col).intValue();	  Integer    row    =    getColumn(col).intValue();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
70	[BUG]  [BUGGY]  Integer  row  =  getRowIndex(col).intValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowIndex(col).intValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex(col).intValue();	  Integer    row    =    getColumn(col).intValue();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
71	[BUG]  [BUGGY]  int  height  =  getHeight()  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  height  =  getHeight()  +  2;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  +  2;	  int    height    =    getHeight()    +    col;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
72	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col  +  1d);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col  +  1d);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col  +  1d);	  Integer    row    =    super.getBasicRow(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
73	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col  +  2);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col  +  2);	  Integer    row    =    super.getBasicRow(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
74	[BUG]  [BUGGY]  Integer  row  =  col  <  0?  this.getColumnCount()  :  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  col  <  0?  this.getColumnCount()  :  0;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  col  <  0?  this.getColumnCount()  :  0;	  Integer    row    =    this.getColumnCount();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
75	[BUG]  [BUGGY]  Integer  row  =  col.getColumnCount();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  col.getColumnCount();  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  col.getColumnCount();	  Integer    row    =    this.getColumnCount();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
76	[BUG]  [BUGGY]  Integer  row  =  this.row.getRowCount();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row.getRowCount();  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row.getRowCount();	  Integer    row    =    this.row.intValue;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
77	[BUG]  [BUGGY]  Integer  row  =  this.row.intValue  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row.intValue  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row.intValue  -  1;	  Integer    row    =    this.row.intValue;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
78	[BUG]  [BUGGY]  Integer  row  =  super.getColumnRow(col);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getColumnRow(col);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getColumnRow(col);	  Integer    row    =    super.getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
79	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(row,  col);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(row,  col);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(row,  col);	  Integer    row    =    super.getBasicRow(row);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
80	[BUG]  [BUGGY]  Integer  row  =  getRow(col  +  1d);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(col  +  1d);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col  +  1d);	  Integer    row    =    getRow(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  Integer  row  =  getRow(col  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(col  +  2);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col  +  2);	  Integer    row    =    getRow(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  Integer  row  =  col  +  this.row;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  col  +  this.row;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  col  +  this.row;	  Integer    row    =    this.row    +    col;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
83	[BUG]  [BUGGY]  Integer  row  =  this.row  *  col;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row  *  col;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  *  col;	  Integer    row    =    this.row    +    col;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  Integer  row  =  this.row  +  this.col;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row  +  this.col;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  +  this.col;	  Integer    row    =    this.row    +    col;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
85	[BUG]  [BUGGY]  Integer  row  =(Integer)this.rows.get(col  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.rows.get(col  -  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.rows.get(col  -  1);	  Integer    row    =(Integer)this.rows.get(col);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
86	[BUG]  [BUGGY]  Integer  row  =(Integer)this.rows.get(col  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.rows.get(col  +  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.rows.get(col  +  1);	  Integer    row    =(Integer)this.rows.get(col);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
87	[BUG]  [BUGGY]  Integer  row  =(Integer)this.rows.get(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.rows.get(0);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.rows.get(0);	  Integer    row    =(Integer)this.rows.get(col);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
88	[BUG]  [BUGGY]  Integer  height  =  getHeight();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  height  =  getHeight();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  height  =  getHeight();	  int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
89	[BUG]  [BUGGY]  Integer  row  =  new  Integer(0,  col  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(0,  col  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(0,  col  -  1);	  Integer    row    =    new    Integer(0,    col);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
90	[BUG]  [BUGGY]  Integer  row  =  new  Integer(0,  col  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(0,  col  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(0,  col  +  1);	  Integer    row    =    new    Integer(0,    col);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
91	[BUG]  [BUGGY]  Integer  row  =  new  Integer(1,  col);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(1,  col);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(1,  col);	  Integer    row    =    new    Integer(0,    col);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
92	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col  -  1d);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col  -  1d);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col  -  1d);	  Integer    row    =    super.getBasicRow(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
93	[BUG]  [BUGGY]  Integer  row  =  getRow(row).doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(row).doubleValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(row).doubleValue();	  Integer    row    =    getRow(col).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
94	[BUG]  [BUGGY]  Integer  row  =  getColumn(col).doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumn(col).doubleValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumn(col).doubleValue();	  Integer    row    =    getRow(col).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
95	[BUG]  [BUGGY]  Integer  row  =  getRow(col).doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(col).doubleValue()  +  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col).doubleValue()  +  1;	  Integer    row    =    getRow(col).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
96	[BUG]  [BUGGY]  int  row  =  getRowCount()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRowCount()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowCount()  -  1;	  int    row    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
97	[BUG]  [BUGGY]  int  row  =  getRowCount()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRowCount()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowCount()  +  1;	  int    row    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
98	[BUG]  [BUGGY]  int  row  =  getRowCount()  -  col;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRowCount()  -  col;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowCount()  -  col;	  int    row    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
99	[BUG]  [BUGGY]  int  row  =  getRowCount()  -  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRowCount()  -  2;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowCount()  -  2;	  int    row    =    getRowCount();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
100	[BUG]  [BUGGY]  Integer  row  =  getRowCount(0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(0);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(0);	  Integer    row    =    getColumnCount(col);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
101	[BUG]  [BUGGY]  Integer  row  =  new  Integer(1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(1);	  Integer    row    =    new    Integer(0);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
102	[BUG]  [BUGGY]  Integer  row  =  getRow(col  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(col  -  1  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col  -  1  +  1);	  Integer    row    =    getRow(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
103	[BUG]  [BUGGY]  Integer  row  =  new  Integer(col  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(col  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(col  -  2);	  Integer    row    =    new    Integer(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
104	[BUG]  [BUGGY]  Integer  row  =  new  Integer(col  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(col  -  1  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(col  -  1  +  1);	  Integer    row    =    new    Integer(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
105	[BUG]  [BUGGY]  Integer  row  =  new  Integer(0,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(0,  0);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(0,  0);	  Integer    row    =    new    Integer(0,    col);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
106	[BUG]  [BUGGY]  Integer  row  =  getRowValue(col  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowValue(col  -  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowValue(col  -  1);	  Integer    row    =    getRowValue(col);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
107	[BUG]  [BUGGY]  int  height  =  getHeight()  -  col  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  height  =  getHeight()  -  col  +  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  -  col  +  1;	  int    height    =    getHeight()    -    col;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
108	[BUG]  [BUGGY]  Integer  row  =  getLeftCount();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getLeftCount();  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getLeftCount();	  Integer    row    =    getRowCount()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
109	[BUG]  [BUGGY]  Integer  row  =(Integer)this.row,  col;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.row,  col;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.row,  col;	  Integer    row    =(Integer)this.row;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
110	[BUG]  [BUGGY]  Integer  row  =(Integer)col.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)col.clone();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)col.clone();	  Integer    row    =(Integer)col;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
111	[BUG]  [BUGGY]  Integer  row  =  getColumn(col).floatValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getColumn(col).floatValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getColumn(col).floatValue();	  Integer    row    =    getRow(col).floatValue();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
112	[BUG]  [BUGGY]  Integer  row  =  this.row  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row  -  2;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  -  2;	  Integer    row    =    this.row    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
113	[BUG]  [BUGGY]  Integer  row  =  getRowValue(col).doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowValue(col).doubleValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowValue(col).doubleValue();	  Integer    row    =    getRow(col).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
114	[BUG]  [BUGGY]  Integer  row  =(Integer)this.rows.get(col  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.rows.get(col  -  2);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.rows.get(col  -  2);	  Integer    row    =(Integer)this.rows.get(col);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
115	[BUG]  [BUGGY]  Integer  row  =  this.row.doubleValue;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row.doubleValue;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row.doubleValue;	  Integer    row    =    this.row.intValue;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
116	[BUG]  [BUGGY]  Integer  row  =  this.row.intValue  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row.intValue  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row.intValue  +  1;	  Integer    row    =    this.row.intValue;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
117	[BUG]  [BUGGY]  Integer  row  =  getRowIndex(row  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowIndex(row  -  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex(row  -  1);	  Integer    row    =    getRowIndex(row);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
118	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(col  -  1  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col  -  1  +  1);	  Integer    row    =    getRowCount(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
119	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col,  col);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col,  col);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col,  col);	  Integer    row    =    super.getBasicRow(col,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
120	[BUG]  [BUGGY]  Integer  row  =  getRowIndex(col  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowIndex(col  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex(col  +  1);	  Integer    row    =    getRowIndex(col);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
121	[BUG]  [BUGGY]  Integer  row  =  this.row  -  col;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row  -  col;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  -  col;	  Integer    row    =    this.row    +    col;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
122	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col  -  2);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col  -  2);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col  -  2);	  Integer    row    =    super.getBasicRow(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
123	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col  -  1  +  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col  -  1  +  1);	  Integer    row    =    super.getBasicRow(col    -    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
124	[BUG]  [BUGGY]  int  height  =  getWidth()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  height  =  getWidth()  -  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getWidth()  -  1;	  int    height    =    getHeight()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
125	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col  /  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(col  /  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col  /  1);	  Integer    row    =    getRowCount(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
126	[BUG]  [BUGGY]  Integer  row  =  this.getRowCount(col);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.getRowCount(col);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.getRowCount(col);	  Integer    row    =    this.getColumnCount();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
127	[BUG]  [BUGGY]  Integer  row  =(int)(col  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(int)(col  +  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(int)(col  +  1);	  Integer    row    =(Integer)col;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
128	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS  -  1);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS  -  1);	  Integer    row    =    super.getBasicRow(col,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
129	[BUG]  [BUGGY]  Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS,  0);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  super.getBasicRow(col,  DEFAULT_ULPS,  0);	  Integer    row    =    super.getBasicRow(col,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
130	[BUG]  [BUGGY]  Integer  row  =  getRow(col).intValue()  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRow(col).intValue()  /  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRow(col).intValue()  /  1;	  Integer    row    =    getRow(col).intValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
131	[BUG]  [BUGGY]  int  row  =  getRow(col  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRow(col  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRow(col  -  1);	  int    row    =    getRow(col);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
132	[BUG]  [BUGGY]  Integer  row  =  this.row  +  this.maxUlps;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row  +  this.maxUlps;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  +  this.maxUlps;	  Integer    row    =    this.row    +    col;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
133	[BUG]  [BUGGY]  Integer  row  =  this.row  /  col;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row  /  col;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  /  col;	  Integer    row    =    this.row    +    col;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
134	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col).doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(col).doubleValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col).doubleValue();	  Integer    row    =    getRow(col).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
135	[BUG]  [BUGGY]  Integer  row  =  this.row.getRowIndex();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row.getRowIndex();  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row.getRowIndex();	  Integer    row    =    this.row.intValue;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
136	[BUG]  [BUGGY]  Integer  row  =  getRowCount(col).intValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(col).intValue();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(col).intValue();	  Integer    row    =    getColumn(col).intValue();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
137	[BUG]  [BUGGY]  Integer  row  =  getRowValue(col,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowValue(col,  DEFAULT_ULPS);  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowValue(col,  DEFAULT_ULPS);	  Integer    row    =    getRowValue(col);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
138	[BUG]  [BUGGY]  Integer  row  =  getRowCount()  /  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount()  /  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount()  /  1;	  Integer    row    =    getRowCount()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
139	[BUG]  [BUGGY]  Integer  row  =  getRowCount(row  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowCount(row  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowCount(row  -  1);	  Integer    row    =    getRowCount(row);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
140	[BUG]  [BUGGY]  Integer  row  =  new  Integer(col  /  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  new  Integer(col  /  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  new  Integer(col  /  1);	  Integer    row    =    new    Integer(col    +    1);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
141	[BUG]  [BUGGY]  Integer  row  =(Integer)this.row.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.row.clone();  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.row.clone();	  Integer    row    =(Integer)this.row;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
142	[BUG]  [BUGGY]  int  height  =  getHeight()  -  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  height  =  getHeight()  -  2;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  -  2;	  int    height    =    getHeight()    -    col;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
143	[BUG]  [BUGGY]  int  height  =  getHeight()  /  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  height  =  getHeight()  /  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  height  =  getHeight()  /  1;	  int    height    =    getHeight()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
144	[BUG]  [BUGGY]  Integer  row  =(Integer)this.col  /  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =(Integer)this.col  /  1;  [BUGGY]      Integer  row  =  null;  for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =(Integer)this.col  /  1;	  Integer    row    =(Integer)this.col    +    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
145	[BUG]  [BUGGY]  Integer  row  =  this.row  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  this.row  *  1;  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  this.row  *  1;	  Integer    row    =    this.row    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
146	[BUG]  [BUGGY]  Integer  row  =  getRowIndex(col  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  Integer  row  =  getRowIndex(col  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	Integer  row  =  getRowIndex(col  -  1);	  Integer    row    =    getRowIndex(col);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
147	[BUG]  [BUGGY]  int  row  =  getRowIndex(col  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRowIndex(col  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowIndex(col  +  1);	  int    row    =    getRowIndex(col);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
148	[BUG]  [BUGGY]  int  row  =  getRowIndex(col  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  Integer  getBasicRow(final  int  col)  {      [BUGGY]  int  row  =  getRowIndex(col  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  getHeight();  i++)  {  final  double  entry  =  getEntry(i,  col);  if  (Precision.equals(entry,  1d,  maxUlps)  &&  (row  ==  null))  {  row  =  i;  }  else  if  (!Precision.equals(entry,  0d,  maxUlps))  {  return  null;  }  }  return  row;  }  [CLASS]  SimplexTableau  [METHOD]  getBasicRow  [RETURN_TYPE]  Integer  final  int  col  [VARIABLES]  Integer  row  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  double  coefficient  entry  epsilon  sum  LinearObjectiveFunction  f  List  columnLabels  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  count  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22360679774997896	311	311	1	replace	int  row  =  getRowIndex(col  -  1);	  int    row    =    getRowIndex(col);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
