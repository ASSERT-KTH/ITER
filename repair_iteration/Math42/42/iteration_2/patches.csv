bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicColumns.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicColumns.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicColumns.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  basicRows.getValue(basicRow));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  negativeVarBasicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
7	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  columnLabels,  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  columnLabels,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  columnLabels,  basicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
8	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselessRows,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselessRows,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baselessRows,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(baselessRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
9	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(baselessRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(baselessRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(baselessRows));	  return    new    RealPointValuePair(baselessRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
10	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(baselessRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
11	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  coefficients));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  coefficients));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
12	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  basicRows));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
13	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  coefficients));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  coefficients));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
14	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  colIndex);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  colIndex);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  colIndex);	  coefficients[i]    =    f.getValue(basicRow,    negativeVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
15	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  normalized);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  normalized);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  normalized);	  coefficients[i]    =    f.getValue(basicRow,    negativeVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
16	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  column);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  column);	  coefficients[i]    =    f.getValue(basicRow,    negativeVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
17	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue(f));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue(f));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue());  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue());	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(negativeVarBasicRows));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(negativeVarBasicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(negativeVarBasicRows));	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
21	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRows.getValue(f));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRows.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  negativeVarBasicRows.getValue(f));	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
22	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  negativeVarBasicRows.getValue(basicRows));	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
23	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRows.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRows.getValue());  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  negativeVarBasicRows.getValue());	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
24	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnSize());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnSize());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnSize());	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnSize()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
25	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnSize()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
26	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  -  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
27	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  basicRows));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  basicRows));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn(),  basicRows));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
28	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  +  1));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn()  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumn()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
29	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(normalized));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(normalized));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(normalized));	  return    new    RealPointValuePair(normalized,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
30	[BUG]  [BUGGY]  return  new  RealPointValuePair(normalized,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(normalized,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(normalized,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(normalized,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
31	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  normalized.getValue(f));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  normalized.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  normalized.getValue(f));	  return    new    RealPointValuePair(normalized,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
32	[BUG]  [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(normalized,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
33	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
34	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
35	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  normalized);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  normalized);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  normalized);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
36	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicFunction);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicFunction);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicFunction);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicFunction);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
37	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  normalized);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  normalized);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  normalized);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicFunction);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
38	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  baseColumn);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  baseColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  baseColumn);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicFunction);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
39	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow)+  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRow)+  1);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
40	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
41	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRow));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
42	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  -  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
43	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
44	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length  +  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
45	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRows.length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRows.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
46	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  coefficients.length));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  coefficients.length));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  coefficients.length));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients.length));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
47	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients.length  -  1));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients.length  -  1));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients.length  -  1));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients.length));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
48	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  coefficients.length));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  coefficients.length));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  coefficients.length));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients.length));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
49	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  basicRows.length));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  basicRows.length));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients.length));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
50	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  basicRow);	  coefficients[i]    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
51	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  baseColumn);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  baseColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  baseColumn);	  coefficients[i]    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
52	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  1)/  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  1)/  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  1)/  1;	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount())-    1;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
53	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount())/  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount())/  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount())/  1;	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount())-    1;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
54	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicRows);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
55	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
56	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  coefficients);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
57	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRows);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
58	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarColumn);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarColumn);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    negativeVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
59	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarColumn,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarColumn,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarColumn,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    negativeVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
60	[BUG]  [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  negativeVarColumn);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  negativeVarColumn);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    negativeVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
61	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  basicRows.getValue(basicRow);	  Integer    coefficients[]    =    basicRows.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
62	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(basicRow,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  basicRows.getValue(basicRow,  negativeVarBasicRow);	  Integer    coefficients[]    =    basicRows.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
63	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(basicColumn);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(basicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  basicRows.getValue(basicColumn);	  Integer    coefficients[]    =    basicRows.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  negativeVarBasicRows);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
65	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)+  1);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
66	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
67	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  negativeVarColumn);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows),  negativeVarColumn);	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
68	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicVarBasicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    negativeVarBasicRows);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
69	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)/  2.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)/  2.0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows)/  2.0);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)/    2.0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
70	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)/    2.0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
71	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  base.getValue(basicRows)/  2.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  base.getValue(basicRows)/  2.0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  base.getValue(basicRows)/  2.0);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)/    2.0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
72	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  negativeVarBasicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
73	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  negativeVarBasicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
74	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  coefficients);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
75	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  coefficients);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
76	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumns));	  return    new    RealPointValuePair(basicColumns,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
77	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(basicColumns,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
78	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(negativeRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(negativeRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(negativeRows));	  return    new    RealPointValuePair(negativeRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
79	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeRows.getValue(f));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeRows.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  negativeRows.getValue(f));	  return    new    RealPointValuePair(negativeRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
80	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(positiveRows));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(positiveRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(positiveRows));	  return    new    RealPointValuePair(negativeRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
81	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  coefficients);	  Integer    coefficients    =    f.getValue(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
82	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  f);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  f);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  f);	  Integer    coefficients    =    f.getValue(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
83	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(f,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(f,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(f,  coefficients);	  Integer    coefficients    =    f.getValue(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
84	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  baseRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  baseRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  baseRows);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
85	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getRows();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getRows();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getRows();	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
86	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getEmptyColumns();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getEmptyColumns();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getEmptyColumns();	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
87	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(basicColumns,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
88	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRows.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRows.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  negativeVarBasicRows.getValue(basicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
89	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue(basicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
90	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRow.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRow.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  negativeVarBasicRow.getValue(basicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
91	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicColumn);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
92	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  colIndex);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  colIndex);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  colIndex);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
93	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  column);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  column);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
94	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicRow);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
95	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicColumns);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicColumns);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    baseColumns);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
96	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns,  coefficients);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns,  coefficients);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    baseColumns);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
97	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns,  basicRows);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns,  basicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    baseColumns);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
98	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(coefficients));	  return    new    RealPointValuePair(f,    coefficients.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
99	[BUG]  [BUGGY]  return  new  RealPointValuePair(this,  coefficients.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(this,  coefficients.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(this,  coefficients.getValue(coefficients));	  return    new    RealPointValuePair(f,    coefficients.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
100	[BUG]  [BUGGY]  return  new  RealPointValuePair(f,  basicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(f,  basicRows.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(f,  basicRows.getValue(coefficients));	  return    new    RealPointValuePair(f,    coefficients.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
101	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  negativeVarBasicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
102	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  negativeVarBasicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
103	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  2);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
104	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  +  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
105	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset());	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
106	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn());	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
107	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(baseRow,  getColumnCount()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(baseRow,  getColumnCount()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(baseRow,  getColumnCount()  -  1);	  Integer    coefficients[]    =    getEntry(baseRow,    getColumnCount());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
108	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(baseRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(baseRow,  getRhsOffset());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(baseRow,  getRhsOffset());	  Integer    coefficients[]    =    getEntry(baseRow,    getColumnCount());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
109	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(coefficients));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
110	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows));	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
111	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  basicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  basicRows.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  basicRows.getValue(coefficients));	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
112	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(negativeVarBasicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(negativeVarBasicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
113	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicColumns));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicColumns));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
114	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumn,  f.getValue(negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumn,  f.getValue(negativeVarBasicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumn,  f.getValue(negativeVarBasicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
115	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  columnLabels);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  columnLabels);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
116	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset(),  basicRows));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset(),  basicRows));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset(),  basicRows));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
117	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  1));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
118	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  +  1));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
119	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  column  +  1);	  Integer    coefficients[]    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
120	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0,  column);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  0,  column);	  Integer    coefficients[]    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
121	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicColumn);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  basicColumn);	  Integer    coefficients[]    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
122	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRows);	  Integer    coefficients    =    basicRows.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
123	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRows,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRows,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRows,  negativeVarBasicRows);	  Integer    coefficients    =    basicRows.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
124	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicRows);	  coefficients[i]    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
125	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coefficients),  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coefficients),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(coefficients),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
126	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  negativeVarColumns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  negativeVarColumns);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  negativeVarColumns);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
127	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRows.getValue(f));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRows.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  negativeVarBasicRows.getValue(f));	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
128	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRow.getValue(f));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRow.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  negativeVarBasicRow.getValue(f));	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
129	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset(),  basicRows));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset(),  basicRows));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset(),  basicRows));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnOffset()));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
130	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  +  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnOffset()));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
131	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset(),  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset(),  basicRows.length));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset(),  basicRows.length));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnOffset()));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
132	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
133	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
134	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  coefficients);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
135	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  columnLabels,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  columnLabels,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  columnLabels,  basicRows);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
136	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(colons));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(colons));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(colons));	  return    new    RealPointValuePair(colons,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
137	[BUG]  [BUGGY]  return  new  RealPointValuePair(baserialRows,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baserialRows,  f.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baserialRows,  f.getValue(basicRows));	  return    new    RealPointValuePair(colons,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
138	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  columnLabels);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  columnLabels);	  Integer    coefficients[]    =    f.getValue(basicRow,    normalized);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
139	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicLows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicLows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  basicLows);	  Integer    coefficients[]    =    f.getValue(basicRow,    normalized);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
140	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  normalized,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  normalized,  columnLabels);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  normalized,  columnLabels);	  Integer    coefficients[]    =    f.getValue(basicRow,    normalized);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
141	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicVarBasicRow);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
142	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRow,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRow,  basicRows);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
143	[BUG]  [BUGGY]  double  coefficients  =  f.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  double  coefficients  =  f.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	double  coefficients  =  f.getValue(basicRow);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
144	[BUG]  [BUGGY]  int  coefficients  =  basicRows.getValue(f);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  basicRows.getValue(f);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  basicRows.getValue(f);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
145	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow,  column);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRow,  column);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRow,  column);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
146	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicColumns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicColumns);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicColumns);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
147	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns,  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns,  coefficients);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicColumns);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
148	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns,  columnLabels);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns,  columnLabels);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicColumns);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
149	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  2);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  2);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)+    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
150	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  1);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)+    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
151	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(negativeVarBasicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(negativeVarBasicRow));	  return    new    RealPointValuePair(basicRow,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
152	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumn));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicColumn));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicColumn));	  return    new    RealPointValuePair(basicRow,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
153	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(baseRows));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(baseRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(baseRows));	  return    new    RealPointValuePair(baseRows,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
154	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  normalizedVarColumn);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  normalizedVarColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  normalizedVarColumn);	  Integer    coefficients[]    =    f.getValue(normalizedVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
155	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(normalizedVarColumn,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(normalizedVarColumn,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(normalizedVarColumn,  basicRows);	  Integer    coefficients[]    =    f.getValue(normalizedVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
156	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(normalizedVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(normalizedVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(normalizedVarBasicRow);	  Integer    coefficients[]    =    f.getValue(normalizedVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
157	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset(),  basicRows));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset(),  basicRows));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset(),  basicRows));	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset()));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
158	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  +  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset()));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
159	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(negativeVarBasicRows));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(negativeVarBasicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(negativeVarBasicRows));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
160	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
161	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRows.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  negativeVarBasicRows.getValue(coefficients));	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
162	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  negativeVarBasicRow.getValue(coefficients));	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
163	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRow.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  negativeVarBasicRow.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  negativeVarBasicRow.getValue(coefficients));	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
164	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength()  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength()  -  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnLength());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
165	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength()  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength()  -  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength()  -  2);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnLength());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
166	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength()  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength()  +  1);	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnLength());    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
167	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow)+  1);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
168	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
169	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  negativeVarBasicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  negativeVarBasicRow));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
170	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  basicRows));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows,  basicRows));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
171	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  graph.getValue(basicRow);	  Integer    coefficients[]    =    graph.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
172	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  graph.getValue(basicRow,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  graph.getValue(basicRow,  negativeVarBasicRow);	  Integer    coefficients[]    =    graph.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
173	[BUG]  [BUGGY]  Integer  coefficients[]  =  table.getValue(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  table.getValue(negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  table.getValue(negativeVarBasicRow);	  Integer    coefficients[]    =    graph.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
174	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(positiveVarBasicRow));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(positiveVarBasicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(positiveVarBasicRow));	  return    new    RealPointValuePair(positiveVarBasicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
175	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow),  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow),  coefficients);	  return    new    RealPointValuePair(positiveVarBasicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
176	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
177	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
178	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  columnLabels);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  columnLabels);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
179	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  coefficients);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
180	[BUG]  [BUGGY]  double  coefficients  =  f.getValue(basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  double  coefficients  =  f.getValue(basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	double  coefficients  =  f.getValue(basicRows);	  double    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
181	[BUG]  [BUGGY]  double  coefficients  =  f.getValue(basicColumns);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  double  coefficients  =  f.getValue(basicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	double  coefficients  =  f.getValue(basicColumns);	  double    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
182	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRows,  basicRows);	  Integer    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
183	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicColumns);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicColumns);	  Integer    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
184	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
185	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  coefficients.length);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
186	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  +  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
187	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length  -  2);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
188	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  basicRow);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicFunction);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
189	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicVarBasicFunction);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicVarBasicFunction);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  basicVarBasicFunction);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicFunction);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
190	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRow);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
191	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRows,  basicRows);	  Integer    coefficients[]    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
192	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  normalized);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  normalized);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRows,  normalized);	  Integer    coefficients[]    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
193	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  1));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
194	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  2));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  2));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  -  2));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
195	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  +  1));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  +  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()  +  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
196	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRow);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
197	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length  -  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
198	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  -  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  -  basicRows.length));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  -  basicRows.length));	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
199	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length)+  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length)+  1;	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()    -    basicRows.length));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
200	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  0);	  Integer    coefficients    =    basicRows.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
201	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(negativeVarBasicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(negativeVarBasicRow));	  return    new    RealPointValuePair(basicRows,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
202	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumn));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumn));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumn));	  return    new    RealPointValuePair(basicRows,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
203	[BUG]  [BUGGY]  Integer  coefficients  =  this.basicRows.getValue(f);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  this.basicRows.getValue(f);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  this.basicRows.getValue(f);	  Integer    coefficients    =    basicRows.getValue(f);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
204	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns,  basicRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumns,  basicRows);	  Integer    coefficients[]    =    f.getValue(basicColumns);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
205	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns,  columnLabels);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumns,  columnLabels);	  Integer    coefficients[]    =    f.getValue(basicColumns);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
206	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns,  normalized);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns,  normalized);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumns,  normalized);	  Integer    coefficients[]    =    f.getValue(basicColumns);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
207	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumn,  basicRows);	  Integer    coefficients[]    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
208	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarColumn);	  Integer    coefficients[]    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
209	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  normalized);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  normalized);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumn,  normalized);	  Integer    coefficients[]    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
210	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  baseColumn);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  baseColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  baseColumn);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
211	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicColumn,  basicRows);	  Integer    coefficients    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
212	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicColumn);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicColumn);	  Integer    coefficients    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
213	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  negativeVarColumn);	  Integer    coefficients    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
214	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  columnLabels);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  columnLabels);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
215	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
216	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0,  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  0,  coefficients);	  Integer    coefficients[]    =    f.getValue(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
217	[BUG]  [BUGGY]  int  coefficients  =  basicRows.getValue(basicRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  basicRows.getValue(basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  basicRows.getValue(basicRows);	  int    coefficients    =    basicRows.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
218	[BUG]  [BUGGY]  int  coefficients  =  basicRows.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  basicRows.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  basicRows.getValue(basicRow);	  int    coefficients    =    basicRows.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
219	[BUG]  [BUGGY]  int  coefficients  =  this.basicRows.getValue(coefficients);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  this.basicRows.getValue(coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  this.basicRows.getValue(coefficients);	  int    coefficients    =    basicRows.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
220	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  colIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  colIndex);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  colIndex);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
221	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
222	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumn));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumn));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumn));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
223	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRows,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRows,  basicRows);	  int    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
224	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRows,  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRows,  negativeVarColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRows,  negativeVarColumn);	  int    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
225	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow  +  2);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow  +  2);	  coefficients[i]    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
226	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow  +  3);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow  +  3);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow  +  3);	  coefficients[i]    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
227	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  basicRows  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  basicRows  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  basicRows  +  1);	  coefficients[i]    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
228	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicRows);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
229	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  0,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  0,  basicRows);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
230	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumn);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumn);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
231	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
232	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baseRows,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
233	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  baseColumn);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  baseColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  baseColumn);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
234	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicRows);	  Integer    coefficients[]    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
235	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  0,  basicRows);	  Integer    coefficients[]    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
236	[BUG]  [BUGGY]  Integer  coefficients[]  =  negativeVarBasicRow.getValues();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  negativeVarBasicRow.getValues();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  negativeVarBasicRow.getValues();	  Integer    coefficients[]    =    basicRows.getValues();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
237	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  basicRows.getValue(basicRows);	  Integer    coefficients[]    =    basicRows.getValues();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
238	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicColumn,  negativeVarBasicRow);	  Integer    coefficients    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
239	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumn);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumn);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
240	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  negativeVarBasicRow);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
241	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumns,  basicRows));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumns,  basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumns,  basicRows));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
242	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumns),  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumns),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumns),  coefficients);	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
243	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  minimumVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  minimumVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  minimumVarBasicRow);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
244	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getEntry(basicRow,  getRhsOffset());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getEntry(basicRow,  getRhsOffset());	  Integer    coefficients[]    =    f.getColumns();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
245	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset());	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
246	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset());	  Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
247	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicColumns),  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicColumns),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicColumns),  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
248	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
249	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficient);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficient);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficient);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
250	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
251	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  negativeVarColumn);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  negativeVarColumn);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    negativeVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
252	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicColumn));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicColumn));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicColumn));	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
253	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(basicRows)+  1);	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
254	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRows,  negativeVarBasicRow);	  Integer    coefficients[]    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
255	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  positiveVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  positiveVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRows,  positiveVarBasicRow);	  Integer    coefficients[]    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
256	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows,  negativeVarBasicRow);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
257	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  positiveVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  positiveVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  positiveVarBasicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
258	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicColumn);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicColumn);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
259	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
260	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicRows.length);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicRows.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicRows.length);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
261	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  lowVarBasicFunction);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  lowVarBasicFunction);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  lowVarBasicFunction);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicFunction);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
262	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicRow);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicFunction);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
263	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicColumn);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
264	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
265	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicRow  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicRow  +  1);	  coefficients[i]    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
266	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRows,  negativeVarBasicRow);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
267	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(negativeVarBasicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(negativeVarBasicRow,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(negativeVarBasicRow,  basicRows);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
268	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  basicRows.getValue(f));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  basicRows.getValue(f));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  basicRows.getValue(f));	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
269	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicColumns));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicColumns));	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
270	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(negativeVarBasicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(negativeVarBasicRow,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(negativeVarBasicRow,  basicRows);	  Integer    coefficients[]    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
271	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(positiveVarBasicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(positiveVarBasicRow,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(positiveVarBasicRow,  basicRows);	  Integer    coefficients[]    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
272	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumn,  negativeVarBasicRow);	  Integer    coefficients[]    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
273	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicColumn);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicColumn);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
274	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeRows,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeRows,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeRows,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(negativeRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
275	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeRows,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeRows,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeRows,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(negativeRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
276	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  negativeVarRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  negativeVarRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows),  negativeVarRows);	  return    new    RealPointValuePair(basicColumns,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
277	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns());	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
278	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRow);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
279	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRow),  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRows,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
280	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicColumns);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicColumns);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
281	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnSize())-  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnSize())-  1;  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnSize())-  1;	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnSize()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
282	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  basicRows.length));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()  -  basicRows.length));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
283	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  total);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  total);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  total);	  coefficients[i]    =    f.getValue(basicRow,    negativeVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
284	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumn));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumn));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumn));	  return    new    RealPointValuePair(basicColumns,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
285	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  negativeVarBasicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  negativeVarBasicRow));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
286	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow),  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
287	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  basicRows.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
288	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
289	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(negativeVarBasicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
290	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  negativeVarBasicRows));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  negativeVarBasicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  negativeVarBasicRows));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
291	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  mostNegative));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  mostNegative));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  mostNegative));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
292	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0,  normalized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  0,  normalized);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  0,  normalized);	  Integer    coefficients[]    =    f.getValue(basicRow,    normalized);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
293	[BUG]  [BUGGY]  Integer  coefficients  =  this.basicRows.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  this.basicRows.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  this.basicRows.getValue(basicRow);	  Integer    coefficients    =    basicRows.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
294	[BUG]  [BUGGY]  Integer  coefficients  =  baseRows.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  baseRows.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  baseRows.getValue(basicRow);	  Integer    coefficients    =    basicRows.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
295	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRow.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRow.length);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRow.length);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
296	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  negativeVarBasicRows.length));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  negativeVarBasicRows.length));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  negativeVarBasicRows.length));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients.length));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
297	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicLabels);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicLabels);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicLabels);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
298	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)/    2.0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
299	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  negativeVarBasicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)/    2.0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
300	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)/    2.0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
301	[BUG]  [BUGGY]  int  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  basicRows.getValue(basicRow,  negativeVarBasicRow);	  int    coefficients    =    basicRows.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
302	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  0);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRows,  0);	  Integer    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
303	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRow,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRow,  negativeVarBasicRow);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
304	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRow,  negativeVarBasicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRow,  negativeVarBasicColumn);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
305	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow,  negativeVarBasicFunction);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRow,  negativeVarBasicFunction);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRow,  negativeVarBasicFunction);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
306	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRow  +  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRow  +  1);	  int    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
307	[BUG]  [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  negativeVarBasicRow);	  return    new    RealPointValuePair(normalized,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
308	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow)/  2.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow)/  2.0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRow)/  2.0);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
309	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  basicRows.length));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  basicRows.length));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()  -  basicRows.length));	  Integer    coefficients[]    =    getEntry(basicRow,    getBasicOffset()));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
310	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  base);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  base);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  base);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
311	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  minimumVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  minimumVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  minimumVarBasicRow);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
312	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  0);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  0);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)+    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
313	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  negativeVarBasicRow);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
314	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(f),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(f),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(f),  mostNegative);	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
315	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue());  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue());	  return    new    RealPointValuePair(negativeVarBasicRow,    basicRows.getValue(f));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
316	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow),  mostNegative);	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
317	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  getColumn());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  getColumn());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  getColumn());	  Integer    coefficients[]    =    f.getValue(basicRow,    column);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
318	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  coefficients.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  coefficients.getValue(coefficients));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  coefficients.getValue(coefficients));	  return    new    RealPointValuePair(f,    coefficients.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
319	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRow));	  return    new    RealPointValuePair(f,    coefficients.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
320	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows),  negativeVarBasicRow);	  return    new    RealPointValuePair(baselessRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
321	[BUG]  [BUGGY]  double  coefficients  =  f.getValue(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  double  coefficients  =  f.getValue(basicRow,  coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	double  coefficients  =  f.getValue(basicRow,  coefficients);	  double    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
322	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  negativeVarBasicRows);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
323	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  -  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  -  1));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()  -  1));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnOffset()));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
324	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumns,  negativeVarBasicRow);	  Integer    coefficients[]    =    f.getValue(basicColumns);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
325	[BUG]  [BUGGY]  Integer  coefficients[]  =  baseRows.getValues();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  baseRows.getValues();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  baseRows.getValues();	  Integer    coefficients[]    =    basicRows.getValues();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
326	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRows),  coefficients);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
327	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  negativeVarBasicRows);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
328	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns()));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumns()));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumns()));	  Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
329	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow),  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow),  negativeVarColumn);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow),  negativeVarColumn);	  return    new    RealPointValuePair(positiveVarBasicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
330	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  negativeVarBasicRow);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
331	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow),  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
332	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  negativeVarBasicRow);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRows),  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
333	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
334	[BUG]  [BUGGY]  Integer  coefficients[]  =  baseRows.getValue(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  baseRows.getValue(negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  baseRows.getValue(negativeVarBasicRow);	  Integer    coefficients[]    =    basicRows.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
335	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(negativeVarBasicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(negativeVarBasicRow,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(negativeVarBasicRow,  basicRows);	  coefficients[i]    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
336	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows,  negativeVarBasicRow);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
337	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
338	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicFunction,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicFunction,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicFunction,  basicRows);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicFunction);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
339	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRow,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRow,  basicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
340	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  mostNegative);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  mostNegative);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
341	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicRows,  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicRows,  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    negativeVarBasicRows);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
342	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRows,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRows,  negativeVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRows,  negativeVarBasicRow);	  int    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
343	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRows,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRows,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRows,  negativeVarBasicRows);	  int    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
344	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRows,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =  f.getValue(basicRows,  negativeVarBasicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRows,  negativeVarBasicColumn);	  int    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
345	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicColumns);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  basicColumns);	  Integer    coefficients[]    =    f.getValue(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
346	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows),  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows),  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows),  negativeVarBasicRows);	  return    new    RealPointValuePair(baselessRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
347	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows)+  1);	  return    new    RealPointValuePair(baselessRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
348	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn,  negativeVarBasicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicColumn,  negativeVarBasicColumn);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
349	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  BasicVariants.DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  BasicVariants.DEFAULT_ULPS);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  BasicVariants.DEFAULT_ULPS);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
350	[BUG]  [BUGGY]  Integer  coefficients[]  =  baseRows.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  baseRows.getValue(basicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  baseRows.getValue(basicRow);	  Integer    coefficients[]    =    basicRows.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
351	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  BasicVariants.NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  BasicVariants.NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  BasicVariants.NEGATIVE_VAR_COLUMN_LABEL);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
352	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  basicVarBasicRow);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
353	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  BasicVariants.DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  BasicVariants.DEFAULT_ULPS);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  BasicVariants.DEFAULT_ULPS);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
354	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  normalized);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  normalized);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  normalized);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    negativeVarBasicRows);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
355	[BUG]  [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  mostNegative);	  return    new    RealPointValuePair(normalized,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
356	[BUG]  [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(normalized,  f.getValue(basicRows),  negativeVarBasicRows);	  return    new    RealPointValuePair(normalized,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
357	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn,  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn,  negativeVarColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicColumn,  negativeVarColumn);	  Integer    coefficients    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
358	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  baseColumnLabels);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  baseColumnLabels);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  baseColumnLabels);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    columnLabels);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
359	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows)+  1);	  return    new    RealPointValuePair(basicColumns,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
360	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRow));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  basicRows.getValue(basicRow));	  return    new    RealPointValuePair(basicRow,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
361	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns,  negativeVarBasicRows);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicColumns);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
362	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicColumns);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicColumns);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
363	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.size());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.size());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.size());	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
364	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearobjectiveFunction(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearobjectiveFunction(basicRow,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearobjectiveFunction(basicRow,  basicRows);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
365	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients.length),  mostNegative);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients.length),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients.length),  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients.length));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
366	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows),    negativeVarColumn);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
367	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow)+  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow)+  1);	  return    new    RealPointValuePair(basicColumns,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
368	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  normalized);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  normalized);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRows,  normalized);	  Integer    coefficients    =    f.getValue(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
369	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coales));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(coales));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(coales));	  return    new    RealPointValuePair(colons,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
370	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients),  mostNegative);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients),  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients),  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns,    coefficients));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
371	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRows,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRows,  negativeVarBasicRows);	  Integer    coefficients    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
372	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicVarBasicFunction);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicVarBasicFunction);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicVarBasicFunction);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicFunction);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
373	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow,  i);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow,  i);	  Integer    coefficients    =    basicRows.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
374	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getCoefficients(basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getCoefficients(basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getCoefficients(basicRows);	  Integer    coefficients[]    =    f.getCoefficients();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
375	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  coefficients.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(coefficients,  coefficients.getValue(basicRows));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(coefficients,  coefficients.getValue(basicRows));	  return    new    RealPointValuePair(f,    coefficients.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
376	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0,  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)/    2.0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
377	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow)+  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow)+  1);	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
378	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
379	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients,  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
380	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  basicVars);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  basicVars);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  basicVars);	  coefficients[i]    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
381	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows,  basicRows.length  -  1);	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
382	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.size());	  LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
383	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients,  mostNegative);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
384	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
385	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1,  basicRows);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1,  basicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1,  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows)+    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
386	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicColumns));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  coefficients.getValue(basicColumns));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
387	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  negativeVarColumn));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  negativeVarColumn));  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns,  negativeVarColumn));	  return    new    RealPointValuePair(basicRows,    basicRows.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
388	[BUG]  [BUGGY]  int  coefficients  =(basicRows  ==  null?  0  :  basicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  int  coefficients  =(basicRows  ==  null?  0  :  basicRows.getValue(coefficients));  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =(basicRows  ==  null?  0  :  basicRows.getValue(coefficients));	  int    coefficients    =    basicRows.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
389	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  negativeVarBasicColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumn,  negativeVarBasicColumn);	  Integer    coefficients[]    =    f.getValue(basicRow,    negativeVarBasicColumn);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
390	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow  +  1,  basicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  coefficients[i]  =  f.getValue(basicRow  +  1,  basicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow  +  1,  basicRows);	  coefficients[i]    =    f.getValue(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
391	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  baseColumns);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  baseColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  baseColumns);	  Integer    coefficients    =    f.getValue(basicRow,    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
392	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows)+  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows)+  1);	  return    new    RealPointValuePair(baseRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
393	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicVarBasicRow);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicVarBasicRow);	  Integer    coefficients    =    f.getValue(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
394	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length  -  1);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows.length  -  1);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
395	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.size());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.size());  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.size());	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow,    basicRows.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
396	[BUG]  [BUGGY]  Integer  coefficients  =  this.basicRows.getValue(coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients  =  this.basicRows.getValue(coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  this.basicRows.getValue(coefficients);	  Integer    coefficients    =    basicRows.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
397	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicColumns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicColumns);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicColumns);	  LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRows);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
398	[BUG]  [BUGGY]  double  coefficients  =  basicRows.getValue(coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  double  coefficients  =  basicRows.getValue(coefficients);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	double  coefficients  =  basicRows.getValue(coefficients);	  double    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
399	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  mostNegative);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients,  mostNegative);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    coefficients);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
400	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.toArray(new  Integer[basicRows.size()  ]);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  basicRows.toArray(new  Integer[basicRows.size()  ]);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  basicRows.toArray(new  Integer[basicRows.size()  ]);	  Integer    coefficients[]    =    basicRows.getValues();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
401	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.getColumns();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  basicRows.getColumns();  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  basicRows.getColumns();	  Integer    coefficients[]    =    basicRows.getValues();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
402	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn,  negativeVarColumn);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumn,  negativeVarColumn);	  Integer    coefficients[]    =    f.getValue(basicColumn);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
403	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow)-  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow)-  1);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRow)-  1);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRow));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
404	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows,  negativeVarBasicRows);  [BUGGY]      return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRows,  negativeVarBasicRows);	  Integer    coefficients[]    =    f.getValue(basicRow,    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
405	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  positiveVarBasicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  positiveVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  positiveVarBasicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
406	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]        coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }      [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows,  negativeVarBasicRows);  [BUGGY]      }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows,  negativeVarBasicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows),    basicRows);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
