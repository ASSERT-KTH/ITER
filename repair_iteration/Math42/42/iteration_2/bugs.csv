bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows));	  return    new    RealPointValuePair(baseRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baseRows,  basicRows.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baseRows,  basicRows.getValue(coefficients));	  return    new    RealPointValuePair(baseRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRows);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRows);	      Integer    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
4	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(coefficients);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  basicRows.getValue(coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(coefficients);	      Integer    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
5	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(f);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  basicRows.getValue(f);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(f);	      Integer    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
6	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(negativeVarBasicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(negativeVarBasicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
7	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(negativeVarBasicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(negativeVarBasicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(negativeVarBasicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(negativeVarBasicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getColumns();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getColumns();  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getColumns();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.getValues();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  basicRows.getValues();  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  basicRows.getValues();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRows);	      Integer    coefficients[]    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
13	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  coefficients);	      Integer    coefficients[]    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
14	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumns);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumns);	      Integer    coefficients[]    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
15	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
16	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicColumns));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients.length));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients.length));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients.length));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
19	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  columnLabels);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  columnLabels);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  columnLabels);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  coefficients);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  basicRows.length);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(normalized,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(normalized,  f.getValue(basicRows));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicRow);	      Integer    coefficients[]    =    f.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicColumn);	      Integer    coefficients[]    =    f.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  basicRows.getValue(negativeVarBasicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  basicRows.getValue(negativeVarBasicRow);	      Integer    coefficients[]    =    f.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
28	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(basicRows));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicRows);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)+  1);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  basicRows.getValue(negativeVarBasicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(negativeVarBasicRow);	      Integer    coefficients    =    f.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicRow);	      Integer    coefficients    =    f.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicColumn);	      Integer    coefficients    =    f.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  basicRows.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  basicRows.getValue(coefficients));	  return    new    RealPointValuePair(basicRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount());  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount());	      Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset());  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset());	      Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(baseRow,  getColumnCount());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(baseRow,  getColumnCount());  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(baseRow,  getColumnCount());	      Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  int  coefficients  =  f.getValue(basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRows);	      int    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
39	[BUG]  [BUGGY]  double  coefficients  =  f.getValue(coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  double  coefficients  =  f.getValue(coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	double  coefficients  =  f.getValue(coefficients);	      int    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
40	[BUG]  [BUGGY]  int  coefficients  =  f.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  int  coefficients  =  f.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  f.getValue(basicRow);	      int    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
41	[BUG]  [BUGGY]  int  coefficients  =  basicRows.getValue(coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  int  coefficients  =  basicRows.getValue(coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	int  coefficients  =  basicRows.getValue(coefficients);	      int    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
42	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  basicRows);	      coefficients[i]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicColumn);	      coefficients[i]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  negativeVarColumn);	      coefficients[i]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(coefficients));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicRows));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(coefficients));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(f));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(f));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  basicRows.getValue(f));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnOffset()));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumn()));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumn()));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount()));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()));  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnsOffset()));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  basicRows);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  normalized);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  normalized);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  normalized);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
55	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  column);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  column);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
56	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicRows.length);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  columnLabels);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  columnLabels);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  columnLabels);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  basicColumns);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  basicRows);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
61	[BUG]  [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  basicRows.getValue(basicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  basicRows.getValue(basicRow);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
62	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnSize()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnSize()  -  1);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnSize()  -  1);	      Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength());  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnLength());	      Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(basicRows));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeRows,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(negativeRows,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeRows,  f.getValue(basicRows));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getBasicOffset()));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getCoefficients();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getCoefficients();  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getCoefficients();	      Integer    coefficients[]    =    f.getValues();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicRow);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
69	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows)/  2.0);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
70	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRow));	  return    new    RealPointValuePair(basicRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicColumn);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  negativeVarBasicRow);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  coefficients[i]  =  f.getValue(basicRow  +  1);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow  +  1);	      coefficients[i]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	coefficients[i]  =  f.getValue(basicRow,  negativeVarBasicRow);	      coefficients[i]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRows,  f.getValue(coefficients));	  return    new    RealPointValuePair(colons,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  return  new  RealPointValuePair(colons,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(colons,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(colons,  f.getValue(basicRows));	  return    new    RealPointValuePair(colons,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
77	[BUG]  [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumns));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumns));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(negativeVarBasicRow,  f.getValue(basicColumns));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
78	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicColumn);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
79	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRow,  negativeVarBasicRow);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
80	[BUG]  [BUGGY]  return  new  RealPointValuePair(positiveVarBasicRow,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(positiveVarBasicRow,  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(positiveVarBasicRow,  f.getValue(basicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
81	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  negativeVarBasicRow);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  negativeVarBasicRow);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
82	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  negativeVarBasicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  negativeVarBasicRow));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
83	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicColumns,  f.getValue(basicRow));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
84	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicColumn);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
85	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicFunction);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicFunction);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  negativeVarBasicFunction);	      Integer    coefficients    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
86	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicColumn);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicColumn);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicFunction);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicFunction);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(basicRow,  negativeVarBasicFunction);	      Integer    coefficients[]    =    f.getValue(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
88	[BUG]  [BUGGY]  Integer  coefficients[]  =  f.getValue(normalizedVarColumn);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  f.getValue(normalizedVarColumn);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  f.getValue(normalizedVarColumn);	      Integer    coefficients[]    =    f.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients  =  f.getValue(basicRow,  coefficients);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients  =  f.getValue(basicRow,  coefficients);	      Integer    coefficients    =    f.getValue(coefficients);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
90	[BUG]  [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baselessRows,  f.getValue(basicRows));	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
91	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
92	[BUG]  [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  negativeVarColumn);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(coefficients,  f.getValue(basicRows),  negativeVarColumn);	  return    new    RealPointValuePair(coefficients,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
93	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length));  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getRhsOffset()  -  basicRows.length));	      Integer    coefficients[]    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
94	[BUG]  [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(baseRows,  f.getValue(basicRows),  coefficients);	  return    new    RealPointValuePair(baseRows,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
95	[BUG]  [BUGGY]  Integer  coefficients[]  =  graph.getValue(negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  graph.getValue(negativeVarBasicRow);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  graph.getValue(negativeVarBasicRow);	      Integer    coefficients[]    =    f.getValue(negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
96	[BUG]  [BUGGY]  return  new  RealPointValuePair(f,  coefficients.getValue(coefficients));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(f,  coefficients.getValue(coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(f,  coefficients.getValue(coefficients));	  return    new    RealPointValuePair(colons,    f.getValue(coefficients));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
97	[BUG]  [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount())-  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount())-  1;  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	Integer  coefficients[]  =  getEntry(basicRow,  getColumnCount())-  1;	      Integer    coefficients[]    =    getEntry(basicRow,    getColumnCount()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
98	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns,  coefficients));	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
99	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  basicRows);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  basicRows);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicColumns),  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicColumns));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
100	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRow,  f.getValue(basicRow));  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRow,  f.getValue(basicRow));	  return    new    RealPointValuePair(negativeVarBasicRow,    f.getValue(negativeVarBasicRow));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
101	[BUG]  [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows);  [BUGGY]    }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	return  new  RealPointValuePair(basicRows,  f.getValue(basicRows),  basicRows);	  return    new    RealPointValuePair(basicRows,    f.getValue(basicRows));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
102	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  getLinearObjectiveFunction(basicRows);	      LinearObjectiveFunction    f    =    getLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
103	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
104	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRows,  basicRows);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
105	[BUG]  [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]      coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {  basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  }    [BUGGY]  LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns);  [BUGGY]    return  new  RealPointValuePair(coefficients,  f.getValue(coefficients));  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	424	424	1	replace	LinearObjectiveFunction  f  =  createLinearObjectiveFunction(basicRow,  baseColumns);	      LinearObjectiveFunction    f    =    createLinearObjectiveFunction(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
