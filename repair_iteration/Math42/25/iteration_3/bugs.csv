bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum(constraint.getValue()));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum(constraint.getValue()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum(constraint.getValue()));	  matrix.setEntry(0,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  not  a  statement	31	None	replace
2	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(0,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  not  a  statement	31	None	replace
3	[BUG]  [BUGGY]  matrix.setEntry(1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(1,  getInvertedCoefficientSum(constraint.getCoefficients()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(1,  getInvertedCoefficientSum(constraint.getCoefficients()));	  matrix.setEntry(0,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  not  a  statement	31	None	replace
4	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum(constraint.getColumns()));  [CE]  not  a  statement  [FE]                          AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum(constraint.getColumns()));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum(constraint.getColumns()));	  matrix.setEntry(0,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  not  a  statement	31	None	replace
5	[BUG]  [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(1).subtract(matrix.getRowVector(row)));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(1).subtract(matrix.getRowVector(row)));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setRowVector(0,  matrix.getRowVector(1).subtract(matrix.getRowVector(row)));	  matrix.setRowVector(0,    matrix.getRowVector(0).subtract(matrix.getRowVector(row)));    	non-compiled	[CE]  not  a  statement	20	None	replace
6	[BUG]  [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(constraint.getRowVector(row)));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(constraint.getRowVector(row)));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setRowVector(0,  matrix.getRowVector(0).subtract(constraint.getRowVector(row)));	  matrix.setRowVector(0,    matrix.getRowVector(0).subtract(matrix.getRowVector(row)));    	non-compiled	[CE]  not  a  statement	20	None	replace
7	[BUG]  [BUGGY]  matrix.setRowVector(0,  matrix.getColumnVector(0).subtract(matrix.getRowVector(row)));  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setRowVector(0,  matrix.getColumnVector(0).subtract(matrix.getRowVector(row)));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setRowVector(0,  matrix.getColumnVector(0).subtract(matrix.getRowVector(row)));	  matrix.setRowVector(0,    matrix.getRowVector(0).subtract(matrix.getRowVector(row)));    	non-compiled	[CE]  not  a  statement	20	None	replace
8	[BUG]  [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.LEFT))  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.LEFT))  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.LEFT))  {	  }    else    if((    constraint.getRelationship()    ==    Relationship.EQ)||(constraint.getRelationship()    ==    Relationship.LEFT))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
9	[BUG]  [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.LEFT)||(constraint.getRelationship()  ==  Relationship.EQ))  {  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.LEFT)||(constraint.getRelationship()  ==  Relationship.EQ))  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if((  constraint.getRelationship()  ==  Relationship.LEFT)||(constraint.getRelationship()  ==  Relationship.EQ))  {	  }    else    if((    constraint.getRelationship()    ==    Relationship.EQ)||(constraint.getRelationship()    ==    Relationship.LEFT))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
10	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  1);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
11	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  1);  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	7	None	replace
12	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar++,  0);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar++,  0);	  matrix.setEntry(row,    getSlackVariableOffset()    /    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	9	None	replace
13	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  width++,  0);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  width++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  /  width++,  0);	  matrix.setEntry(row,    getSlackVariableOffset()    /    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	9	None	replace
14	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraint.getRelationship()  ==  Relationship.GE)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraint.getRelationship()  ==  Relationship.GE)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraint.getRelationship()  ==  Relationship.GE)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.GEQ)    {    	non-compiled	[CE]  not  a  statement	21	None	replace
15	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  0);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  0);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	27	None	replace
16	[BUG]  [BUGGY]  matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  0);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  0);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	27	None	replace
17	[BUG]  [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.GE)||(constraint.getRelationship()  ==  Relationship.LEQ))  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.GE)||(constraint.getRelationship()  ==  Relationship.LEQ))  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.GE)||(constraint.getRelationship()  ==  Relationship.LEQ))  {	  }    else    if((    constraint.getRelationship()    ==    Relationship.EQ)&&(constraint.getRelationship()    ==    Relationship.GE))    {    	non-compiled	[CE]  not  a  statement	11	None	replace
18	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  0);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  0);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	10	None	replace
19	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  0);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  0);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	10	None	replace
20	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.NE)  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.NE)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.NE)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.NE)    {    	non-compiled	[CE]  not  a  statement	15	None	replace
21	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.NE  ||  constraint.getRelationship()  ==  Relationship.EQ)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.NE  ||  constraint.getRelationship()  ==  Relationship.EQ)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.NE  ||  constraint.getRelationship()  ==  Relationship.EQ)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.NE)    {    	non-compiled	[CE]  not  a  statement	15	None	replace
22	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraints.getRelationship()  ==  Relationship.NE)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraints.getRelationship()  ==  Relationship.NE)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraints.getRelationship()  ==  Relationship.NE)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.NE)    {    	non-compiled	[CE]  not  a  statement	15	None	replace
23	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  2);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  2);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  width++,  2);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    2);    	non-compiled	[CE]  not  a  statement	29	None	replace
24	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  3);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  3);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  3);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    2);    	non-compiled	[CE]  not  a  statement	29	None	replace
25	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar++,  1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar++,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    /    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
26	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  width++,  1);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  width++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  /  width++,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    /    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
27	[BUG]  [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  width++,  0);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  width++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(1,  getSlackVariableOffset()  +  width++,  0);	  matrix.setEntry(1,    getSlackVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	2	None	replace
28	[BUG]  [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  1);  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(1,    getSlackVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	2	None	replace
29	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  -1);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  -1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    -1);    	non-compiled	[CE]  not  a  statement	23	None	replace
30	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  -1);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  -1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    -1);    	non-compiled	[CE]  not  a  statement	23	None	replace
31	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.NEW)  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.NEW)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.NEW)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.NEW)    {    	non-compiled	[CE]  not  a  statement	22	None	replace
32	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.NEW  ||  constraint.getRelationship()  ==  Relationship.EQ)  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.NEW  ||  constraint.getRelationship()  ==  Relationship.EQ)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.NEW  ||  constraint.getRelationship()  ==  Relationship.EQ)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.NEW)    {    	non-compiled	[CE]  not  a  statement	22	None	replace
33	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraints.getRelationship()  ==  Relationship.NEW)  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraints.getRelationship()  ==  Relationship.NEW)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraints.getRelationship()  ==  Relationship.NEW)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.NEW)    {    	non-compiled	[CE]  not  a  statement	22	None	replace
34	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  0);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  0);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	28	None	replace
35	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  0);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  0);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	28	None	replace
36	[BUG]  [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.LEQ)||(constraint.getRelationship()  ==  Relationship.GEQ))  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.LEQ)||(constraint.getRelationship()  ==  Relationship.GEQ))  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.LEQ)||(constraint.getRelationship()  ==  Relationship.GEQ))  {	  }    else    if((    constraint.getRelationship()    ==    Relationship.EQ)&&(constraint.getRelationship()    ==    Relationship.LEQ))    {    	non-compiled	[CE]  not  a  statement	5	None	replace
37	[BUG]  [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.GE)&&(constraint.getRelationship()  ==  Relationship.EQ)||(constraint.getRelationship()  ==  Relationship.LEQ))  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.GE)&&(constraint.getRelationship()  ==  Relationship.EQ)||(constraint.getRelationship()  ==  Relationship.LEQ))  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if((  constraint.getRelationship()  ==  Relationship.GE)&&(constraint.getRelationship()  ==  Relationship.EQ)||(constraint.getRelationship()  ==  Relationship.LEQ))  {	  }    else    if((    constraint.getRelationship()    ==    Relationship.GE)&&(constraint.getRelationship()    ==    Relationship.EQ))    {    	non-compiled	[CE]  not  a  statement	12	None	replace
38	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.GE)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.GE)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.GE)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    &&    constraint.getRelationship()    ==    Relationship.GEQ)    {    	non-compiled	[CE]  not  a  statement	32	None	replace
39	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.LEQ)  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.LEQ)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    &&    constraint.getRelationship()    ==    Relationship.GEQ)    {    	non-compiled	[CE]  not  a  statement	32	None	replace
40	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  +  width++,  1);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
41	[BUG]  [BUGGY]  matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  1);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getUpperVariableOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
42	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  /  slackVar++,  1);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  /  slackVar++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  /  slackVar++,  1);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
43	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  -1);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getSlackVarOffset()  +  slackVar++,  -1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    -1);    	non-compiled	[CE]  not  a  statement	26	None	replace
44	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  -1);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum()  +  width++,  -1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    -1);    	non-compiled	[CE]  not  a  statement	26	None	replace
45	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVar()  +  slackVar++,  -1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getSlackVar()  +  slackVar++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getSlackVar()  +  slackVar++,  -1);	  matrix.setEntry(0,    getInvertedCoefficientSum()    +    slackVar++,    -1);    	non-compiled	[CE]  not  a  statement	26	None	replace
46	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ  ||  constraint.getRelationship()  ==  Relationship.EQ)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.LEQ  ||  constraint.getRelationship()  ==  Relationship.EQ)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.LEQ  ||  constraint.getRelationship()  ==  Relationship.EQ)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.LEQ)    {    	non-compiled	[CE]  not  a  statement	14	None	replace
47	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraint.getRelationship()  ==  Relationship.LEFT)  {  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraint.getRelationship()  ==  Relationship.LEFT)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()  ==  Relationship.EQ  ||  constraint.getRelationship()  ==  Relationship.LEFT)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.LEQ)    {    	non-compiled	[CE]  not  a  statement	14	None	replace
48	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  width++,  2);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  width++,  2);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getSlackVariableOffset()  +  width++,  2);	  matrix.setEntry(0,    getSlackVariableOffset()    +    slackVar++,    2);    	non-compiled	[CE]  not  a  statement	17	None	replace
49	[BUG]  [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  3);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  3);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getSlackVariableOffset()  +  slackVar++,  3);	  matrix.setEntry(0,    getSlackVariableOffset()    +    slackVar++,    2);    	non-compiled	[CE]  not  a  statement	17	None	replace
50	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  1);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  +  width++,  1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
51	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVarOffset()  +  slackVar++,  1);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
52	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar++,  -1);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  *  slackVar++,  -1);	  matrix.setEntry(row,    getSlackVariableOffset()    /    slackVar++,    -1);    	non-compiled	[CE]  not  a  statement	19	None	replace
53	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  width++,  -1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  /  width++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  /  width++,  -1);	  matrix.setEntry(row,    getSlackVariableOffset()    /    slackVar++,    -1);    	non-compiled	[CE]  not  a  statement	19	None	replace
54	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  /  slackVar++,  0);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  /  slackVar++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  /  slackVar++,  0);	  matrix.setEntry(row,    getSlackVariableOffset()    /    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	9	None	replace
55	[BUG]  [BUGGY]  matrix.setEntry(row,  getNegativeCoefficientSum()  +  slackVar++,  0);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getNegativeCoefficientSum()  +  slackVar++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getNegativeCoefficientSum()  +  slackVar++,  0);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	10	None	replace
56	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  -1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  -1);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	25	None	replace
57	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  slackVar++,  2);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  slackVar++,  2);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  +  slackVar++,  2);	  matrix.setEntry(row,    getSlackVariableOffset()    +    slackVar++,    2);    	non-compiled	[CE]  not  a  statement	29	None	replace
58	[BUG]  [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  -1);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  -1);	  matrix.setEntry(0,    getSlackVariableOffset()    +    width++,    -1);    	non-compiled	[CE]  not  a  statement	16	None	replace
59	[BUG]  [BUGGY]  }  else  if(constraint.getRelationship()!=  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.LEQ)  {  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if(constraint.getRelationship()!=  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.LEQ)  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if(constraint.getRelationship()!=  Relationship.EQ  &&  constraint.getRelationship()  ==  Relationship.LEQ)  {	  }    else    if(constraint.getRelationship()    ==    Relationship.EQ    ||    constraint.getRelationship()    ==    Relationship.LEQ)    {    	non-compiled	[CE]  not  a  statement	14	None	replace
60	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  slackVar++,  2);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum()  +  slackVar++,  2);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum()  +  slackVar++,  2);	  matrix.setEntry(0,    getSlackVariableOffset()    +    slackVar++,    2);    	non-compiled	[CE]  not  a  statement	17	None	replace
61	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  /  slackVar++,  1);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  /  slackVar++,  1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  /  slackVar++,  1);	  matrix.setEntry(row,    getSlackVariableOffset()    /    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
62	[BUG]  [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)||(constraint.getRelationship()  ==  Relationship.RIGHT))  {  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)||(constraint.getRelationship()  ==  Relationship.RIGHT))  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if((  constraint.getRelationship()  ==  Relationship.EQ)||(constraint.getRelationship()  ==  Relationship.RIGHT))  {	  }    else    if((    constraint.getRelationship()    ==    Relationship.EQ)||(constraint.getRelationship()    ==    Relationship.LEFT))    {    	non-compiled	[CE]  not  a  statement	13	None	replace
63	[BUG]  [BUGGY]  matrix.setEntry(1,  getInvertedCoefficientSum()  +  slackVar++,  0);  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(1,  getInvertedCoefficientSum()  +  slackVar++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(1,  getInvertedCoefficientSum()  +  slackVar++,  0);	  matrix.setEntry(1,    getSlackVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	2	None	replace
64	[BUG]  [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.EQ))  {  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  }  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.EQ))  {  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	}  else  if((  constraint.getRelationship()  ==  Relationship.EQ)&&(constraint.getRelationship()  ==  Relationship.EQ))  {	  }    else    if((    constraint.getRelationship()    ==    Relationship.EQ)||(constraint.getRelationship()    ==    Relationship.EQ))    {    	non-compiled	[CE]  not  a  statement	30	None	replace
65	[BUG]  [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getColumnVector(row)));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getColumnVector(row)));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getColumnVector(row)));	  matrix.setRowVector(0,    matrix.getRowVector(0).subtract(matrix.getRowVector(row)));    	non-compiled	[CE]  not  a  statement	20	None	replace
66	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  /  slackVar++,  -1);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  /  slackVar++,  -1);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  /  slackVar++,  -1);	  matrix.setEntry(row,    getSlackVariableOffset()    /    slackVar++,    -1);    	non-compiled	[CE]  not  a  statement	19	None	replace
67	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  2);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  2);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  2);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	27	None	replace
68	[BUG]  [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  3);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  3);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getLowerVariableOffset()  +  slackVar++,  3);	  matrix.setEntry(row,    getLowerVariableOffset()    +    slackVar++,    0);    	non-compiled	[CE]  not  a  statement	27	None	replace
69	[BUG]  [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  2);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  2);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(1,  getSlackVariableOffset()  +  slackVar++,  2);	  matrix.setEntry(0,    getSlackVariableOffset()    +    slackVar++,    2);    	non-compiled	[CE]  not  a  statement	17	None	replace
70	[BUG]  [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  0);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  0);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getSlackVariableOffset()  +  height++,  0);	  matrix.setEntry(row,    getSlackVariableOffset()    +    width++,    0);    	non-compiled	[CE]  not  a  statement	8	None	replace
71	[BUG]  [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(margin.getRowVector(row)));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(margin.getRowVector(row)));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setRowVector(0,  matrix.getRowVector(0).subtract(margin.getRowVector(row)));	  matrix.setRowVector(0,    matrix.getRowVector(0).subtract(matrix.getRowVector(row)));    	non-compiled	[CE]  not  a  statement	20	None	replace
72	[BUG]  [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum(constraint.getCoefficients()  -  1));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(0,  getInvertedCoefficientSum(constraint.getCoefficients()  -  1));  [BUGGY]      matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(0,  getInvertedCoefficientSum(constraint.getCoefficients()  -  1));	  matrix.setEntry(0,    getInvertedCoefficientSum(constraint.getCoefficients()));    	non-compiled	[CE]  not  a  statement	31	None	replace
73	[BUG]  [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  slackVar++,  3);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      matrix.setEntry(row,  getSlackVariableOffset()  -  1,  getInvertedCoefficientSum(constraint.getCoefficients()));  }  matrix.setEntry(row,  width  -  1,  constraint.getValue());  if  (constraint.getRelationship()  ==  Relationship.LEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  1);//  slack      [BUGGY]  matrix.setEntry(row,  getInvertedCoefficientSum()  +  slackVar++,  3);  [BUGGY]      }  else  if  (constraint.getRelationship()  ==  Relationship.GEQ)  {  matrix.setEntry(row,  getSlackVariableOffset()  +  slackVar++,  -1);  //  excess  }  if  ((constraint.getRelationship()  ==  Relationship.EQ)  ||  (constraint.getRelationship()  ==  Relationship.GEQ))  {  matrix.setEntry(0,  getArtificialVariableOffset()  +  artificialVar,  1);  matrix.setEntry(row,  getArtificialVariableOffset()  +  artificialVar++,  1);  matrix.setRowVector(0,  matrix.getRowVector(0).subtract(matrix.getRowVector(row)));  }  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	225	225	1	replace	matrix.setEntry(row,  getInvertedCoefficientSum()  +  slackVar++,  3);	  matrix.setEntry(row,    getInvertedCoefficientSum()    +    slackVar++,    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
