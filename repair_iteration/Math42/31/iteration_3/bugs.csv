bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  negativeVarRow  =  positiveVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarRow  =  positiveVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarRow  =  positiveVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;	  Integer    negativeVarRow    =    negativeVarColumn!=    0?    getBasicRow(negativeVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  positiveVarColumn  ==  null?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarBasicRow  =  positiveVarColumn  ==  null?  getBasicRow(negativeVarColumn):  null;  [BUGGY]      double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarBasicRow  =  positiveVarColumn  ==  null?  getBasicRow(negativeVarColumn):  null;	  Integer    negativeVarBasicRow    =    negativeVarColumn    ==    null?    getBasicRow(positiveVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
3	[BUG]  [BUGGY]  int  negativeVarColumn  =  columnsToDrop.indexOf(NEGATIVE_VAR_COLUMN_LABEL  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  columnsToDrop.indexOf(NEGATIVE_VAR_COLUMN_LABEL  +  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  columnsToDrop.indexOf(NEGATIVE_VAR_COLUMN_LABEL  +  1);	  int    negativeVarColumn    =    columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
4	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  NEGATIVE_VAR_COLUMN_LABEL.indexOf(negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  NEGATIVE_VAR_COLUMN_LABEL.indexOf(negativeVarColumn);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  NEGATIVE_VAR_COLUMN_LABEL.indexOf(negativeVarColumn);	  Integer    negativeVarColumn    =    columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnsToDrop.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnsToDrop.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnsToDrop.indexOf(NEGATIVE_VAR_COLUMN_LABEL);	  Integer    negativeVarColumn    =    columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "x   "  +  colIndex  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "x   "  +  colIndex  +  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnLabels.indexOf( "x   "  +  colIndex  +  1);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "x       "    +    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
7	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columns.indexOf( "x   "  +  i  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columns.indexOf( "x   "  +  i  +  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columns.indexOf( "x   "  +  i  +  1);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "x       "    +    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  colIndex.indexOf( "x "  +  columnLabels);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  colIndex.indexOf( "x "  +  columnLabels);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  colIndex.indexOf( "x "  +  columnLabels);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "x       "    +    colIndex);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  Integer  colIndex  =  columnLabels.indexOf( "x "  +  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  colIndex  =  columnLabels.indexOf( "x "  +  i);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  colIndex  =  columnLabels.indexOf( "x "  +  i);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "x       "    +    colIndex);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  basicRow  ==  null?  getBasicRow(positiveVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarBasicRow  =  basicRow  ==  null?  getBasicRow(positiveVarColumn):  null;  [BUGGY]      double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarBasicRow  =  basicRow  ==  null?  getBasicRow(positiveVarColumn):  null;	  Integer    negativeVarBasicRow    =    basicRow    ==    null?    getBasicRow(negativeVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
11	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  basicRow!=  null?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarBasicRow  =  basicRow!=  null?  getBasicRow(negativeVarColumn):  null;  [BUGGY]      double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarBasicRow  =  basicRow!=  null?  getBasicRow(negativeVarColumn):  null;	  Integer    negativeVarBasicRow    =    basicRow    ==    null?    getBasicRow(negativeVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
12	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0.0 ");  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0.0 ");  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnLabels.indexOf( "0.0 ");	  Integer    negativeVarColumn    =    columnLabels.indexOf(   ".0   ");    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
13	[BUG]  [BUGGY]  Integer  positiveVarRow  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  positiveVarRow  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  positiveVarRow  =  negativeVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;	  Integer    negativeVarRow    =    negativeVarColumn    <    0?    getBasicRow(negativeVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
14	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  positiveVarColumn  >  0?  getBasicColumn(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  positiveVarColumn  >  0?  getBasicColumn(negativeVarColumn):  null;  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  positiveVarColumn  >  0?  getBasicColumn(negativeVarColumn):  null;	  Integer    negativeVarColumn    =    negativeVarColumn    ==    0?    getBasicColumn(positiveVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
15	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ",  DEFAULT_ULPS  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ",  DEFAULT_ULPS  +  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ",  DEFAULT_ULPS  +  1);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "0   ",    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ",  DEFAULT_ULPS  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ",  DEFAULT_ULPS  -  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ",  DEFAULT_ULPS  -  1);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "0   ",    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  positiveVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  positiveVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  positiveVarColumn  >  0?  getBasicRow(negativeVarColumn):  null;	  Integer    negativeVarColumn    =    negativeVarColumn    >=    0?    getBasicRow(negativeVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  negativeVarColumn  <  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  negativeVarColumn  <  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  negativeVarColumn  <  0?  getBasicRow(negativeVarColumn):  null;	  Integer    negativeVarColumn    =    negativeVarColumn    >=    0?    getBasicRow(negativeVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  int  negativeVarColumn  =  this.columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  this.columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  this.columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS);	  int    negativeVarColumn    =    columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
20	[BUG]  [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS  +  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS  +  1);	  int    negativeVarColumn    =    columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ",  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ",  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ",  1);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "0   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
22	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columns.indexOf( "0 ",  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columns.indexOf( "0 ",  0);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columns.indexOf( "0 ",  0);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "0   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
23	[BUG]  [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( "infinity ",  DEFAULT_ULPS  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( "infinity ",  DEFAULT_ULPS  +  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  columnLabels.indexOf( "infinity ",  DEFAULT_ULPS  +  1);	  int    negativeVarColumn    =    columnLabels.indexOf(   "infinity   ",    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
24	[BUG]  [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( ".infinity "  +  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( ".infinity "  +  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  columnLabels.indexOf( ".infinity "  +  NEGATIVE_VAR_COLUMN_LABEL);	  int    negativeVarColumn    =    columnLabels.indexOf(   "infinity   "    +    NEGATIVE_VAR_COLUMN_LABEL);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  positiveVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  positiveVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  positiveVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;	  Integer    negativeVarColumn    =    negativeVarColumn    ==    0?    getBasicRow(positiveVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
26	[BUG]  [BUGGY]  Integer  negativeVarRow  =  positiveVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarRow  =  positiveVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarRow  =  positiveVarColumn  >  0?  getBasicRow(positiveVarColumn):  null;	  Integer    negativeVarRow    =    negativeVarColumn    ==    0?    getBasicRow(positiveVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
27	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "x   "  +  i  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "x   "  +  i  +  2);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnLabels.indexOf( "x   "  +  i  +  2);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "x       "    +    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
28	[BUG]  [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS  -  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS  -  1);	  int    negativeVarColumn    =    columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf(negativeVarColumn);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf(negativeVarColumn);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnLabels.indexOf(negativeVarColumn);	  Integer    negativeVarColumn    =    columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columns.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columns.indexOf(NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columns.indexOf(NEGATIVE_VAR_COLUMN_LABEL);	  Integer    negativeVarColumn    =    columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ", "0 ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ", "0 ");  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnLabels.indexOf( "0 ", "0 ");	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "0   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
32	[BUG]  [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( "infinity ",  DEFAULT_ULPS  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( "infinity ",  DEFAULT_ULPS  -  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  columnLabels.indexOf( "infinity ",  DEFAULT_ULPS  -  1);	  int    negativeVarColumn    =    columnLabels.indexOf(   "infinity   ",    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
33	[BUG]  [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( "infinity "  +  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( "infinity "  +  DEFAULT_ULPS);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  columnLabels.indexOf( "infinity "  +  DEFAULT_ULPS);	  int    negativeVarColumn    =    columnLabels.indexOf(   "infinity   "    +    NEGATIVE_VAR_COLUMN_LABEL);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( "infinity "  +  NEGATIVE_VAR_COLUMN_LABEL)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  columnLabels.indexOf( "infinity "  +  NEGATIVE_VAR_COLUMN_LABEL)+  1;  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  columnLabels.indexOf( "infinity "  +  NEGATIVE_VAR_COLUMN_LABEL)+  1;	  int    negativeVarColumn    =    columnLabels.indexOf(   "infinity   "    +    NEGATIVE_VAR_COLUMN_LABEL);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  Integer  negativeVarBasicRow  =  positiveVarColumn  ==  0?  getBasicRow(negativeVarColumn):  null;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarBasicRow  =  positiveVarColumn  ==  0?  getBasicRow(negativeVarColumn):  null;  [BUGGY]      double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarBasicRow  =  positiveVarColumn  ==  0?  getBasicRow(negativeVarColumn):  null;	  Integer    negativeVarBasicRow    =    negativeVarColumn    ==    0?    getBasicRow(positiveVarColumn):    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columns.indexOf( "0 ",  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columns.indexOf( "0 ",  DEFAULT_ULPS);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columns.indexOf( "0 ",  DEFAULT_ULPS);	  Integer    negativeVarColumn    =    columns.indexOf(   "0   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  int  negativeVarColumn  =  columns.indexOf(NEGATIVE_VAR_COLUMN_LABEL  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  int  negativeVarColumn  =  columns.indexOf(NEGATIVE_VAR_COLUMN_LABEL  +  1);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	int  negativeVarColumn  =  columns.indexOf(NEGATIVE_VAR_COLUMN_LABEL  +  1);	  int    negativeVarColumn    =    columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
38	[BUG]  [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  RealPointValuePair  getSolution()  {  int  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);      [BUGGY]  Integer  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS);  [BUGGY]      Integer  negativeVarBasicRow  =  negativeVarColumn  >  0  ?  getBasicRow(negativeVarColumn)  :  null;  double  mostNegative  =  negativeVarBasicRow  ==  null  ?  0  :  getEntry(negativeVarBasicRow,  getRhsOffset());  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf(     "x     "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	398	398	1	replace	Integer  negativeVarColumn  =  columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL,  DEFAULT_ULPS);	  Integer    negativeVarColumn    =    columnLabels.indexOf(   "0   ",    DEFAULT_ULPS);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
