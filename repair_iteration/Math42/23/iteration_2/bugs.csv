bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  columnLabels.add( "Rhs "  +  i);  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(   "x   "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(   "s   "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {    [BUGGY]  columnLabels.add( "Rhs "  +  i);  [BUGGY]    }  columnLabels.add(   "RHS   ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	168	168	1	replace	columnLabels.add( "Rhs "  +  i);	  columnLabels.add(   "rhs   "    +    i);    	non-compiled	[CE]  ']'  expected	7	None	replace
2	[BUG]  [BUGGY]  columnLabels.add( "RHS   "  +  i,  DEFAULT_ULPS);  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(   "x   "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(   "s   "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {    [BUGGY]  columnLabels.add( "RHS   "  +  i,  DEFAULT_ULPS);  [BUGGY]    }  columnLabels.add(   "RHS   ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	168	168	1	replace	columnLabels.add( "RHS   "  +  i,  DEFAULT_ULPS);	  columnLabels.add(   "RHS   "    +    i);    	non-compiled	[CE]  ']'  expected	6	None	replace
3	[BUG]  [BUGGY]  columnLabels.add( "RHS   "  +  i,  NEGATIVE_VAR_COLUMN_LABEL);  [CE]  ']'  expected  [FE]          AssertionError    [CONTEXT]    for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(   "x   "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(   "s   "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {    [BUGGY]  columnLabels.add( "RHS   "  +  i,  NEGATIVE_VAR_COLUMN_LABEL);  [BUGGY]    }  columnLabels.add(   "RHS   ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	168	168	1	replace	columnLabels.add( "RHS   "  +  i,  NEGATIVE_VAR_COLUMN_LABEL);	  columnLabels.add(   "RHS   "    +    i);    	non-compiled	[CE]  ']'  expected	6	None	replace
4	[BUG]  [BUGGY]  columnLabels.add( "slack "  +  i);  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(   "x   "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(   "s   "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {    [BUGGY]  columnLabels.add( "slack "  +  i);  [BUGGY]    columnLabels.add(   "a   "  +  i);  }  columnLabels.add(   "RHS   ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	168	168	1	replace	columnLabels.add( "slack "  +  i);	      columnLabels.add(   "s   "    +    i);    	non-compiled	[CE]  ']'  expected	3	None	replace
5	[BUG]  [BUGGY]  columnLabels.add( "src "  +  i);  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(   "x   "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(   "s   "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {    [BUGGY]  columnLabels.add( "src "  +  i);  [BUGGY]    columnLabels.add(   "a   "  +  i);  }  columnLabels.add(   "RHS   ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	168	168	1	replace	columnLabels.add( "src "  +  i);	      columnLabels.add(   "s   "    +    i);    	non-compiled	[CE]  ']'  expected	3	None	replace
6	[BUG]  [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS "  +  i);  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(   "x   "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(   "s   "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {    [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS "  +  i);  [BUGGY]    }  columnLabels.add(   "RHS   ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	168	168	1	replace	columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS "  +  i);	  columnLabels.add(   "y   "    +    i);    	non-compiled	[CE]  ']'  expected	5	None	replace
7	[BUG]  [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS ");  [CE]  ']'  expected  [FE]        AssertionError    [CONTEXT]    for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(   "x   "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(   "s   "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {    [BUGGY]  columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS ");  [BUGGY]    }  columnLabels.add(   "RHS   ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	168	168	1	replace	columnLabels.add( "yyyy-MM-dd'T'HH:mm:ss.SSS ");	  columnLabels.add(   "y   "    +    i);    	non-compiled	[CE]  ']'  expected	5	None	replace
8	[BUG]  [BUGGY]  columnLabels.add( "std "  +  i);  [CE]  ']'  expected  [FE]            AssertionError    [CONTEXT]    for  (int  i  =  0;  i  <  getOriginalNumDecisionVariables();  i++)  {  columnLabels.add(   "x   "  +  i);  }  if  (!restrictToNonNegative)  {  columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);  }  for  (int  i  =  0;  i  <  getNumSlackVariables();  i++)  {  columnLabels.add(   "s   "  +  i);  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {    [BUGGY]  columnLabels.add( "std "  +  i);  [BUGGY]    columnLabels.add(   "a   "  +  i);  }  columnLabels.add(   "RHS   ");  }  [CLASS]  SimplexTableau  [METHOD]  initializeColumnLabels  [RETURN_TYPE]  void  [VARIABLES]  boolean  restrictToNonNegative  RealMatrix  tableau  double  epsilon  LinearObjectiveFunction  f  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	168	168	1	replace	columnLabels.add( "std "  +  i);	      columnLabels.add(   "s   "    +    i);    	non-compiled	[CE]  ']'  expected	3	None	replace
