bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  height);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  height);  [BUGGY]  matrix.setEntry(0,  0,  -1);  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  height);		non-compiled	[CE]  illegal  start  of  type	48	None	add
2	[BUG]  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(width,  height);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(width,  height);  [BUGGY]  matrix.setEntry(0,  0,  -1);  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(width,  height);		non-compiled	[CE]  illegal  start  of  type	48	None	add
3	[BUG]  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  [BUGGY]  matrix.setEntry(0,  0,  -1);  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);		non-compiled	[CE]  illegal  start  of  type	48	None	add
4	[BUG]  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(width,  width);  [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(width,  width);  [BUGGY]  matrix.setEntry(0,  0,  -1);  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(width,  width);		non-compiled	[CE]  illegal  start  of  type	48	None	add
5	[BUG]  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height);  [CE]  illegal  start  of  type  [FE]            AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height);  [BUGGY]  matrix.setEntry(0,  0,  -1);  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height);		non-compiled	[CE]  illegal  start  of  type	48	None	add
6	[BUG]  [BUGGY]  matrix.setEntry(0,  0,  height);  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]  matrix.setEntry(0,  0,  height);  [BUGGY]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	matrix.setEntry(0,  0,  height);	matrix.setEntry(0,  0,  -1);  	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  matrix.setEntry(0,  0,  height  -  1);  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]  matrix.setEntry(0,  0,  height  -  1);  [BUGGY]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	matrix.setEntry(0,  0,  height  -  1);	matrix.setEntry(0,  0,  -1);  	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  matrix.setEntry(0,  0,  width  -  1);  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]  matrix.setEntry(0,  0,  width  -  1);  [BUGGY]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	matrix.setEntry(0,  0,  width  -  1);	matrix.setEntry(0,  0,  -1);  	non-compiled	[CE]  <identifier>  expected	47	None	replace
9	[BUG]  [BUGGY]  matrix.setEntry(0,  0,  1);  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]  matrix.setEntry(0,  0,  1);  [BUGGY]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	matrix.setEntry(0,  0,  1);	matrix.setEntry(0,  0,  -1);  	non-compiled	[CE]  <identifier>  expected	47	None	replace
10	[BUG]  [BUGGY]  matrix.setEntry(0,  0,  0);  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]  matrix.setEntry(0,  0,  0);  [BUGGY]  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	matrix.setEntry(0,  0,  0);	matrix.setEntry(0,  0,  -1);  	non-compiled	[CE]  <identifier>  expected	47	None	replace
11	[BUG]  [BUGGY]    RealVector  objectiveCoefficients  =  maximize?  f.getOptionalVector()  :  f.getOptionalVector();  [CE]  ']'  expected  [FE]    AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    RealVector  objectiveCoefficients  =  maximize?  f.getOptionalVector()  :  f.getOptionalVector();  [BUGGY]  matrix.setEntry(0,  0,  -1);  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	    RealVector  objectiveCoefficients  =  maximize?  f.getOptionalVector()  :  f.getOptionalVector();		non-compiled	[CE]  ']'  expected	48	None	add
12	[BUG]  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  ==  2)?  0  :  1;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    int  zIndex  =(getNumObjectiveFunctions()  ==  2)?  0  :  1;  [BUGGY]  matrix.setEntry(0,  0,  -1);  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	    int  zIndex  =(getNumObjectiveFunctions()  ==  2)?  0  :  1;		non-compiled	[CE]  illegal  start  of  type	48	None	add
13	[BUG]  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  RealMatrix  createTableau(final  boolean  maximize)  {  int  width  =  numDecisionVariables  +  numSlackVariables  +  numArtificialVariables  +  getNumObjectiveFunctions()  +  1;  //  +  1  is  for  RHS  int  height  =  constraints.size()  +  getNumObjectiveFunctions();  Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix(height,  width);  if  (getNumObjectiveFunctions()  ==  2)  {  [BUGGY]    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix();  [BUGGY]  matrix.setEntry(0,  0,  -1);  }  int  zIndex  =  (getNumObjectiveFunctions()  ==  1)  ?  0  :  1;  matrix.setEntry(zIndex,  zIndex,  maximize  ?  1  :  -1);  RealVector  objectiveCoefficients  =  maximize  ?  f.getCoefficients().mapMultiply(-1)  :  f.getCoefficients();  copyArray(objectiveCoefficients.toArray(),  matrix.getDataRef()[zIndex]);  matrix.setEntry(zIndex,  width  -  1,  maximize  ?  f.getConstantTerm()  :  -1  *  f.getConstantTerm());  if  (!restrictToNonNegative)  {  [CLASS]  SimplexTableau  [METHOD]  createTableau  [RETURN_TYPE]  RealMatrix  final  boolean  maximize  [VARIABLES]  boolean  maximize  restrictToNonNegative  RealMatrix  tableau  Array2DRowRealMatrix  matrix  double  epsilon  RealVector  objectiveCoefficients  LinearObjectiveFunction  f  LinearConstraint  constraint  List  columnLabels  constraints  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  height  i  maxUlps  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	188	188	1	replace	    Array2DRowRealMatrix  matrix  =  new  Array2DRowRealMatrix();		non-compiled	[CE]  illegal  start  of  type	48	None	add
