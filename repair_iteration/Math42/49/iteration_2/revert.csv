projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,2d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=i;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLabels().get(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLength();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getWidth()/2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.length());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1d,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0d,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0d,col)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316col=entry.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316Integerrow=getIntValue(i,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(row,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getWidth()*2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getHeight()/2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getWidth());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(row+getWidth()/2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col.length());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.length()-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.length()-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.length()-col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,2d,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,3d,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=i+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getRowLabels().get(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLabels().get(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLabels().get(col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getRowLength();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)getRowLength();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLength()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLength()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,entry.length);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,entry.intValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)MatrixUtil.doubleValue(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,1d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1d,col)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,2d,col)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1d,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,3d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,2d,row)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)||!Precision.equals(entry,1d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1,col)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.length);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.intValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.doubleValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.doubleValue()-col;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.doubleValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=i.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0d,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(row,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.getWidth(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.getHeight(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.length(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.getMaxUlps(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=newInteger(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row="";
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(row+getWidth()*2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(col,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,entry.length());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,row.length());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=row.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.doubleValue()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&!Precision.equals(entry,1d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=col;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col+1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col>0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)&&
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col>0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)&&(row==null
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col>0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i,col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i,col)+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(entry,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.getWidth(),row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.min(entry.getWidth(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.getWidth(),col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(entry,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col,DEFAULT_ULPS,maxUlps);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col,DEFAULT_ULPS,height);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)Math.floor(col,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getRowLength()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLength()/1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col>0){for(inti=0;i<getWidth();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col>0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlp
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col>0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1,maxUlps)
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col+2;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getHeight()*2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getHeight());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(row+getHeight()/2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col.length()-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,entry.length-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,entry.length-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col+1d,maxUlps);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col+1d,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(row+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col.intValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,entry.intValue()-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,entry.doubleValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,entry.intValue()-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316Integerrow=getIntValue(entry,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316Integerrow=getIntValue(i,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316Integerrow=getIntValue(i,col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(col,row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(row,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entries.length());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,data.length());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col/1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(row+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getRowLength()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.getMaxUlps(),row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.getMaxUlps(),1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,3d,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col.doubleValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.doubleValue()-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.doubleValue()-col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.doubleValue()-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLabels().get(col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getRowLabels().get(col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLabels().get(col/1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getWidth()-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getWidth()/DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLabels().get(col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getRowLabels().get(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLabels().get(col-1+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col>0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)&
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col<=0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=i+1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=row+1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col+1,i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col+1,maxUlps);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,entry.length+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,3d,col)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)MatrixUtil.doubleValue(row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)MatrixUtil.doubleValue(entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)MatrixUtil.doubleValue(row,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316col=entry.doubleValue()+1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316col=entry.doubleValue()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316col=entry.doubleValue()-1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(entry,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(col,DEFAULT_ULPS,height);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(col,DEFAULT_ULPS,maxUlps);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)MatrixUtil.doubleValue(col,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getColumn(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,entry.length()-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,entry.length()-col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,entry.length(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,entry.length()-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col.doubleValue()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(row,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(row,col,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=row.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=col.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.length+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col+2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col+1,i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col.length()-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col.length()-3);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1d,row)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,3d,row)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)Matrix.convert(row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col.doubleValue()-entry.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col.doubleValue()-entry;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(row-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,DEFAULT_ULPS,height);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(entry,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,DEFAULT_ULPS,maxUlps);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(row,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.doubleValue()/1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=entry.doubleValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1,col)&&!Precision.equals(entry,1d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.getHeight(),row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.getHeight(),col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.min(entry.getHeight(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(double)getColumnLength()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.length(),row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.length(),col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.length(),maxUlps);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.min(entry.length(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1d,maxUlps)&&(col==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,2d,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.log(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(row,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.intValue()+1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.floatValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col<0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col<0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)&
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(row,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)Math.floor(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,1d)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,1d,height)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,1d,row)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getRowLabels().get(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.length-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=col+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=entry.intValue;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=col+1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&!Precision.equals(entry,2d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&!Precision.equals(entry,1d,height)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i-1,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)getRowLength()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)getRowLength()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)getColumnLength();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(row+getHeight()*2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(row+getWidth()*2-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(row,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,0,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,row.length()-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,row.length()-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(i-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i+1,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i+2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(i/1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col.intValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.intValue()-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=newInteger(0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=newInteger(col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=newInteger(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=0;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=null;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col.length()-entry.length);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col.length()-entry.length());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col.length()-entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col-1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=i-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col-1f;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.length-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col.doubleValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&(row!=null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&(col==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(row+getWidth());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(entry,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getWidth()*2-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getWidth()*2/2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(row-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)&&
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=newDouble(col).doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=i;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLabels().get(row-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=i.doubleValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col+i;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getRowLabels().get(row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col/1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,DEFAULT_ULPS,NEGATIVE_VAR_COLUMN_LABEL);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,NEGATIVE_VAR_COLUMN_LABEL);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getColumnLength()*1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)MatrixUtil.doubleValue(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(row*getWidth()/2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.max(entry.length(),col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,2d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,3d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=i.doubleValue()-col;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(row,col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(col,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(row,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(col,maxUlps);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316col=row.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col>0){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)&&(
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,entry.intValue()-col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col,entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)Matrix.convert(row,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.intValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.intValue()-col;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getColumn(i,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&!Precision.equals(entry,3d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&!Precision.equals(entry,DEFAULT_ULPS,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316Integerrow=getIntValue(col,i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=i+2;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.min(entry.getMaxUlps(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&(row<=0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(row,col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col-1,i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=getRow(row-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(row,entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0d,maxUlps)&&(col==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(row,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col/1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(col+1d,i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col-entry.intValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=column.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.floor(row-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.log(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&!Precision.equals(entry,1,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col,0d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(row,entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col-1,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=col-1+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,1d,DEFAULT_ULPS)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,col,1d,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=entry;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col<=DEFAULT_ULPS){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316if(col<DEFAULT_ULPS){for(inti=0;i<getHeight();i++){finaldoublemaxUlps=col.doubleValue();if(Precision.equals(entry,1d,maxUlps)
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.doubleValue()-1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(col,entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,entry.doubleValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)getRowLength()/1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.doubleValue()+1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)MatrixUtil.doubleValue(row,i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(Integer)MatrixUtil.doubleValue(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,entry.length);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(1,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(1,entry.length);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,row.length);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,1,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=DEFAULT_ULPS;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=entry.intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row-=entry.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,row)&&(col==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,col)&&(col<=0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,2d,maxUlps)&&(row<=null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316}elseif(!Precision.equals(entry,0,row)&&!Precision.equals(entry,1d,maxUlps)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)(col+getWidth(),DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=entry.intValue()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,row.length());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,col+1,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,row+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316intheight=Math.min(entry.length(),row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316doubleheight=Math.max(entry.length(),col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(1,entry.intValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Matrix.convert(col-1,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(1,entry.intValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.min(0,col+1,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=Math.max(0,row.length()-col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col-entry.doubleValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java316row=(int)Math.floor(col-entry);
