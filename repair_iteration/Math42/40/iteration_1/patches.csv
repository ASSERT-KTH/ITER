bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  negativeVarBasicRow);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  negativeVarBasicRow);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow.length);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getBasicRow(basicRow.length);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  coefficients.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  coefficients.length);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  coefficients.length);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  negativeVarBasicRows);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  negativeVarBasicRows);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  negativeVarBasicRows);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset()  -  1);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getColumnOffset()  -  1);	      Integer    baseRow    =    getEntry(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset()  +  1);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getColumnOffset()  +  1);	      Integer    baseRow    =    getEntry(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset(),  coefficients);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset(),  coefficients);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getColumnOffset(),  coefficients);	      Integer    baseRow    =    getEntry(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  basicRows.add(basicRow  +  1,  mostNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  +  1,  mostNegative);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  +  1,  mostNegative);	  basicRows.add(basicRow    +    1,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  basicRows.add(basicRow  +  1,  coefficients);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  +  1,  coefficients);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  +  1,  coefficients);	  basicRows.add(basicRow    +    1,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  basicRows.add(basicRow  +  1,  negativeVarBasicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  +  1,  negativeVarBasicRow,  mostNegative);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  +  1,  negativeVarBasicRow,  mostNegative);	  basicRows.add(basicRow    +    1,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  basicRows.add(basicRow  +  1,  negativeVarBasicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  +  1,  negativeVarBasicRow,  coefficients);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  +  1,  negativeVarBasicRow,  coefficients);	  basicRows.add(basicRow    +    1,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  basicRows.add(basicRow  +  1  -  coefficients.length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  +  1  -  coefficients.length);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  +  1  -  coefficients.length);	  basicRows.add(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  basicRows.add(basicRow  +  1  -  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  +  1  -  negativeVarBasicRow);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  +  1  -  negativeVarBasicRow);	  basicRows.add(basicRow    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset(),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset(),  negativeVarBasicRow);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getRhsOffset(),  negativeVarBasicRow);	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset(),  coefficients);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset(),  coefficients);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getRhsOffset(),  coefficients);	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  +  1);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  +  1);	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnOffset()));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnOffset()));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getColumnOffset()));	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnsOffset()));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnsOffset()));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getColumnsOffset()));	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  +  1));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  +  1));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  +  1));	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset(),  negativeVarBasicRow));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset(),  negativeVarBasicRow));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getRhsOffset(),  negativeVarBasicRow));	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  basicRows.add(basicRow  -  coefficients);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  coefficients);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  coefficients);	  basicRows.add(basicRow    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  basicRows.add(basicRow  -  coefficients.length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  coefficients.length);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  coefficients.length);	  basicRows.add(basicRow    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  basicRows.add(basicRow  -  restrictToNonNegative);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  restrictToNonNegative);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  restrictToNonNegative);	  basicRows.add(basicRow    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  basicRows.add(basicRow  -  coefficients[i]);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  coefficients[i]);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  coefficients[i]);	  basicRows.add(basicRow    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  basicRows.add(basicRow  -  1,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  1,  negativeVarBasicRow);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  1,  negativeVarBasicRow);	  basicRows.add(basicRow    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  basicRows.add(basicRow  -  1  +  coefficients.length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  1  +  coefficients.length);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  1  +  coefficients.length);	  basicRows.add(basicRow    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  basicRows.add(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow,  coefficients);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow,  coefficients);	  basicRows.add(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  basicRows.add(basicRow,  0,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow,  0,  negativeVarBasicRow);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow,  0,  negativeVarBasicRow);	  basicRows.add(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  basicRows.add(basicRow,  negativeVarBasicRow  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow,  negativeVarBasicRow  +  1);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow,  negativeVarBasicRow  +  1);	  basicRows.add(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnOffset()  -  1);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getColumnOffset()  -  1);	      Integer    basicRow    =    getEntry(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnOffset(),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnOffset(),  negativeVarBasicRow);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getColumnOffset(),  negativeVarBasicRow);	      Integer    basicRow    =    getEntry(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset()));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset()));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getColumnOffset()));	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnsOffset()));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnsOffset()));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getColumnsOffset()));	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset(),  coefficients.length));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset(),  coefficients.length));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getRhsOffset(),  coefficients.length));	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  +  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  +  1));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  +  1));	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset(),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset(),  negativeVarBasicRow);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getRhsOffset(),  negativeVarBasicRow);	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnsOffset());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnsOffset());  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getColumnsOffset());	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  +  1);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  +  1);	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRowCount();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getBasicRowCount();  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getBasicRowCount();	      Integer    basicRow    =    getBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRowIndex();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getBasicRowIndex();  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getBasicRowIndex();	      Integer    basicRow    =    getBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getBasicRow(0);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getBasicRow(0);	      Integer    basicRow    =    getBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(basicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getBasicRow(basicRow);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getBasicRow(basicRow);	      Integer    basicRow    =    getBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  -  coefficients.length));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  -  coefficients.length));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  -  coefficients.length));	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  -  1);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  -  1);	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  positiveVarBasicRow);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  positiveVarBasicRow);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  positiveVarBasicRow);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow  +  1);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getBasicRow(basicRow  +  1);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  coefficients);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  coefficients);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  coefficients);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnOffset()  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getColumnOffset()  +  1);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getColumnOffset()  +  1);	      Integer    basicRow    =    getEntry(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  -  1);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  -  1);	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset(),  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getColumnOffset(),  negativeVarBasicRow);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getColumnOffset(),  negativeVarBasicRow);	      Integer    baseRow    =    getEntry(basicRow,    getColumnOffset());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  basicRows.add(basicRow  -  0,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  0,  negativeVarBasicRow);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  0,  negativeVarBasicRow);	  basicRows.add(basicRow    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  basicRows.add(basicRow  -  1  +  coefficients);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  1  +  coefficients);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  1  +  coefficients);	  basicRows.add(basicRow    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  -  coefficients.length));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  -  coefficients.length));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  -  coefficients.length));	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  -  1));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  -  1));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getEntry(basicRow,  getRhsOffset()  -  1));	      Integer    baseRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  basicRows.add(basicRow  +  1,  maximumVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  +  1,  maximumVarBasicRow);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  +  1,  maximumVarBasicRow);	  basicRows.add(basicRow    +    1,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRow(i);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getBasicRow(i);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getBasicRow(i);	      Integer    basicRow    =    getBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  basicRows.add(basicRow  -  coefficient);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  coefficient);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  coefficient);	  basicRows.add(basicRow    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  basicRows.add(basicRow  -  negativeVarBasicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  negativeVarBasicRow,  mostNegative);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  negativeVarBasicRow,  mostNegative);	  basicRows.add(basicRow    -    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  -  1));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  -  1));  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getEntry(basicRow,  getRhsOffset()  -  1));	      Integer    basicRow    =    getEntry(basicRow,    getRhsOffset()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  basicRows.add(basicRow,  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow,  mostNegative);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow,  mostNegative);	  basicRows.add(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
61	[BUG]  [BUGGY]  basicRows.add(basicRow,  coefficient);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow,  coefficient);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow,  coefficient);	  basicRows.add(basicRow,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  basicRows.add(basicRow  +  1,  mostNegative,  negativeVarBasicRow);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  +  1,  mostNegative,  negativeVarBasicRow);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  +  1,  mostNegative,  negativeVarBasicRow);	  basicRows.add(basicRow    +    1,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  basicRows.add(basicRow  +  1,  coefficient);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  +  1,  coefficient);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  +  1,  coefficient);	  basicRows.add(basicRow    +    1,    negativeVarBasicRow);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  basicRows);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  baseRow  =  getBasicRow(basicRow,  basicRows);  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  baseRow  =  getBasicRow(basicRow,  basicRows);	      Integer    baseRow    =    getBasicRow(basicRow);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  Integer  basicRow  =  getBasicRows();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  Integer  basicRow  =  getBasicRows();  [BUGGY]    basicRows.add(basicRow);  coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	Integer  basicRow  =  getBasicRows();	      Integer    basicRow    =    getBasicRow();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  basicRows.add(basicRow  -  1,  mostNegative);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  1,  mostNegative);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  1,  mostNegative);	  basicRows.add(basicRow    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
67	[BUG]  [BUGGY]  basicRows.add(basicRow  -  1  -  coefficients.length);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (basicRows.contains(basicRow))  {    coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  else  {    [BUGGY]  basicRows.add(basicRow  -  1  -  coefficients.length);  [BUGGY]    coefficients[i]  =  (basicRow  ==  null  ?  0  :  getEntry(basicRow,  getRhsOffset()))  -  (restrictToNonNegative  ?  0  :  mostNegative);  }  [CLASS]  SimplexTableau  [METHOD]  getSolution  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  Integer  basicRow  negativeVarBasicRow  boolean  maximize  restrictToNonNegative  Set  basicRows  RealMatrix  tableau  double[]  coefficients  double  coefficient  entry  epsilon  mostNegative  sum  LinearObjectiveFunction  f  List  columnLabels  columnsToDrop  constraints  normalized  String  NEGATIVE_VAR_COLUMN_LABEL  int  DEFAULT_ULPS  artificialVar  col  colIndex  count  height  i  j  maxUlps  negativeVarColumn  numArtificialVariables  numDecisionVariables  numSlackVariables  row  slackVar  width  zIndex  long  serialVersionUID  	projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	0.22941573387056174	418	418	1	replace	basicRows.add(basicRow  -  1  -  coefficients.length);	  basicRows.add(basicRow    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
