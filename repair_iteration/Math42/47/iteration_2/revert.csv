projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(Precision.equals(entry,1d,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,1d,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,1d,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=i.intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0d,maxUlps)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i).intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0d,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col)+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()+1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getDouble(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(row<=0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(row!=null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(col<=0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,1,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i).doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i).floatValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i).intValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=entry.intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=col.intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=i.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=entry.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getDouble(i,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getColumn(i).intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()+i;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(col==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,col)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i+1,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,row)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i+1,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col).intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=row.intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col+2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()-1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=col.intValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(i-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(row-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getColumn(i).intValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i).intValue()/1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col).doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col).floatValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col).intValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(i<=0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(row<0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getInteger(i,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getDouble(i,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getDouble(i,col+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getColumn(i,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col)/1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col)+2;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col)+1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()/1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()*1d;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(col>=0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(col<=1)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i+1,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i+1,col,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i+1,col,height);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i+1,col,maxUlps);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getInteger(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col-3);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getColumn(i).doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRowIndex(i).intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getDouble(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()/i;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()*i;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(col!=null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i+1,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i+1,col,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i+1,col,maxUlps);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,1,col)&&(row<=0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col-3);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=col.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=this.row.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col+2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,row)&&(col==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,row)&&(col==col)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i).doubleValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i).doubleValue()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(i+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(col+1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(row+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(row,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(row>=null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i-1,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=this.row.intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0d)&&(row==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0d)&&(col==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i).floatValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=entry.doubleValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=entry.intValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()/1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(i,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i-1d);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i-1,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()+row;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()+i+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getFloatValue(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col+3);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getColumn(i).floatValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=i.doubleValue()+1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0d,maxUlps)&&(col==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col+3);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,row)&&(col==0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col-1+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getColumn(i,col-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(maxUlps==null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(col>=null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i-2);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)||(row!=null)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(col<0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(col>0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col)+0;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(row,entry);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRowValue(i).doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRowValue(i).intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i,col-1+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getDouble(i+1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getDouble(i-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(col/1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,col)&&(col<=DEFAULT_ULPS)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i,col)-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRowCount(i).doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=entry.intValue()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(i+1,col,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(entry,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=entry.doubleValue()-1;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getDouble(i+1,col);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i+1,0);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps()+entry.length;
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,row)&&(col<=0)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,0,row)&&(row<=col)){
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(entry.doubleValue());
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getColumn(i,col).intValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getIntValue(col,i-1);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=getRow(i+1,col,DEFAULT_ULPS);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314intmaxUlps=getMaximumUlps(col-1,row);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314Integerrow=row.doubleValue();
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314IntegermaxUlps=getMaximumUlps(i);
projects/Math42/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java314if(!Precision.equals(entry,1,col)&&(col<=0)){
