bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getKey();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getKey();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s  ==  null?  null  :  s.getKey();	  String    cached    =    s    ==    null?    null    :    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
2	[BUG]  [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getText();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getText();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s  ==  null?  null  :  s.getText();	  String    cached    =    s    ==    null?    null    :    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
3	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getCachedString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
4	[BUG]  [BUGGY]  char  cached  =  JsStringUtil.getCachedString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JsStringUtil.getCachedString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsStringUtil.getCachedString(s);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
5	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s,  cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getCachedString(s,  cc);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
6	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getCachedString(cc);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.getCachedString(cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getCachedString(cc);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
7	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getCachedString(jsString);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.getCachedString(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getCachedString(jsString);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
8	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s,  esCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s,  esCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getCachedString(s,  esCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
9	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(s,  jsString);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
10	[BUG]  [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JSCharsetEncoder.generateJsString(s,  jsString);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
11	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(jsString,  s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(jsString,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(jsString,  s);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
12	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  jsString,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  jsString,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  jsString,  ESCAPED_JS_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
13	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
14	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.class,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.class,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsString.class,  s);	  String    cached    =    JsStringUtilities.getString(JsString.class);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
15	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JSString.class,  s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JSString.class,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JSString.class,  s);	  String    cached    =    JsStringUtilities.getString(JsString.class);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
16	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JSString.class);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JSString.class);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JSString.class);	  String    cached    =    JsStringUtilities.getString(JsString.class);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
17	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString.class);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString.class);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(jsString.class);	  String    cached    =    JsStringUtilities.getString(JsString.class);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
18	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.class),  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.class),  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsString.class),  s);	  String    cached    =    JsStringUtilities.getString(JsString.class);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
19	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SECOND,  s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SECOND,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JS_STRING_SECOND,  s);	  String    cached    =    JsStringUtilities.getString(JsString.class);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
20	[BUG]  [BUGGY]  String  cached  =  s.getString( "java.sql.SQL_STRING ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getString( "java.sql.SQL_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getString( "java.sql.SQL_STRING ");	  String    cached    =    s.get(   "java.sql.SQL_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
21	[BUG]  [BUGGY]  String  cached  =  s.get( "java.sql.SQL_STRING ",  s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "java.sql.SQL_STRING ",  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.sql.SQL_STRING ",  s);	  String    cached    =    s.get(   "java.sql.SQL_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
22	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "java.sql.SQL_STRING ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( "java.sql.SQL_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "java.sql.SQL_STRING ");	  String    cached    =    s.get(   "java.sql.SQL_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
23	[BUG]  [BUGGY]  String  cached  =  s.get( "java.sql.SQL_STRING "  +  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "java.sql.SQL_STRING "  +  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.sql.SQL_STRING "  +  s);	  String    cached    =    s.get(   "java.sql.SQL_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
24	[BUG]  [BUGGY]  String  cached  =  s.getValue( "java.sql.SQL_STRING ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getValue( "java.sql.SQL_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getValue( "java.sql.SQL_STRING ");	  String    cached    =    s.get(   "java.sql.SQL_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
25	[BUG]  [BUGGY]  String  cached  =  s.getBoolean( "java.sql.SQL_STRING ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBoolean( "java.sql.SQL_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBoolean( "java.sql.SQL_STRING ");	  String    cached    =    s.get(   "java.sql.SQL_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
26	[BUG]  [BUGGY]  String  cached  =  s.convert(jsStringSeparator);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.convert(jsStringSeparator);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.convert(jsStringSeparator);	  String    cached    =    jsStringSeparator.convert(s);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
27	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.convert(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.convert(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.convert(s);	  String    cached    =    jsStringSeparator.convert(s);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
28	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.convert(s,  cc);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.convert(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.convert(s,  cc);	  String    cached    =    jsStringSeparator.convert(s);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
29	[BUG]  [BUGGY]  String  cached  =  cc.convert(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.convert(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.convert(s);	  String    cached    =    jsStringSeparator.convert(s);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
30	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.convertToJsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.convertToJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.convertToJsString(s);	  String    cached    =    jsStringSeparator.convert(s);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
31	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.convert(s,  context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.convert(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.convert(s,  context);	  String    cached    =    jsStringSeparator.convert(s);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
32	[BUG]  [BUGGY]  String  cached  =  s.remove(jsStringSep);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.remove(jsStringSep);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.remove(jsStringSep);	  String    cached    =    jsStringSep.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
33	[BUG]  [BUGGY]  String  cached  =  jsStringSep.getValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.getValue();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.getValue();	  String    cached    =    jsStringSep.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
34	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  jsString,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  jsString,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  jsString,  ESCAPED_JS_STRINGS);	  String    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(jsString,  s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(jsString,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(jsString,  s);	  String    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRING);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRING);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRING);	  String    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  String  cached  =  s.indexOf(jsStringSep);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.indexOf(jsStringSep);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.indexOf(jsStringSep);	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
38	[BUG]  [BUGGY]  String  cached  =  jsStringSep.indexOf(s)+  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.indexOf(s)+  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.indexOf(s)+  1;	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
39	[BUG]  [BUGGY]  String  cached  =  jsStringSep.indexOf(s  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.indexOf(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.indexOf(s  +  1);	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
40	[BUG]  [BUGGY]  String  cached  =  JSStringSep.indexOf(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.indexOf(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.indexOf(s);	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
41	[BUG]  [BUGGY]  String  cached  =  jsStringSep.indexOf(s,  0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.indexOf(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.indexOf(s,  0);	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
42	[BUG]  [BUGGY]  String  cached  =  jsStringSep.indexOf(s,  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.indexOf(s,  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.indexOf(s,  1);	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
43	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  0);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
44	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  DEFAULT_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  DEFAULT_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  DEFAULT_JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
45	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  ESCAPED_JS_STRINGS,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  ESCAPED_JS_STRINGS,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  ESCAPED_JS_STRINGS,  cc);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
46	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRINGS,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRINGS,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JS_STRINGS,  s);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
47	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  ESCAPED_JS_STRINGS,  0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  ESCAPED_JS_STRINGS,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  ESCAPED_JS_STRINGS,  0);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
48	[BUG]  [BUGGY]  CharsetEncoder  cached  =  cc.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  cc.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  cc.generateJsString(s);	  CharsetEncoder    outputCharsetEncoder    =    cc.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
49	[BUG]  [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(s,  ESCAPED_JS_STRINGS);	  CharsetEncoder    outputCharsetEncoder    =    cc.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
50	[BUG]  [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(jsString);	  CharsetEncoder    outputCharsetEncoder    =    cc.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
51	[BUG]  [BUGGY]  CharsetEncoder  cachedCharsetEncoder  =  cc.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cachedCharsetEncoder  =  cc.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cachedCharsetEncoder  =  cc.generateJsString(s);	  CharsetEncoder    outputCharsetEncoder    =    cc.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
52	[BUG]  [BUGGY]  CharsetEncoder  jsString  =  cc.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  jsString  =  cc.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  jsString  =  cc.generateJsString(s);	  CharsetEncoder    outputCharsetEncoder    =    cc.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
53	[BUG]  [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(s,  jsString);	  CharsetEncoder    outputCharsetEncoder    =    cc.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
54	[BUG]  [BUGGY]  Character  cached  =  s.get(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  s.get(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  s.get(ESCAPED_JS_STRINGS);	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
55	[BUG]  [BUGGY]  char  cached  =  s.getBoolean(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.getBoolean(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.getBoolean(ESCAPED_JS_STRINGS);	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
56	[BUG]  [BUGGY]  char  cached  =  s.getBooleanValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.getBooleanValue();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.getBooleanValue();	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
57	[BUG]  [BUGGY]  char  cached  =  s.getBoolean(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.getBoolean(JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.getBoolean(JS_STRINGS);	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
58	[BUG]  [BUGGY]  char  cached  =  s.getBoolean( "JASC_STRING_ELSE ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.getBoolean( "JASC_STRING_ELSE ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.getBoolean( "JASC_STRING_ELSE ");	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
59	[BUG]  [BUGGY]  char  cached  =  s.getBoolean( "JSC_STRING_ELSE ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.getBoolean( "JSC_STRING_ELSE ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.getBoolean( "JSC_STRING_ELSE ");	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
60	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(0);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(0);	  String    cached    =    s.get(esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
61	[BUG]  [BUGGY]  String  cached  =  s.getValue(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getValue(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getValue(s);	  String    cached    =    s.get(esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
62	[BUG]  [BUGGY]  String  cached  =  s.get(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(0);	  String    cached    =    s.get(esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
63	[BUG]  [BUGGY]  Character  cached  =  Character.toUpperCase(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toUpperCase(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toUpperCase(s);	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
64	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(lhsContext);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toLowerCase(lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(lhsContext);	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
65	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(s,  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toLowerCase(s,  false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(s,  false);	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
66	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(cc);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toLowerCase(cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(cc);	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
67	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(jsString);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toLowerCase(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(jsString);	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
68	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(s,  true);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toLowerCase(s,  true);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(s,  true);	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
69	[BUG]  [BUGGY]  JS_STRINGS.put(s,  jsString);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  jsString);	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
70	[BUG]  [BUGGY]  JS_STRINGS.put(s,  JSON_STRING_ELSE);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  JSON_STRING_ELSE);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  JSON_STRING_ELSE);	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
71	[BUG]  [BUGGY]  JS_STRINGS.put(s,  null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  null);	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
72	[BUG]  [BUGGY]  JS_STRINGS.put(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  cached  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  cached  +  1);	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
73	[BUG]  [BUGGY]  JS_STRINGS.put(s,  this);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  this);	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
74	[BUG]  [BUGGY]  String  cached  =  JsStringSep.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringSep.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringSep.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
75	[BUG]  [BUGGY]  String  cached  =  JsStringSep.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringSep.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringSep.get(s,  cc);	  String    cached    =    JsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  char  cached  =  JsStringSep.get(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JsStringSep.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsStringSep.get(s);	  String    cached    =    JsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  String  cached  =  s.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.toLowerCase(Locale.ENGLISH);	  String    cached    =    s.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
78	[BUG]  [BUGGY]  String  cached  =  s.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.toUpperCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.toUpperCase();	  String    cached    =    s.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
79	[BUG]  [BUGGY]  String  cached  =  s.toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.toLowerCase()  +  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.toLowerCase()  +  1;	  String    cached    =    s.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
80	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(consumer,  cc,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(consumer,  cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(consumer,  cc,  s);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
81	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  this);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(cc,  s,  this);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
82	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  consumer);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  consumer);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(cc,  s,  consumer);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
83	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  null);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(cc,  s,  null);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
84	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
85	[BUG]  [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JSCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
86	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  this);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  this);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
87	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JS_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
88	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JAVA_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JAVA_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JAVA_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
89	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  CONSTRUCTOR_TYPE);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  CONSTRUCTOR_TYPE);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  CONSTRUCTOR_TYPE);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
90	[BUG]  [BUGGY]  Object  cached  =  jsString.get(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  jsString.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  jsString.get(s);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
91	[BUG]  [BUGGY]  Object  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
92	[BUG]  [BUGGY]  Object  cached  =  JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  JS_STRINGS.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  JS_STRINGS.get(s,  jsString);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
93	[BUG]  [BUGGY]  Object  cached  =  JS_STRINGS.get(s,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  JS_STRINGS.get(s,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  JS_STRINGS.get(s,  s);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
94	[BUG]  [BUGGY]  Object  cached  =  ESCAPED_JS_STRINGS.get(s,  s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  ESCAPED_JS_STRINGS.get(s,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  ESCAPED_JS_STRINGS.get(s,  s);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
95	[BUG]  [BUGGY]  Object  cached  =  cc.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  cc.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  cc.get(s,  jsString);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
96	[BUG]  [BUGGY]  Object  cached  =  JSStrings.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  JSStrings.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  JSStrings.get(s,  jsString);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
97	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  getCurrentContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getCurrentContext();	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
98	[BUG]  [BUGGY]  Context  cc  =  getCallbackContext();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  getCallbackContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getCallbackContext();	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
99	[BUG]  [BUGGY]  Context  cc  =  getContextInput();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  getContextInput();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getContextInput();	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
100	[BUG]  [BUGGY]  Context  cc  =  createContext();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  createContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  createContext();	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
101	[BUG]  [BUGGY]  Context  cc  =  getCallContext();  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  getCallContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getCallContext();	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
102	[BUG]  [BUGGY]  Context  cc  =  getCallback();  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  getCallback();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getCallback();	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
103	[BUG]  [BUGGY]  String  cached  =  s.get(jsStringSep  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(jsStringSep  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(jsStringSep  +  1);	  String    cached    =    jsStringSep.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
104	[BUG]  [BUGGY]  String  cached  =  jsStringSep.get(s  +  2);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.get(s  +  2);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.get(s  +  2);	  String    cached    =    jsStringSep.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
105	[BUG]  [BUGGY]  String  cached  =  JSStringSep.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.get(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.get(s  +  1);	  String    cached    =    jsStringSep.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
106	[BUG]  [BUGGY]  String  cached  =  jsStringSep.get(s  +  3);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.get(s  +  3);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.get(s  +  3);	  String    cached    =    jsStringSep.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
107	[BUG]  [BUGGY]  String  cached  =  jsStringSep.get(s  +  4);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.get(s  +  4);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.get(s  +  4);	  String    cached    =    jsStringSep.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(context,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(context,  s);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
109	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(context,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(context,  ESCAPED_JS_STRINGS);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
110	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  this);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(context,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(context,  this);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
111	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  true);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(context,  true);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(context,  true);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
112	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(context,  JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(context,  JS_STRINGS);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
113	[BUG]  [BUGGY]  String  cached  =  jsStringSep.trim();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.trim();	  String    cached    =    s.get(jsStringSep);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
114	[BUG]  [BUGGY]  String  cached  =  jsStringSep.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.toLowerCase();	  String    cached    =    s.get(jsStringSep);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
115	[BUG]  [BUGGY]  String  cached  =  jsStringSep.substring(0,  jsStringSep.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.substring(0,  jsStringSep.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.substring(0,  jsStringSep.length());	  String    cached    =    s.get(jsStringSep);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
116	[BUG]  [BUGGY]  String  cached  =  jsStringSep.substring(0,  jsStringSep);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.substring(0,  jsStringSep);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.substring(0,  jsStringSep);	  String    cached    =    s.get(jsStringSep);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
117	[BUG]  [BUGGY]  String  cached  =  jsStringSep.substring(0,  jsStringSep.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.substring(0,  jsStringSep.length()  -  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.substring(0,  jsStringSep.length()  -  1);	  String    cached    =    s.get(jsStringSep);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
118	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "UTF-8 ").toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( "UTF-8 ").toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "UTF-8 ").toLowerCase();	  String    cached    =    s.getBytes(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
119	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "UTF-8 ").trim();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( "UTF-8 ").trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "UTF-8 ").trim();	  String    cached    =    s.getBytes(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
120	[BUG]  [BUGGY]  String  cached  =  s.getBytes();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes();	  String    cached    =    s.getBytes(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
121	[BUG]  [BUGGY]  String  cached  =  s.getString( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getString( "UTF-8 ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getString( "UTF-8 ");	  String    cached    =    s.getBytes(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
122	[BUG]  [BUGGY]  String  cached  =  s.getBytes( ".js ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( ".js ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( ".js ");	  String    cached    =    s.getBytes(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
123	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "UTF-8 "  +  s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( "UTF-8 "  +  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "UTF-8 "  +  s);	  String    cached    =    s.getBytes(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
124	[BUG]  [BUGGY]  String  cached  =  s.trim().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.trim().toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.trim().toLowerCase();	  String    cached    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
125	[BUG]  [BUGGY]  String  cached  =  s.trim().trim();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.trim().trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.trim().trim();	  String    cached    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
126	[BUG]  [BUGGY]  String  cached  =  jsString.getValue(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.getValue(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.getValue(s,  ESCAPED_JS_STRINGS);	  String    cached    =    jsString.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
127	[BUG]  [BUGGY]  char  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    jsString.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
128	[BUG]  [BUGGY]  String  cached  =  jsString.get(s,  DEFAULT_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.get(s,  DEFAULT_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s,  DEFAULT_JS_STRINGS);	  String    cached    =    jsString.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
129	[BUG]  [BUGGY]  String  cached  =  jsString.get(s,  DEFAULT_JSC_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.get(s,  DEFAULT_JSC_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s,  DEFAULT_JSC_STRINGS);	  String    cached    =    jsString.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
130	[BUG]  [BUGGY]  String  cached  =  s.remove(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.remove(JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.remove(JS_STRINGS);	  String    cached    =    JS_STRINGS.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
131	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.indexOf(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.indexOf(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.indexOf(s);	  String    cached    =    JS_STRINGS.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
132	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.getValue(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.getValue(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.getValue(s);	  String    cached    =    JS_STRINGS.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
133	[BUG]  [BUGGY]  char  cached  =  JS_STRINGS.remove(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JS_STRINGS.remove(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JS_STRINGS.remove(s);	  String    cached    =    JS_STRINGS.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
134	[BUG]  [BUGGY]  Charset  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);	  char    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
135	[BUG]  [BUGGY]  Charset  cached  =  JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  JS_STRINGS.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  JS_STRINGS.get(s,  jsString);	  char    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
136	[BUG]  [BUGGY]  Charset  cached  =  ESCAPED_JS_STRINGS.get(s,  s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  ESCAPED_JS_STRINGS.get(s,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  ESCAPED_JS_STRINGS.get(s,  s);	  char    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s).toUpperCase();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s).toUpperCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s).toUpperCase();	  String    cached    =    JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
138	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s).toLowerCase(context);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s).toLowerCase(context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s).toLowerCase(context);	  String    cached    =    JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
139	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s).toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s).toString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s).toString();	  String    cached    =    JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
140	[BUG]  [BUGGY]  char  cached  =  JS_STRINGS.get(s).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JS_STRINGS.get(s).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JS_STRINGS.get(s).toLowerCase();	  String    cached    =    JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
141	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s)+ ".toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s)+ ".toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s)+ ".toLowerCase();	  String    cached    =    JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
142	[BUG]  [BUGGY]  String  cached  =  s.getStringValue();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getStringValue();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getStringValue();	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
143	[BUG]  [BUGGY]  String  cached  =  s.getBooleanValue(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBooleanValue(JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBooleanValue(JS_STRINGS);	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
144	[BUG]  [BUGGY]  String  cached  =  s.getStringValue(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getStringValue(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getStringValue(ESCAPED_JS_STRINGS);	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
145	[BUG]  [BUGGY]  String  cached  =  s.getValue(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getValue(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getValue(ESCAPED_JS_STRINGS);	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
146	[BUG]  [BUGGY]  String  cached  =  s.getBooleanValue(JSC_STRINGS);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBooleanValue(JSC_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBooleanValue(JSC_STRINGS);	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
147	[BUG]  [BUGGY]  String  cached  =  s.getBooleanValue(JAVA_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBooleanValue(JAVA_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBooleanValue(JAVA_STRINGS);	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
148	[BUG]  [BUGGY]  String  cached  =  s.getBooleanValue(USER_JSC_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBooleanValue(USER_JSC_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBooleanValue(USER_JSC_STRINGS);	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
149	[BUG]  [BUGGY]  String  cached  =  s.get(jsStringSeparator,  this);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(jsStringSeparator,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(jsStringSeparator,  this);	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
150	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s,  null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s,  null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s,  null);	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
151	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.get(s,  this);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.get(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.get(s,  this);	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
152	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s,  this).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s,  this).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s,  this).toLowerCase();	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
153	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s,  getContext());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s,  getContext());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s,  getContext());	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
154	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s,  false);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s,  false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s,  false);	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
155	[BUG]  [BUGGY]  char  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
156	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  DEFAULT_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(s,  DEFAULT_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  DEFAULT_JS_STRINGS);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
157	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(s,  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  1);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
158	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  DEFAULT_JSC_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(s,  DEFAULT_JSC_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  DEFAULT_JSC_STRINGS);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
159	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  0);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
160	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  Context.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(s,  Context.EXPR_RESULT);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  Context.EXPR_RESULT);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
161	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  DEFAULT_JAVA_STRINGS);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(s,  DEFAULT_JAVA_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  DEFAULT_JAVA_STRINGS);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
162	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  jsString);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(cc,  jsString);	  String    cached    =    JsStringUtilities.getString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
163	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString,  s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(jsString,  s);	  String    cached    =    JsStringUtilities.getString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
164	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  jsString);	  String    cached    =    JsStringUtilities.getString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
165	[BUG]  [BUGGY]  String  cached  =  jsString.getValue();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.getValue();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.getValue();	  String    cached    =    jsString.get(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
166	[BUG]  [BUGGY]  String  cached  =  jsString.getBytes(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.getBytes(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.getBytes(s);	  String    cached    =    jsString.get(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
167	[BUG]  [BUGGY]  String  cached  =  jsString.getValue(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.getValue(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.getValue(s);	  String    cached    =    jsString.get(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
168	[BUG]  [BUGGY]  String  cached  =  s.get(jsString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(jsString);	  String    cached    =    jsString.get(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
169	[BUG]  [BUGGY]  String  cached  =  jsString.getString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.getString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.getString();	  String    cached    =    jsString.get(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
170	[BUG]  [BUGGY]  String  cached  =  JSStringUtilities.getString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtilities.getString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtilities.getString(s);	  String    cached    =    jsString.get(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
171	[BUG]  [BUGGY]  String  cached  =  s!=  null?  null  :  s.getString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s!=  null?  null  :  s.getString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s!=  null?  null  :  s.getString();	  String    cached    =    s    ==    null?    null    :    s.getString();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
172	[BUG]  [BUGGY]  String  cached  =  s  ==  null?  null  :  s.toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s  ==  null?  null  :  s.toString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s  ==  null?  null  :  s.toString();	  String    cached    =    s    ==    null?    null    :    s.getString();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
173	[BUG]  [BUGGY]  String  cached  =  s!=  null?  null  :  s.getKey();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s!=  null?  null  :  s.getKey();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s!=  null?  null  :  s.getKey();	  String    cached    =    s!=    null?    null    :    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
174	[BUG]  [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  ESCAPED_JS_STRINGS.get(s).toLowerCase();	  String    cached    =    esCAPED_JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
175	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s).toUpperCase();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s).toUpperCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s).toUpperCase();	  String    cached    =    esCAPED_JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  	72	None	replace
176	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s)+ ".toLowerCase();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s)+ ".toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s)+ ".toLowerCase();	  String    cached    =    esCAPED_JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  	72	None	replace
177	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s).toString();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s).toString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s).toString();	  String    cached    =    esCAPED_JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  	72	None	replace
178	[BUG]  [BUGGY]  String  cached  =  jsString(s).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s).toLowerCase();	  String    cached    =    esCAPED_JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
179	[BUG]  [BUGGY]  String  cached  =  jsString(s.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toString());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toString());	  String    cached    =    s.toString();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
180	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.getValue(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.getValue(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.getValue(s);	  String    cached    =    jsStringSeparator.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
181	[BUG]  [BUGGY]  String  cached  =  s.getValue(jsStringSeparator);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getValue(jsStringSeparator);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getValue(jsStringSeparator);	  String    cached    =    jsStringSeparator.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
182	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.toString();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.toString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.toString();	  String    cached    =    jsStringSeparator.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
183	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.getStringValue(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.getStringValue(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.getStringValue(s);	  String    cached    =    jsStringSeparator.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
184	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.getKey();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.getKey();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.getKey();	  String    cached    =    jsStringSeparator.getValue(s);    	non-compiled	[CE]  	52	None	replace
185	[BUG]  [BUGGY]  String  cached  =  jsString.toLowerCase();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.toLowerCase();	  String    cached    =    JS_STRINGS.get(jsString);    	non-compiled	[CE]  	92	None	replace
186	[BUG]  [BUGGY]  JS_STRINGS.put(s,  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  JS_STRINGS);	  String    cached    =    JS_STRINGS.get(jsString);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
187	[BUG]  [BUGGY]  String  cached  =  jsString.trim();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.trim();	  String    cached    =    JS_STRINGS.get(jsString);    	non-compiled	[CE]  	92	None	replace
188	[BUG]  [BUGGY]  String  cached  =  jsString.equals(JS_STRINGS.get(s));  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.equals(JS_STRINGS.get(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.equals(JS_STRINGS.get(s));	  String    cached    =    JS_STRINGS.get(jsString);    	non-compiled	[CE]  	92	None	replace
189	[BUG]  [BUGGY]  JS_STRINGS  cached  =  JS_STRINGS.get(s);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS  cached  =  JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS  cached  =  JS_STRINGS.get(s);	  String    cached    =    JS_STRINGS.get(jsString);    	non-compiled	[CE]  	92	None	replace
190	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toUpperCase());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toUpperCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toUpperCase());	  String    cached    =    JsStringUtilities.getString(s.toLowerCase());    	non-compiled	[CE]  	60	None	replace
191	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toLowerCase()  +  1);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toLowerCase()  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toLowerCase()  +  1);	  String    cached    =    JsStringUtilities.getString(s.toLowerCase());    	non-compiled	[CE]  	60	None	replace
192	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toBooleanCase());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toBooleanCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toBooleanCase());	  String    cached    =    JsStringUtilities.getString(s.toLowerCase());    	non-compiled	[CE]  	60	None	replace
193	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toLowerCase(),  false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toLowerCase(),  false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toLowerCase(),  false);	  String    cached    =    JsStringUtilities.getString(s.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
194	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.substring(0,  s.length()  -  1));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.substring(0,  s.length()  -  1));	  String    cached    =    JsStringUtilities.getString(s.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
195	[BUG]  [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  ESCAPED_JS_STRINGS.get(s  +  1);	  String    cached    =    esCAPED_JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
196	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s  +  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s  +  2);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s  +  2);	  String    cached    =    esCAPED_JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
197	[BUG]  [BUGGY]  String  cached  =  jsString(s  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s  +  1);	  String    cached    =    esCAPED_JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
198	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s  +  4);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s  +  4);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s  +  4);	  String    cached    =    esCAPED_JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
199	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s  +  3);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s  +  3);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s  +  3);	  String    cached    =    esCAPED_JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
200	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.toJsString(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.toJsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.toJsString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.toJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
201	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.toJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.toJsString(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.toJsString(jsString);	  String    cached    =    JsStringUtil.toJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
202	[BUG]  [BUGGY]  char  cached  =  JsStringUtil.toJsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JsStringUtil.toJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsStringUtil.toJsString(s);	  String    cached    =    JsStringUtil.toJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
203	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.toJsString(cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.toJsString(cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.toJsString(cc);	  String    cached    =    JsStringUtil.toJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
204	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.toJsString(context,  s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.toJsString(context,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.toJsString(context,  s);	  String    cached    =    JsStringUtil.toJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
205	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.toJsString(s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtil.toJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.toJsString(s);	  String    cached    =    JsStringUtil.toJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
206	[BUG]  [BUGGY]  String  cached  =  s.getValue(jsStringSep);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getValue(jsStringSep);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getValue(jsStringSep);	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
207	[BUG]  [BUGGY]  String  cached  =  JSStringSep.getValue(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.getValue(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.getValue(s);	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
208	[BUG]  [BUGGY]  String  cached  =  jsStringSep.getKey();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.getKey();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.getKey();	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
209	[BUG]  [BUGGY]  String  cached  =  jsStringSep.getValue(s,  context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.getValue(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.getValue(s,  context);	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
210	[BUG]  [BUGGY]  String  cached  =  jsStringSep.getValue(s,  0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.getValue(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.getValue(s,  0);	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
211	[BUG]  [BUGGY]  String  cached  =  jsStringSep.getValue(s,  cc);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.getValue(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.getValue(s,  cc);	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
212	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  -1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  -1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  -1);	  Context    rhsContext    =    Context.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
213	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(-1,  1);	  Context    rhsContext    =    Context.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
214	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  0);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  0);	  Context    rhsContext    =    Context.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
215	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  2);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  2);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(-1,  2);	  Context    rhsContext    =    Context.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
216	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(0,  0);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(0,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(0,  0);	  Context    rhsContext    =    Context.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
217	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  1);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  1);	  Context    rhsContext    =    Context.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
218	[BUG]  [BUGGY]  Char  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  jsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  jsString(s);	  Char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
219	[BUG]  [BUGGY]  Char  cached  =  s.get(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  s.get(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  s.get(ESCAPED_JS_STRINGS);	  Char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
220	[BUG]  [BUGGY]  Char  cached  =  cc.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  cc.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  cc.get(s);	  Char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
221	[BUG]  [BUGGY]  Char  cached  =  JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  JS_STRINGS.get(s);	  Char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
222	[BUG]  [BUGGY]  Char  cached  =  cc.getCurrentSegment().get(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  cc.getCurrentSegment().get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  cc.getCurrentSegment().get(s);	  Char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
223	[BUG]  [BUGGY]  String  cached  =  s.getQualifiedName()  + ".js ";  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getQualifiedName()  + ".js ";  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getQualifiedName()  + ".js ";	  String    cached    =    s.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
224	[BUG]  [BUGGY]  String  cached  =  s.getQualifiedName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getQualifiedName()  + "n ";  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getQualifiedName()  + "n ";	  String    cached    =    s.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
225	[BUG]  [BUGGY]  String  cached  =  s.getQualifiedName()  + "_ "  +  s;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getQualifiedName()  + "_ "  +  s;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getQualifiedName()  + "_ "  +  s;	  String    cached    =    s.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
226	[BUG]  [BUGGY]  String  cached  =  s.getQualifiedName()  + ": ";  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getQualifiedName()  + ": ";  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getQualifiedName()  + ": ";	  String    cached    =    s.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
227	[BUG]  [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;	  char    cached    =    ESCAPED_JS_STRINGS.get(s)+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
228	[BUG]  [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;	  char    cached    =    ESCAPED_JS_STRINGS.get(s)+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
229	[BUG]  [BUGGY]  Char  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;	  char    cached    =    ESCAPED_JS_STRINGS.get(s)+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
230	[BUG]  [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s)+  2;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s)+  2;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  ESCAPED_JS_STRINGS.get(s)+  2;	  char    cached    =    ESCAPED_JS_STRINGS.get(s)+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
231	[BUG]  [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s)/  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s)/  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  ESCAPED_JS_STRINGS.get(s)/  1;	  char    cached    =    ESCAPED_JS_STRINGS.get(s)+    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
232	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(jsString);	  CharsetEncoder    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
233	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(cc,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(cc,  s);	  CharsetEncoder    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
234	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(context,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(context,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(context,  s);	  CharsetEncoder    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
235	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(s,  this);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(s,  this);	  CharsetEncoder    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
236	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(jsString,  s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(jsString,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(jsString,  s);	  CharsetEncoder    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
237	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  2);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s  +  2);	  String    cached    =    JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
238	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  3);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  3);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s  +  3);	  String    cached    =    JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
239	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  4);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  4);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s  +  4);	  String    cached    =    JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
240	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s  *  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s  *  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s  *  1);	  String    cached    =    JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
241	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  1,  s.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  1,  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s  +  1,  s.length());	  String    cached    =    JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
242	[BUG]  [BUGGY]  Character  cached  =  esCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  esCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  esCAPED_JS_STRINGS.get(s);	  char    cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
243	[BUG]  [BUGGY]  Char  cached  =  esCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  esCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  esCAPED_JS_STRINGS.get(s);	  char    cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
244	[BUG]  [BUGGY]  char  cached  =  esCAPED_JS_STRINGS.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  esCAPED_JS_STRINGS.get(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  esCAPED_JS_STRINGS.get(s  +  1);	  char    cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
245	[BUG]  [BUGGY]  String  cached  =  cc.getString();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.getString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.getString();	  String    cached    =    JS_STRINGS.get(cc);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
246	[BUG]  [BUGGY]  String  cached  =  cc.get(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.get(JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.get(JS_STRINGS);	  String    cached    =    JS_STRINGS.get(cc);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
247	[BUG]  [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(cc));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(cc));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JS_STRINGS.get(cc));	  String    cached    =    JS_STRINGS.get(cc);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
248	[BUG]  [BUGGY]  String  cached  =  jsString(cc);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(cc);	  String    cached    =    JS_STRINGS.get(cc);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
249	[BUG]  [BUGGY]  String  cached  =  cc.getValue();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.getValue();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.getValue();	  String    cached    =    JS_STRINGS.get(cc);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
250	[BUG]  [BUGGY]  String  cached  =  cc.getCurrentStructure();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.getCurrentStructure();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.getCurrentStructure();	  String    cached    =    JS_STRINGS.get(cc);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
251	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR,  s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR,  s);	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
252	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR  +  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR  +  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR  +  s);	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
253	[BUG]  [BUGGY]  char  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR);	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
254	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JAVA_STRING_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JAVA_STRING_SEPARATOR);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JAVA_STRING_SEPARATOR);	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
255	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString_SEPARATOR,  s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString_SEPARATOR,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsString_SEPARATOR,  s);	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
256	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(SEPARATOR);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(SEPARATOR);	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
257	[BUG]  [BUGGY]  String  cached  =  s.getString( "java.lang.String ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getString( "java.lang.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getString( "java.lang.String ");	  String    cached    =    s.get(   "java.lang.String   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
258	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "java.lang.String ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( "java.lang.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "java.lang.String ");	  String    cached    =    s.get(   "java.lang.String   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
259	[BUG]  [BUGGY]  String  cached  =  s.get( "JsString ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "JsString ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "JsString ");	  String    cached    =    s.get(   "java.lang.String   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
260	[BUG]  [BUGGY]  String  cached  =  s.getValue( "java.lang.String ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getValue( "java.lang.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getValue( "java.lang.String ");	  String    cached    =    s.get(   "java.lang.String   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
261	[BUG]  [BUGGY]  String  cached  =  s.get( "java.lang.String ",  s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "java.lang.String ",  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.lang.String ",  s);	  String    cached    =    s.get(   "java.lang.String   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
262	[BUG]  [BUGGY]  String  cached  =  s.get( "java.lang.String "  +  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "java.lang.String "  +  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.lang.String "  +  s);	  String    cached    =    s.get(   "java.lang.String   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
263	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  s);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(context,  s);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
264	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(context,  ESCAPED_JS_STRINGS);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
265	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(lhsContext);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
266	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  this);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(context,  this);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
267	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  jsString);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(context,  jsString);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
268	[BUG]  [BUGGY]  String  cached  =  s  ==  null?  null  :  s.toCharArray();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s  ==  null?  null  :  s.toCharArray();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s  ==  null?  null  :  s.toCharArray();	  String    cached    =    s.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
269	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getCurrentContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getCurrentContext();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
270	[BUG]  [BUGGY]  Context  rhsContext  =  getRhsContext();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getRhsContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getRhsContext();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
271	[BUG]  [BUGGY]  Context  rhsContext  =  getBaseContext();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getBaseContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getBaseContext();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
272	[BUG]  [BUGGY]  Context  rhsContext  =  getContextInput();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getContextInput();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContextInput();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
273	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForJsString(s);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getContextForJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContextForJsString(s);	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
274	[BUG]  [BUGGY]  Context  rhsContext  =  createContext();  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  createContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  createContext();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
275	[BUG]  [BUGGY]  Character  cached  =  JsStringUtilities.getString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JsStringUtilities.getString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JsStringUtilities.getString(s);	  char    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
276	[BUG]  [BUGGY]  Charset  cached  =  JsStringUtilities.getString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  JsStringUtilities.getString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  JsStringUtilities.getString(s);	  char    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
277	[BUG]  [BUGGY]  String  cad  =  JsStringUtilities.getString(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cad  =  JsStringUtilities.getString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cad  =  JsStringUtilities.getString(s);	  char    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
278	[BUG]  [BUGGY]  char  cached  =  JsStringUtil.jsString(s,  esCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JsStringUtil.jsString(s,  esCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsStringUtil.jsString(s,  esCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.jsString(s,    esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
279	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ECAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ECAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  ECAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.jsString(s,    esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
280	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS).toLowerCase();	  String    cached    =    JsStringUtil.jsString(s,    esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
281	[BUG]  [BUGGY]  String  cached  =  jsString(s,  esCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s,  esCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s,  esCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.jsString(s,    esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
282	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  DEFAULT_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  DEFAULT_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  DEFAULT_JS_STRINGS);	  String    cached    =    JsStringUtil.jsString(s,    esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
283	[BUG]  [BUGGY]  Charset  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  jsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  jsString(s);	  Charset    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
284	[BUG]  [BUGGY]  Charset  cached  =  s.get(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  s.get(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  s.get(ESCAPED_JS_STRINGS);	  Charset    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
285	[BUG]  [BUGGY]  Charset  cached  =  JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  JS_STRINGS.get(s);	  Charset    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
286	[BUG]  [BUGGY]  Charset  cached  =  cc.get(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  cc.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  cc.get(s);	  Charset    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
287	[BUG]  [BUGGY]  Charset  cached  =  cc.getCurrentStructure().get(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  cc.getCurrentStructure().get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  cc.getCurrentStructure().get(s);	  Charset    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
288	[BUG]  [BUGGY]  Charset  cached  =  cc.getCurrentSegment().get(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  cc.getCurrentSegment().get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  cc.getCurrentSegment().get(s);	  Charset    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
289	[BUG]  [BUGGY]  char  cached  =  jsString(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  jsString(s.toLowerCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsString(s.toLowerCase());	  char    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
290	[BUG]  [BUGGY]  char  cached  =  jsString(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  jsString(s.toCharArray());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsString(s.toCharArray());	  char    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
291	[BUG]  [BUGGY]  char  cached  =  jsString(s.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  jsString(s.toUpperCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsString(s.toUpperCase());	  char    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
292	[BUG]  [BUGGY]  String  cached  =  JsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString(s);	  char    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
293	[BUG]  [BUGGY]  char  cached  =  jsString(s.trim());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  jsString(s.trim());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsString(s.trim());	  char    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
294	[BUG]  [BUGGY]  String  cached  =  s.getString( "java.sql.String ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getString( "java.sql.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getString( "java.sql.String ");	  String    cached    =    s.get(   "java.sql.String   ");    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
295	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "java.sql.String ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( "java.sql.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "java.sql.String ");	  String    cached    =    s.get(   "java.sql.String   ");    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
296	[BUG]  [BUGGY]  String  cached  =  s.get( "java.sql.String ",  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "java.sql.String ",  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.sql.String ",  s);	  String    cached    =    s.get(   "java.sql.String   ");    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
297	[BUG]  [BUGGY]  String  cached  =  s.get( "java.sql.string ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "java.sql.string ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.sql.string ");	  String    cached    =    s.get(   "java.sql.String   ");    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
298	[BUG]  [BUGGY]  String  cached  =  s.getValue( "java.sql.String ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getValue( "java.sql.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getValue( "java.sql.String ");	  String    cached    =    s.get(   "java.sql.String   ");    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
299	[BUG]  [BUGGY]  String  cached  =  s.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getCurrentName();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getCurrentName();	  String    cached    =    s.getKey();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
300	[BUG]  [BUGGY]  String  cached  =  s.getText();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getText();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getText();	  String    cached    =    s.getKey();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
301	[BUG]  [BUGGY]  String  cached  =  jsString(s.toCharArray()  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toCharArray()  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toCharArray()  +  1);	  String    cached    =    jsString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
302	[BUG]  [BUGGY]  String  cached  =  jsString(s.toCharArray()).trim();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toCharArray()).trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toCharArray()).trim();	  String    cached    =    jsString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
303	[BUG]  [BUGGY]  String  cached  =  jsString(s.getBytes());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getBytes());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getBytes());	  String    cached    =    jsString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
304	[BUG]  [BUGGY]  String  cached  =  jsString(s.getValue());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getValue());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getValue());	  String    cached    =    jsString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
305	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  1));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  1));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(0,  s.length()  1));	  String    cached    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
306	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  +  1));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(0,  s.length()  +  1));	  String    cached    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
307	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()),  s.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()),  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(0,  s.length()),  s.length());	  String    cached    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
308	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  2));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  2));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(0,  s.length()  2));	  String    cached    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
309	[BUG]  [BUGGY]  String  cached  =  JsString(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsString(s.substring(0,  s.length()));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString(s.substring(0,  s.length()));	  String    cached    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
310	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc,  consumer);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc,  consumer);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  cc,  consumer);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
311	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  cc,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
312	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  cc).toLowerCase();	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
313	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc,  context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  cc,  context);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
314	[BUG]  [BUGGY]  Character  cached  =  JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JS_STRINGS.get(s);	  char    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
315	[BUG]  [BUGGY]  Character  cached  =  JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JS_STRINGS.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JS_STRINGS.get(s,  jsString);	  char    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
316	[BUG]  [BUGGY]  String  cached  =  JsStringS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringS.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringS.get(s,  jsString);	  char    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
317	[BUG]  [BUGGY]  Charset  cached  =  JS_STRINGS.get(s,  s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  JS_STRINGS.get(s,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  JS_STRINGS.get(s,  s);	  char    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
318	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContext(context);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
319	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContext(lhsContext);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
320	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContext(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
321	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContext(false);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
322	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextInstance();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextInstance();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContextInstance();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
323	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextFor(s);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextFor(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContextFor(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
324	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  cc,  consumer);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  cc,  consumer);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  cc,  consumer);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
325	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(cc,  s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(cc,  s);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
326	[BUG]  [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s,  cc);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JSCharsetEncoder.generateJsString(s,  cc);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
327	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  consumer);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  consumer);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  consumer);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
328	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  cc,  context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  cc,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  cc,  context);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
329	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  cc);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(s,  cc);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
330	[BUG]  [BUGGY]  String  cached  =  JSStringSep.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
331	[BUG]  [BUGGY]  String  cached  =  jsString(JSStringSep.get(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JSStringSep.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JSStringSep.get(s);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
332	[BUG]  [BUGGY]  String  cached  =  JSStringSep.convert(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.convert(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.convert(s);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
333	[BUG]  [BUGGY]  String  cached  =  JSStringSep.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.get(s,  cc);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
334	[BUG]  [BUGGY]  String  cached  =  JSStringSep.get(s,  context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.get(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.get(s,  context);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
335	[BUG]  [BUGGY]  String  cached  =  jsString(ESCAPED_JS_STRINGS.get(s));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(ESCAPED_JS_STRINGS.get(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(ESCAPED_JS_STRINGS.get(s));	  String    cached    =    jsString(esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
336	[BUG]  [BUGGY]  String  cached  =  jsString(ESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(ESCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(ESCAPED_JS_STRINGS.get(s);	  String    cached    =    jsString(esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
337	[BUG]  [BUGGY]  String  cached  =  jsString(esCAPED_JS_STRINGS.get(s));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(esCAPED_JS_STRINGS.get(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(esCAPED_JS_STRINGS.get(s));	  String    cached    =    jsString(esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
338	[BUG]  [BUGGY]  String  cached  =  jsString(ESCAPED_JS_STRINGS.get(s),  s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(ESCAPED_JS_STRINGS.get(s),  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(ESCAPED_JS_STRINGS.get(s),  s);	  String    cached    =    jsString(esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
339	[BUG]  [BUGGY]  String  cached  =  s.get(jsStringESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(jsStringESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(jsStringESCAPED_JS_STRINGS);	  String    cached    =    jsStringESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
340	[BUG]  [BUGGY]  char  cached  =  jsStringESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  jsStringESCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsStringESCAPED_JS_STRINGS.get(s);	  String    cached    =    jsStringESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
341	[BUG]  [BUGGY]  String  cached  =  jsStringESCAPED_JS_STRINGS.get(s,  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringESCAPED_JS_STRINGS.get(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringESCAPED_JS_STRINGS.get(s,  0);	  String    cached    =    jsStringESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
342	[BUG]  [BUGGY]  String  cached  =  s.get(jsStringSeparator  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(jsStringSeparator  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(jsStringSeparator  +  1);	  String    cached    =    jsStringSeparator.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
343	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  2);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s  +  2);	  String    cached    =    jsStringSeparator.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
344	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  4);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  4);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s  +  4);	  String    cached    =    jsStringSeparator.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
345	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.getValue(s  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.getValue(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.getValue(s  +  1);	  String    cached    =    jsStringSeparator.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
346	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  3);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  3);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s  +  3);	  String    cached    =    jsStringSeparator.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
347	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(0,  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length());	  String    cached    =    s.substring(0,    s.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
348	[BUG]  [BUGGY]  String  cached  =  s,  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s,  s.substring(0,  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s,  s.substring(0,  s.length());	  String    cached    =    s.substring(0,    s.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
349	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(0,  s.length();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length();	  String    cached    =    s.substring(0,    s.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
350	[BUG]  [BUGGY]  Charsets  cached  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charsets  cached  =  s.substring(0,  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charsets  cached  =  s.substring(0,  s.length());	  String    cached    =    s.substring(0,    s.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
351	[BUG]  [BUGGY]  Character  cached  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  s.substring(0,  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  s.substring(0,  s.length());	  String    cached    =    s.substring(0,    s.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
352	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(lhsContext);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
353	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  s);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
354	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(s);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(s);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
355	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  context);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  context);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
356	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(null,  context);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(null,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(null,  context);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
357	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(null);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(null);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
358	[BUG]  [BUGGY]  Character  cached  =  cc.get(s);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  cc.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  cc.get(s);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
359	[BUG]  [BUGGY]  Character  cached  =  cc.getCurrentStructure().get(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  cc.getCurrentStructure().get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  cc.getCurrentStructure().get(s);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
360	[BUG]  [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  ESCAPED_JS_STRINGS.get(s  +  1);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
361	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length()).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(0,  s.length()).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length()).toLowerCase();	  String    cached    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
362	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(0,  s.length()  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length()  +  1);	  String    cached    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
363	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length()).trim();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(0,  s.length()).trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length()).trim();	  String    cached    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
364	[BUG]  [BUGGY]  String  cached  =  s.substring(1,  s.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(1,  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(1,  s.length());	  String    cached    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
365	[BUG]  [BUGGY]  Character  cached  =  JsStringUtil.jsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JsStringUtil.jsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JsStringUtil.jsString(s);	  char    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
366	[BUG]  [BUGGY]  Charset  cached  =  JsStringUtil.jsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  JsStringUtil.jsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  JsStringUtil.jsString(s);	  char    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
367	[BUG]  [BUGGY]  String  cad  =  JsStringUtil.jsString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cad  =  JsStringUtil.jsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cad  =  JsStringUtil.jsString(s);	  char    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
368	[BUG]  [BUGGY]  String  cached  =  jsString.get(s,  esCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.get(s,  esCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s,  esCAPED_JS_STRINGS);	  String    cached    =    esCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
369	[BUG]  [BUGGY]  char  cached  =  esCAPED_JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  esCAPED_JS_STRINGS.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  esCAPED_JS_STRINGS.get(s,  jsString);	  String    cached    =    esCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
370	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    esCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
371	[BUG]  [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  ESCAPED_JS_STRINGS.get(s,  s);	  String    cached    =    esCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
372	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  esCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  esCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  esCAPED_JS_STRINGS);	  String    cached    =    esCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
373	[BUG]  [BUGGY]  String  cached  =  jsString(s.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getQualifiedName());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getQualifiedName());	  String    cached    =    jsString(s.getString());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
374	[BUG]  [BUGGY]  String  cached  =  jsString(s.getText());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getText());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getText());	  String    cached    =    jsString(s.getString());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
375	[BUG]  [BUGGY]  String  cached  =  jsString(s.getKey());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getKey());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getKey());	  String    cached    =    jsString(s.getString());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
376	[BUG]  [BUGGY]  Character  cached  =  JSCharsetEncoder.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JSCharsetEncoder.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JSCharsetEncoder.generateJsString(s);	  char    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
377	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
378	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  this.consumer);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  this.consumer);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  s,  this.consumer);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
379	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  JS_STRINGS);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  	80	None	replace
380	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  cc);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  s,  cc);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  	80	None	replace
381	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  rhsContext);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  rhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  s,  rhsContext);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
382	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  this.user);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  this.user);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  s,  this.user);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
383	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  this.outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  this.outputCharsetEncoder);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  this.outputCharsetEncoder);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
384	[BUG]  [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
385	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  JSCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  JSCharsetEncoder);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(s,  JSCharsetEncoder);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
386	[BUG]  [BUGGY]  String  cached  =  JsString.valueOf(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsString.valueOf(s.toLowerCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString.valueOf(s.toLowerCase());	  String    cached    =    JsString.valueOf(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
387	[BUG]  [BUGGY]  String  cached  =  JsString.valueOf(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsString.valueOf(s.toCharArray());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString.valueOf(s.toCharArray());	  String    cached    =    JsString.valueOf(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
388	[BUG]  [BUGGY]  String  cached  =  JsString.valueOf(s.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsString.valueOf(s.toUpperCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString.valueOf(s.toUpperCase());	  String    cached    =    JsString.valueOf(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
389	[BUG]  [BUGGY]  String  cached  =  JsString.valueOf(s.trim());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsString.valueOf(s.trim());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString.valueOf(s.trim());	  String    cached    =    JsString.valueOf(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
390	[BUG]  [BUGGY]  String  cached  =  JsString.valueOf(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsString.valueOf(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString.valueOf(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsString.valueOf(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
391	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createCurrentContext(s);	  Context    cc    =    Context.createCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
392	[BUG]  [BUGGY]  Context  cc  =  Context.createContext();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext();	  Context    cc    =    Context.createCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
393	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createCurrentContext(context);	  Context    cc    =    Context.createCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
394	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(null);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createCurrentContext(null);	  Context    cc    =    Context.createCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
395	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(false);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createCurrentContext(false);	  Context    cc    =    Context.createCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
396	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
397	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext(context);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
398	[BUG]  [BUGGY]  Context  cc  =  Context.currentContext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.currentContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.currentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
399	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextInstance();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContextInstance();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContextInstance();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
400	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  context.getCurrentContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  context.getCurrentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
401	[BUG]  [BUGGY]  String  cached  =  s.getBoolean(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBoolean(JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBoolean(JS_STRINGS);	  String    cached    =    s.getBoolean(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
402	[BUG]  [BUGGY]  String  cached  =  s.getBoolean(SCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBoolean(SCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBoolean(SCAPED_JS_STRINGS);	  String    cached    =    s.getBoolean(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
403	[BUG]  [BUGGY]  String  cached  =  s.getBoolean(USER_JSC_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBoolean(USER_JSC_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBoolean(USER_JSC_STRINGS);	  String    cached    =    s.getBoolean(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
404	[BUG]  [BUGGY]  String  cached  =  s.getBoolean(JSC_JAVA_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBoolean(JSC_JAVA_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBoolean(JSC_JAVA_STRINGS);	  String    cached    =    s.getBoolean(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
405	[BUG]  [BUGGY]  String  cached  =  s.getBoolean(JSC_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBoolean(JSC_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBoolean(JSC_STRINGS);	  String    cached    =    s.getBoolean(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
406	[BUG]  [BUGGY]  char  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JS_STRINGS.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
407	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  context);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  context);	  String    cached    =    JS_STRINGS.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  	1	None	replace
408	[BUG]  [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  ESCAPED_JS_STRINGS.get(s,  JS_STRINGS);	  String    cached    =    JS_STRINGS.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
409	[BUG]  [BUGGY]  String  cached  =  cc.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.get(s);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
410	[BUG]  [BUGGY]  String  cached  =  cc.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
411	[BUG]  [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
412	[BUG]  [BUGGY]  Context  cc  =  ESCAPED_JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  ESCAPED_JS_STRINGS.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  ESCAPED_JS_STRINGS.get(s,  cc);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
413	[BUG]  [BUGGY]  String  cached  =  jsString(s,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s,  cc);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
414	[BUG]  [BUGGY]  Context  cc  =  ESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  ESCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  ESCAPED_JS_STRINGS.get(s);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
415	[BUG]  [BUGGY]  Context  cc  =  ESCAPED_JS_STRINGS.get(s,  context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  ESCAPED_JS_STRINGS.get(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  ESCAPED_JS_STRINGS.get(s,  context);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
416	[BUG]  [BUGGY]  char  cached  =  jsString(s.get(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  jsString(s.get(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsString(s.get(ESCAPED_JS_STRINGS);	  String    cached    =    jsString(s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
417	[BUG]  [BUGGY]  String  cached  =  jsString(s.getBoolean(ESCAPED_JS_STRINGS));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getBoolean(ESCAPED_JS_STRINGS));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getBoolean(ESCAPED_JS_STRINGS));	  String    cached    =    jsString(s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
418	[BUG]  [BUGGY]  String  cached  =  jsString(s.getBytes( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getBytes( "UTF-8 ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getBytes( "UTF-8 ");	  String    cached    =    jsString(s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
419	[BUG]  [BUGGY]  String  cached  =  jsString(ESCAPED_JS_STRINGS,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(ESCAPED_JS_STRINGS,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(ESCAPED_JS_STRINGS,  s);	  String    cached    =    jsString(s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
420	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(s,  context);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    context);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
421	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  this.context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  this.context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  this.context);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    context);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
422	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  context,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  context,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  context,  ESCAPED_JS_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    context);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
423	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  null);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  null);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    context);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
424	[BUG]  [BUGGY]  String  cached  =  jsString(s.toLowerCase()  +  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toLowerCase()  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toLowerCase()  +  1);	  String    cached    =    jsString(s.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
425	[BUG]  [BUGGY]  String  cached  =  jsString(s.toLowerCase()).trim();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toLowerCase()).trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toLowerCase()).trim();	  String    cached    =    jsString(s.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
426	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  consumer);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  consumer);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  consumer);	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
427	[BUG]  [BUGGY]  char  cached  =  JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JS_STRINGS.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JS_STRINGS.get(s,  cc);	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
428	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  conn);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  conn);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  conn);	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
429	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  this.context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  this.context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  this.context);	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
430	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(jsString);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
431	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJSString(s);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJSString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJSString(s);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(s);    	non-compiled	[CE]  	44	None	replace
432	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(s);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(s);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(s);    	non-compiled	[CE]  	44	None	replace
433	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addString(s);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addString(s);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(s);    	non-compiled	[CE]  	44	None	replace
434	[BUG]  [BUGGY]  Character  cached  =  jsString(s.toCharArray());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsString(s.toCharArray());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString(s.toCharArray());	  Character    cached    =    jsString(s);    	non-compiled	[CE]  	104	None	replace
435	[BUG]  [BUGGY]  Character  cached  =  jsString(s.toLowerCase());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsString(s.toLowerCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString(s.toLowerCase());	  Character    cached    =    jsString(s);    	non-compiled	[CE]  	104	None	replace
436	[BUG]  [BUGGY]  Character  cached  =  jsString(s.trim());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsString(s.trim());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString(s.trim());	  Character    cached    =    jsString(s);    	non-compiled	[CE]  	104	None	replace
437	[BUG]  [BUGGY]  Character  cached  =  jsString(s.toUpperCase());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsString(s.toUpperCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString(s.toUpperCase());	  Character    cached    =    jsString(s);    	non-compiled	[CE]  	104	None	replace
438	[BUG]  [BUGGY]  Character  cached  =  jsString(s.charAt(0));  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsString(s.charAt(0));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString(s.charAt(0));	  Character    cached    =    jsString(s);    	non-compiled	[CE]  	104	None	replace
439	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s,  ESCAPED_JS_STRINGS);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(context,  s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(context,    s);    	non-compiled	[CE]  	59	None	replace
440	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  JS_STRINGS);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(context,  JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(context,    s);    	non-compiled	[CE]  	59	None	replace
441	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  context);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  context);	  String    cached    =    JsStringUtilities.getString(context,    s);    	non-compiled	[CE]  	59	None	replace
442	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s,  this);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(context,  s,  this);	  String    cached    =    JsStringUtilities.getString(context,    s);    	non-compiled	[CE]  	59	None	replace
443	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s,  0);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(context,  s,  0);	  String    cached    =    JsStringUtilities.getString(context,    s);    	non-compiled	[CE]  	59	None	replace
444	[BUG]  [BUGGY]  String  cached  =  s.get(this.jsStringSep);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(this.jsStringSep);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(this.jsStringSep);	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  	81	None	replace
445	[BUG]  [BUGGY]  String  cached  =  _jsStringSep.get(s);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  _jsStringSep.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  _jsStringSep.get(s);	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  	81	None	replace
446	[BUG]  [BUGGY]  String  cached  =  this.jsStringSep.getValue(s);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  this.jsStringSep.getValue(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  this.jsStringSep.getValue(s);	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  	81	None	replace
447	[BUG]  [BUGGY]  char  cached  =  this.jsStringSep.get(s);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  this.jsStringSep.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  this.jsStringSep.get(s);	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  	81	None	replace
448	[BUG]  [BUGGY]  String  cached  =  this.jsStringSep.get(s  +  1);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  this.jsStringSep.get(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  this.jsStringSep.get(s  +  1);	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  	81	None	replace
449	[BUG]  [BUGGY]  String  cached  =(this.jsStringSeparator!=  null)?  this.jsStringSeparator.get(s):  s;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSeparator!=  null)?  this.jsStringSeparator.get(s):  s;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSeparator!=  null)?  this.jsStringSeparator.get(s):  s;	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  	54	None	replace
450	[BUG]  [BUGGY]  String  cached  =  this.jsStringSeparator.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  this.jsStringSeparator.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  this.jsStringSeparator.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
451	[BUG]  [BUGGY]  String  cached  =  this.jsStringSeparator.getValue(s);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  this.jsStringSeparator.getValue(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  this.jsStringSeparator.getValue(s);	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  	54	None	replace
452	[BUG]  [BUGGY]  String  cached  =  _jsStringSeparator.get(s);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  _jsStringSeparator.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  _jsStringSeparator.get(s);	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  	54	None	replace
453	[BUG]  [BUGGY]  String  cached  =  this.jsStringSeparator.get(s,  0);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  this.jsStringSeparator.get(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  this.jsStringSeparator.get(s,  0);	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  	54	None	replace
454	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s,  context);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(s,  context);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  	49	None	replace
455	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s,  this);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(s,  this);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  	49	None	replace
456	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(rhsContext);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(rhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(rhsContext);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  	49	None	replace
457	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(null,  s);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(null,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(null,  s);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  	49	None	replace
458	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(cc,  s);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(cc,  s);	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  	41	None	replace
459	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc,  ESCAPED_JS_STRINGS);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  cc,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  	41	None	replace
460	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc,  consumer);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc,  consumer);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  cc,  consumer);	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  	41	None	replace
461	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc).toLowerCase();  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  cc).toLowerCase();	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  	41	None	replace
462	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.trim();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.trim();	  String    cached    =    s.get(jsStringSeparator);    	non-compiled	[CE]  	51	None	replace
463	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.toLowerCase();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.toLowerCase();	  String    cached    =    s.get(jsStringSeparator);    	non-compiled	[CE]  	51	None	replace
464	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.getValue();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.getValue();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.getValue();	  String    cached    =    s.get(jsStringSeparator);    	non-compiled	[CE]  	51	None	replace
465	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.getString();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.getString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.getString();	  String    cached    =    s.get(jsStringSeparator);    	non-compiled	[CE]  	51	None	replace
466	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(lhsContext);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
467	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(context,  s);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
468	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(s);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
469	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(lhsContext,  context);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(lhsContext,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(lhsContext,  context);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
470	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  lhsContext);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(context,  lhsContext);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
471	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  STATEMENT);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  STATEMENT);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(context,  STATEMENT);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
472	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  -  2));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  -  2));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(0,  s.length()  -  2));	  String    cached    =    jsString(s.substring(0,    s.length()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
473	[BUG]  [BUGGY]  char  cached  =  jsString(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  jsString(s.substring(0,  s.length()));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsString(s.substring(0,  s.length()));	  String    cached    =    jsString(s.substring(0,    s.length()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
474	[BUG]  [BUGGY]  String  cached  =  jsString(s,  s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s,  s.substring(0,  s.length()));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s,  s.substring(0,  s.length()));	  String    cached    =    jsString(s.substring(0,    s.length()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
475	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(0,  s.length()));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length()));	  String    cached    =    jsString(s.substring(0,    s.length()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
476	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray(),  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray(),  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toCharArray(),  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
477	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray(),  0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray(),  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toCharArray(),  0);	  String    cached    =    JsStringUtilities.getString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
478	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray()  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray()  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toCharArray()  +  1);	  String    cached    =    JsStringUtilities.getString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
479	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.substring(1));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.substring(1));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.substring(1));	  String    cached    =    JsStringUtilities.getString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
480	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsStringEncoder.class.getName());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JsStringEncoder.class.getName());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsStringEncoder.class.getName());	  String    cached    =    JsStringUtilities.getString(JsStringEncoder.class.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
481	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsStringEncoder.class.getSimpleName(),  s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JsStringEncoder.class.getSimpleName(),  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsStringEncoder.class.getSimpleName(),  s);	  String    cached    =    JsStringUtilities.getString(JsStringEncoder.class.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
482	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JSStringEncoder.class.getSimpleName(),  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JSStringEncoder.class.getSimpleName(),  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JSStringEncoder.class.getSimpleName(),  s);	  String    cached    =    JsStringUtilities.getString(JsStringEncoder.class.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
483	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JSStringEncoder.class.getName());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JSStringEncoder.class.getName());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JSStringEncoder.class.getName());	  String    cached    =    JsStringUtilities.getString(JsStringEncoder.class.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
484	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JSStringEncoder.class.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JSStringEncoder.class.getSimpleName());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JSStringEncoder.class.getSimpleName());	  String    cached    =    JsStringUtilities.getString(JsStringEncoder.class.getSimpleName());    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
485	[BUG]  [BUGGY]  String  cached  =  s.get(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(s.toLowerCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(s.toLowerCase());	  String    cached    =    s.get(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
486	[BUG]  [BUGGY]  String  cached  =  s.getBooleanValue();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBooleanValue();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBooleanValue();	  String    cached    =    s.get(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
487	[BUG]  [BUGGY]  String  cached  =  s.getString( "JSC_STRING ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getString( "JSC_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getString( "JSC_STRING ");	  String    cached    =    s.get(   "JSC_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
488	[BUG]  [BUGGY]  String  cached  =  s.get( "JASC_STRING ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "JASC_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "JASC_STRING ");	  String    cached    =    s.get(   "JSC_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
489	[BUG]  [BUGGY]  String  cached  =  s.get( "JS_STRING ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "JS_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "JS_STRING ");	  String    cached    =    s.get(   "JSC_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
490	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "JSC_STRING ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( "JSC_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "JSC_STRING ");	  String    cached    =    s.get(   "JSC_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
491	[BUG]  [BUGGY]  String  cached  =  s.getValue( "JSC_STRING ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getValue( "JSC_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getValue( "JSC_STRING ");	  String    cached    =    s.get(   "JSC_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
492	[BUG]  [BUGGY]  String  cached  =  s.get( "JSC_STRING "  +  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "JSC_STRING "  +  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "JSC_STRING "  +  s);	  String    cached    =    s.get(   "JSC_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
493	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(jsString);	  String    cached    =    outputCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
494	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJSString(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJSString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJSString(s);	  String    cached    =    outputCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
495	[BUG]  [BUGGY]  String  cached  =  jsString(s.trim()).toLowerCase();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.trim()).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.trim()).toLowerCase();	  String    cached    =    jsString(s.trim());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
496	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(1));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.substring(1));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(1));	  String    cached    =    jsString(s.trim());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
497	[BUG]  [BUGGY]  char  cached  =  JS_STRINGS.get(s,  s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JS_STRINGS.get(s,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JS_STRINGS.get(s,  s);	  String    cached    =    JS_STRINGS.get(s,    s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
498	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.jsString(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtil.jsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.jsString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JSStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
499	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.josString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtil.josString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.josString(s);	  String    cached    =    JSStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
500	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.removeJsString(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtil.removeJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.removeJsString(s);	  String    cached    =    JSStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
501	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.stripJsString(s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtil.stripJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.stripJsString(s);	  String    cached    =    JSStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
502	[BUG]  [BUGGY]  String  cached  =  s.remove(jsStringSeparator);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.remove(jsStringSeparator);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.remove(jsStringSeparator);	  String    cached    =    jsStringSeparator.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
503	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.getCachedString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.getCachedString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.getCachedString(s);	  String    cached    =    jsStringSeparator.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
504	[BUG]  [BUGGY]  Character  cached  =  jsString.get(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsString.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString.get(s);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
505	[BUG]  [BUGGY]  Character  cached  =  JS_STRINGS.get(s,  s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JS_STRINGS.get(s,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JS_STRINGS.get(s,  s);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
506	[BUG]  [BUGGY]  Character  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
507	[BUG]  [BUGGY]  Character  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
508	[BUG]  [BUGGY]  Character  cached  =  JsString.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JsString.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JsString.get(s,  ESCAPED_JS_STRINGS);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
509	[BUG]  [BUGGY]  Character  cached  =  JSCharsetEncoder.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JSCharsetEncoder.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JSCharsetEncoder.get(s,  jsString);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
510	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS,  cc);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS,  cc);	  String    cached    =    JsStringUtil.jsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
511	[BUG]  [BUGGY]  String  cached  =  jsString(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.jsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
512	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  0);	  String    cached    =    JsStringUtil.jsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
513	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  DEFAULT_JSC_STRINGS);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  DEFAULT_JSC_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  DEFAULT_JSC_STRINGS);	  String    cached    =    JsStringUtil.jsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
514	[BUG]  [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JSCharsetEncoder.generateJsString(jsString);	  String    cached    =    JSCharsetEncoder.generateJsString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
515	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJAsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJAsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJAsString(s);	  String    cached    =    JSCharsetEncoder.generateJsString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
516	[BUG]  [BUGGY]  String  cached  =  jsString.generateJSCharsetEncoder();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.generateJSCharsetEncoder();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.generateJSCharsetEncoder();	  String    cached    =    JSCharsetEncoder.generateJsString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
517	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
518	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(s,  cc);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
519	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(s,  0);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
520	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(context,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(context,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(context,  s);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
521	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  this);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(s,  this);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
522	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(jsString);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(jsString);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
523	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  1);	  String    cached    =    JS_STRINGS.get(s,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
524	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  2);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  2);	  String    cached    =    JS_STRINGS.get(s,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
525	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  4);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  4);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  4);	  String    cached    =    JS_STRINGS.get(s,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
526	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  3);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  3);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  3);	  String    cached    =    JS_STRINGS.get(s,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
527	[BUG]  [BUGGY]  char  cached  =  JS_STRINGS.get(s,  0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JS_STRINGS.get(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JS_STRINGS.get(s,  0);	  String    cached    =    JS_STRINGS.get(s,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
528	[BUG]  [BUGGY]  String  cached  =  s.indexOf(jsStringSeparator);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.indexOf(jsStringSeparator);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.indexOf(jsStringSeparator);	  String    cached    =    jsStringSeparator.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
529	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.indexOf(s)+  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.indexOf(s)+  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.indexOf(s)+  1;	  String    cached    =    jsStringSeparator.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
530	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.indexOf(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.indexOf(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.indexOf(s);	  String    cached    =    jsStringSeparator.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
531	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.indexOf(s,  0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.indexOf(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.indexOf(s,  0);	  String    cached    =    jsStringSeparator.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
532	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.indexOf(s  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.indexOf(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.indexOf(s  +  1);	  String    cached    =    jsStringSeparator.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
533	[BUG]  [BUGGY]  String  cached  =  jsString(s.toUpperCase()  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toUpperCase()  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toUpperCase()  +  1);	  String    cached    =    jsString(s.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
534	[BUG]  [BUGGY]  String  cached  =  jsString(s.toUpperCase()  + ".js ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toUpperCase()  + ".js ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toUpperCase()  + ".js ");	  String    cached    =    jsString(s.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
535	[BUG]  [BUGGY]  String  cached  =  jsString(s.toUpperCase()  + ", ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toUpperCase()  + ", ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toUpperCase()  + ", ");	  String    cached    =    jsString(s.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
536	[BUG]  [BUGGY]  String  cached  =  jsString(s.toUpperCase()).trim();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toUpperCase()).trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toUpperCase()).trim();	  String    cached    =    jsString(s.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
537	[BUG]  [BUGGY]  String  cached  =  jsString(s.toUpperCase()  + ": ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.toUpperCase()  + ": ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toUpperCase()  + ": ");	  String    cached    =    jsString(s.toUpperCase());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
538	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(s,  context);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
539	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  this);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(s,  this);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
540	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(s,  ESCAPED_JS_STRINGS);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
541	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  rhsContext);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  rhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(s,  rhsContext);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
542	[BUG]  [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JS_STRINGS.get(s));	  String    cached    =    jsString(JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
543	[BUG]  [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s),  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s),  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JS_STRINGS.get(s),  ESCAPED_JS_STRINGS);	  String    cached    =    jsString(JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
544	[BUG]  [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    jsString(JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
545	[BUG]  [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s)+  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s)+  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JS_STRINGS.get(s)+  1);	  String    cached    =    jsString(JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
546	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
547	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.instance().get(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.instance().get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.instance().get(s);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
548	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.remove(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.remove(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.remove(s);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
549	[BUG]  [BUGGY]  Char  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);	  char    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
550	[BUG]  [BUGGY]  String  cached  =  s.get( "js ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "js ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "js ");	  String    cached    =    s.get(esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
551	[BUG]  [BUGGY]  String  cached  =  jsString(cc,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(cc,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(cc,  ESCAPED_JS_STRINGS);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
552	[BUG]  [BUGGY]  String  cached  =  jsString(cc.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(cc.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(cc.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
553	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.TYPE_INT_STRING);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.TYPE_INT_STRING);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsString.TYPE_INT_STRING);	  String    cached    =    JsStringUtilities.getString(JsString.class);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
554	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length())+  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(0,  s.length())+  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length())+  1;	  String    cached    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
555	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  JSCharsetEncoder.DEFAULT_CASE);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  JSCharsetEncoder.DEFAULT_CASE);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(s,  JSCharsetEncoder.DEFAULT_CASE);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
556	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  jsString,  context);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  jsString,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  jsString,  context);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
557	[BUG]  [BUGGY]  String  cached  =  s.get( "JSC_STRING ").toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "JSC_STRING ").toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "JSC_STRING ").toLowerCase();	  String    cached    =    s.get(   "JSC_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
558	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(esCAPED_JS_STRINGS,  s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(esCAPED_JS_STRINGS,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(esCAPED_JS_STRINGS,  s);	  String    cached    =    JsStringUtil.jsString(s,    esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
559	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  this.esCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  this.esCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  this.esCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.jsString(s,    esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
560	[BUG]  [BUGGY]  char  cached  =  s.get( "java.lang.String ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.get( "java.lang.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.get( "java.lang.String ");	  String    cached    =    s.get(   "java.lang.String   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
561	[BUG]  [BUGGY]  String  cached  =  s.get( ".java.lang.String ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( ".java.lang.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( ".java.lang.String ");	  String    cached    =    s.get(   "java.lang.String   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
562	[BUG]  [BUGGY]  String  cached  =  s  ==  null?  null  :  s.trim();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s  ==  null?  null  :  s.trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s  ==  null?  null  :  s.trim();	  String    cached    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
563	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(lhsContext);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
564	[BUG]  [BUGGY]  String  cached  =  jsStringSep.toCharArray();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.toCharArray();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.toCharArray();	  String    cached    =    s.get(jsStringSep);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
565	[BUG]  [BUGGY]  String  cached  =  jsStringSep.indexOf(':');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.indexOf(':');  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.indexOf(':');	  String    cached    =    s.get(jsStringSep);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
566	[BUG]  [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getQualifiedName();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s  ==  null?  null  :  s.getQualifiedName();	  String    cached    =    s.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
567	[BUG]  [BUGGY]  String  cached  =  s.getQualifiedName().trim();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getQualifiedName().trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getQualifiedName().trim();	  String    cached    =    s.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
568	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(1,  s.length()));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.substring(1,  s.length()));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(1,  s.length()));	  String    cached    =    jsString(s.substring(0,    s.length()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
569	[BUG]  [BUGGY]  String  cached  =  JSString.valueOf(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSString.valueOf(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSString.valueOf(s);	  String    cached    =    JsString.valueOf(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
570	[BUG]  [BUGGY]  String  cached  =  JsString.valueOf(s).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsString.valueOf(s).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString.valueOf(s).toLowerCase();	  String    cached    =    JsString.valueOf(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
571	[BUG]  [BUGGY]  String  cached  =  JsString.valueOf(cache);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsString.valueOf(cache);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString.valueOf(cache);	  String    cached    =    JsString.valueOf(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
572	[BUG]  [BUGGY]  char  cached  =  JsString.valueOf(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JsString.valueOf(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsString.valueOf(s);	  String    cached    =    JsString.valueOf(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
573	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.contains(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.contains(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.contains(s);	  String    cached    =    JS_STRINGS.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
574	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.concat(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.concat(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.concat(s);	  String    cached    =    JS_STRINGS.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
575	[BUG]  [BUGGY]  String  cached  =  jsString.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.get(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s  +  1);	  String    cached    =    jsString.get(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
576	[BUG]  [BUGGY]  String  cached  =(this.jsStringSep!=  null)?  this.jsStringSep.get(s):  s;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSep!=  null)?  this.jsStringSep.get(s):  s;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSep!=  null)?  this.jsStringSep.get(s):  s;	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
577	[BUG]  [BUGGY]  String  cached  =(this.jsStringSep!=  null)?  this.jsStringSep.get(s):  _jsStringSep.get(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSep!=  null)?  this.jsStringSep.get(s):  _jsStringSep.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSep!=  null)?  this.jsStringSep.get(s):  _jsStringSep.get(s);	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
578	[BUG]  [BUGGY]  String  cached  =(this.jsStringSep!=  null)?  this.jsStringSep.get(s):  jsStringSep.get(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSep!=  null)?  this.jsStringSep.get(s):  jsStringSep.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSep!=  null)?  this.jsStringSep.get(s):  jsStringSep.get(s);	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
579	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  0L);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  0L);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  0L);	  String    cached    =    JS_STRINGS.get(s,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
580	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  16);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  16);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  16);	  String    cached    =    JS_STRINGS.get(s,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
581	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(null);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(null);	  String    cached    =    JS_STRINGS.get(jsString);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
582	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(outputCharsetEncoder);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(outputCharsetEncoder);	  CharsetEncoder    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
583	[BUG]  [BUGGY]  CharsetEncoder  cached  =  outputCharsetEncoder.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  outputCharsetEncoder.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  outputCharsetEncoder.generateJsString(s);	  CharsetEncoder    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
584	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(null);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(null);	  CharsetEncoder    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
585	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(null,  s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(null,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(null,  s);	  CharsetEncoder    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
586	[BUG]  [BUGGY]  String  cached  =  jsString(s.getBooleanValue(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getBooleanValue(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getBooleanValue(ESCAPED_JS_STRINGS);	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
587	[BUG]  [BUGGY]  String  cached  =  jsString(s.getBooleanValue(ESCAPED_JS_STRINGS));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getBooleanValue(ESCAPED_JS_STRINGS));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getBooleanValue(ESCAPED_JS_STRINGS));	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
588	[BUG]  [BUGGY]  String  cached  =  jsString(s.getBytes( "UTF-8 "));  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getBytes( "UTF-8 "));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getBytes( "UTF-8 "));	  String    cached    =    jsString(s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  	109	None	replace
589	[BUG]  [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  ESCAPED_JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JS_STRINGS.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
590	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  DEFAULT_JSC_STRING);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  DEFAULT_JSC_STRING);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  DEFAULT_JSC_STRING);	  String    cached    =    JS_STRINGS.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
591	[BUG]  [BUGGY]  char  cached  =  s.get( "java.sql.SQL_STRING ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.get( "java.sql.SQL_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.get( "java.sql.SQL_STRING ");	  String    cached    =    s.get(   "java.sql.SQL_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
592	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.stringValue(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtil.stringValue(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.stringValue(s);	  String    cached    =    JSStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
593	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.getString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtil.getString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.getString(s);	  String    cached    =    JSStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
594	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  context);	  Context    rhsContext    =    Context.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
595	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(-1,  -1,  false);	  Context    rhsContext    =    Context.createChildObjectContext(-1,    -1);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
596	[BUG]  [BUGGY]  String  cached  =  jsStringSep.getValue(s  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.getValue(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.getValue(s  +  1);	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
597	[BUG]  [BUGGY]  String  cached  =  jsStringSep.getKey(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.getKey(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.getKey(s);	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
598	[BUG]  [BUGGY]  String  cached  =  jsStringSep.getValue(s,  true);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.getValue(s,  true);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.getValue(s,  true);	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
599	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(consume,  cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(consume,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(consume,  cc);	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
600	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc)+  1;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc)+  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  cc)+  1;	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
601	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(null,  cc);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(null,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(null,  cc);	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
602	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(context,  cc);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(context,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(context,  cc);	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
603	[BUG]  [BUGGY]  String  cached  =  s.getBoolean( "java.lang.String ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBoolean( "java.lang.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBoolean( "java.lang.String ");	  String    cached    =    s.getBoolean(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
604	[BUG]  [BUGGY]  String  cached  =  s.getBoolean( "java.lang.Object ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBoolean( "java.lang.Object ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBoolean( "java.lang.Object ");	  String    cached    =    s.getBoolean(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
605	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  this.cached  =  cc.addJsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext();  this.cached  =  cc.addJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext();  this.cached  =  cc.addJsString(s);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
606	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(consume,  cc);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(consume,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(consume,  cc);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
607	[BUG]  [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(cc,  s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JSCharsetEncoder.generateJsString(cc,  s);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
608	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(jsString,  cc);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(jsString,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(jsString,  cc);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
609	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  5);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  5);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s  +  5);	  String    cached    =    JS_STRINGS.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
610	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(context,  false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(context,  false);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
611	[BUG]  [BUGGY]  String  cached  =  jsString(JSStringSeparator.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JSStringSeparator.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JSStringSeparator.get(s);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
612	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.get(s,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.get(s,  true);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.get(s,  true);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
613	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.get(s,  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.get(s,  false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.get(s,  false);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
614	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.get(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.get(s  +  1);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
615	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.get(s,  cc);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
616	[BUG]  [BUGGY]  String  cached  =  JSStringESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringESCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringESCAPED_JS_STRINGS.get(s);	  String    cached    =    jsStringESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
617	[BUG]  [BUGGY]  String  cached  =  jsStringEscapes.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringEscapes.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringEscapes.get(s);	  String    cached    =    jsStringESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
618	[BUG]  [BUGGY]  String  cached  =  jsStringEXPR_STRINGS.get(s);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringEXPR_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringEXPR_STRINGS.get(s);	  String    cached    =    jsStringESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	85	None	replace
619	[BUG]  [BUGGY]  String  cached  =  JSString(esCAPED_JS_STRINGS.get(s);  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSString(esCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSString(esCAPED_JS_STRINGS.get(s);	  String    cached    =    jsString(esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	88	None	replace
620	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(compiler,  s);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(compiler,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(compiler,  s);	  String    cached    =    JsStringUtilities.getString(context,    s);    	non-compiled	[CE]  	59	None	replace
621	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  jsString);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(context,  jsString);	  String    cached    =    JsStringUtilities.getString(context,    s);    	non-compiled	[CE]  	59	None	replace
622	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(consume,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(consume,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(consume,  s);	  String    cached    =    JsStringUtilities.getString(context,    s);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
623	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s  +  1);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(context,  s  +  1);	  String    cached    =    JsStringUtilities.getString(context,    s);    	non-compiled	[CE]  	59	None	replace
624	[BUG]  [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(jsString,  s);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(jsString,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(jsString,  s);	  CharsetEncoder    outputCharsetEncoder    =    cc.generateJsString(s);    	non-compiled	[CE]  	95	None	replace
625	[BUG]  [BUGGY]  CharsetEncoder  s  =  cc.generateJsString(s);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  s  =  cc.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  s  =  cc.generateJsString(s);	  CharsetEncoder    outputCharsetEncoder    =    cc.generateJsString(s);    	non-compiled	[CE]  	95	None	replace
626	[BUG]  [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(JS_STRINGS);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(JS_STRINGS);	  CharsetEncoder    outputCharsetEncoder    =    cc.generateJsString(s);    	non-compiled	[CE]  	95	None	replace
627	[BUG]  [BUGGY]  String  cached  =  JsStringSep.get(jsString);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringSep.get(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringSep.get(jsString);	  String    cached    =    JsStringSep.get(s);    	non-compiled	[CE]  	17	None	replace
628	[BUG]  [BUGGY]  String  cached  =  JsStringSep.get(JSStringEncoder.ENCODING_JSC_STRING);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringSep.get(JSStringEncoder.ENCODING_JSC_STRING);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringSep.get(JSStringEncoder.ENCODING_JSC_STRING);	  String    cached    =    JsStringSep.get(s);    	non-compiled	[CE]  	17	None	replace
629	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(0,  s.length()  -  4);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length()  -  4);	  String    cached    =    s.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
630	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.valueOf(s));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.valueOf(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsString.valueOf(s));	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  	79	None	replace
631	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_CASED);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_CASED);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JS_STRING_CASED);	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
632	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(null,  s);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
633	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(rhsContext);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(rhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(rhsContext);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
634	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(s,  0);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
635	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JSC_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JSC_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JSC_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
636	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JSC_STRING);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JSC_STRING);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  DEFAULT_JSC_STRING);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
637	[BUG]  [BUGGY]  CharCached  cached  =  JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharCached  cached  =  JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharCached  cached  =  JS_STRINGS.get(s);	  char    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
638	[BUG]  [BUGGY]  char  cached  =  JsStringUtilities.getString(JsString.class);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JsStringUtilities.getString(JsString.class);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsStringUtilities.getString(JsString.class);	  char    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
639	[BUG]  [BUGGY]  Char  cached  =  JsStringUtilities.getString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  JsStringUtilities.getString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  JsStringUtilities.getString(s);	  char    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
640	[BUG]  [BUGGY]  char  cached  =  JsStringUtilities.getString(jsString);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  JsStringUtilities.getString(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsStringUtilities.getString(jsString);	  char    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
641	[BUG]  [BUGGY]  String  cached  =  jsString(s.trim()).trim();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.trim()).trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.trim()).trim();	  String    cached    =    jsString(s.trim());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
642	[BUG]  [BUGGY]  String  cached  =  s.substring0(0,  s.length());  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring0(0,  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring0(0,  s.length());	  String    cached    =    s.substring(0,    s.length()    -    2);    	non-compiled	[CE]  	113	None	replace
643	[BUG]  [BUGGY]  Charset  cached  =  jsString(ESCAPED_JS_STRINGS.get(s);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  jsString(ESCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  jsString(ESCAPED_JS_STRINGS.get(s);	  Charset    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	30	None	replace
644	[BUG]  [BUGGY]  Charset  cached  =  jsStringSeparator.get(s);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  jsStringSeparator.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  jsStringSeparator.get(s);	  Charset    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	30	None	replace
645	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s).toLowerCase(context);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s).toLowerCase(context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s).toLowerCase(context);	  String    cached    =    esCAPED_JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  	72	None	replace
646	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.substring(0,  s.length()));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.substring(0,  s.length()));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.substring(0,  s.length()));	  String    cached    =    JsStringUtilities.getString(s.toLowerCase());    	non-compiled	[CE]  	60	None	replace
647	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  encoding);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  encoding);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(s,  encoding);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
648	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  _config);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  _config);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(s,  _config);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
649	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s).toLowerCase(lhsContext);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s).toLowerCase(lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s).toLowerCase(lhsContext);	  String    cached    =    JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
650	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s).toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s).toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s).toLowerCase(Locale.ENGLISH);	  String    cached    =    JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
651	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(jsString,  context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(jsString,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(jsString,  context);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    context);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
652	[BUG]  [BUGGY]  String  cached  =  jsString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString();	  String    cached    =    s.toString();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
653	[BUG]  [BUGGY]  String  cached  =  s.getBytes( ".UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( ".UTF-8 ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( ".UTF-8 ");	  String    cached    =    s.getBytes(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
654	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "UTF-16 ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( "UTF-16 ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "UTF-16 ");	  String    cached    =    s.getBytes(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
655	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(context,  JS_STRINGS);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
656	[BUG]  [BUGGY]  String  cached  =  JSStringSep.get(jsString);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.get(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.get(jsString);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
657	[BUG]  [BUGGY]  String  cached  =  JSStringSep.get(JsString.class);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.get(JsString.class);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.get(JsString.class);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
658	[BUG]  [BUGGY]  String  cached  =  JSStringSep.get(s,  this);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.get(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.get(s,  this);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
659	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  this);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  this);	  String    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
660	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  jsString  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  jsString  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  jsString  +  1);	  String    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
661	[BUG]  [BUGGY]  Context  rhsContext  =  getContext(true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getContext(true);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContext(true);	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
662	[BUG]  [BUGGY]  Context  rhsContext  =  getContext(context);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getContext(context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContext(context);	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
663	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForCodeGenerator();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getContextForCodeGenerator();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContextForCodeGenerator();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
664	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForJsContext();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getContextForJsContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContextForJsContext();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
665	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder,  context);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder,  context);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
666	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder,  ESCAPED_JS_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
667	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder,  this);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder,  this);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
668	[BUG]  [BUGGY]  String  cached  =  jsStringSep.indexOf('n');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.indexOf('n');  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.indexOf('n');	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
669	[BUG]  [BUGGY]  String  cached  =  jsStringSep.indexOf(')');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.indexOf(')');  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.indexOf(')');	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
670	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s,  this  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s,  this  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s,  this  +  1);	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
671	[BUG]  [BUGGY]  Character  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
672	[BUG]  [BUGGY]  Character  cached  =  jsStringESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsStringESCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsStringESCAPED_JS_STRINGS.get(s);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
673	[BUG]  [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
674	[BUG]  [BUGGY]  String  cached  =  s.get(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(s.toCharArray());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(s.toCharArray());	  String    cached    =    s.get(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
675	[BUG]  [BUGGY]  char  cached  =  s.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.get(s);	  String    cached    =    s.get(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
676	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.toJsString(null);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.toJsString(null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.toJsString(null);	  String    cached    =    JsStringUtil.toJsString(s);    	non-compiled	[CE]  	83	None	replace
677	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s  *  1);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s  *  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s  *  1);	  String    cached    =    jsStringSeparator.get(s    +    1);    	non-compiled	[CE]  	53	None	replace
678	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  encoding);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  encoding);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  encoding);	  String    cached    =    JS_STRINGS.get(s,    s);    	non-compiled	[CE]  	11	None	replace
679	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  t);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  t);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  t);	  String    cached    =    JS_STRINGS.get(s,    s);    	non-compiled	[CE]  	11	None	replace
680	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getCachedString(cache);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.getCachedString(cache);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getCachedString(cache);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  	84	None	replace
681	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getTextCachedString(s);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.getTextCachedString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getTextCachedString(s);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  	84	None	replace
682	[BUG]  [BUGGY]  String  cached  =  s  ==  null?  null  :  s.toLowerCase();  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s  ==  null?  null  :  s.toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s  ==  null?  null  :  s.toLowerCase();	  String    cached    =    s.toLowerCase();    	non-compiled	[CE]  	24	None	replace
683	[BUG]  [BUGGY]  Character  cached  =  jsStringSeparator.get(s);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsStringSeparator.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsStringSeparator.get(s);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
684	[BUG]  [BUGGY]  Character  cached  =  JsStringUtilities.get(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JsStringUtilities.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JsStringUtilities.get(s);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
685	[BUG]  [BUGGY]  Character  cached  =  jsStringSep.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsStringSep.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsStringSep.get(s);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
686	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(true);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createCurrentContext(true);	  Context    cc    =    Context.createCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
687	[BUG]  [BUGGY]  char  cached  =  outputCharsetEncoder.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  outputCharsetEncoder.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  outputCharsetEncoder.generateJsString(s);	  char    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
688	[BUG]  [BUGGY]  Charset  cached  =  JSCharsetEncoder.generateJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  JSCharsetEncoder.generateJsString(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  JSCharsetEncoder.generateJsString(jsString);	  char    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
689	[BUG]  [BUGGY]  Charset  cached  =  outputCharsetEncoder.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  outputCharsetEncoder.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  outputCharsetEncoder.generateJsString(s);	  char    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
690	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(outputCharsetEncoder);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(outputCharsetEncoder);	  String    cached    =    JSCharsetEncoder.generateJsString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
691	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(jsString,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
692	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.getValue(s,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.getValue(s,  true);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.getValue(s,  true);	  String    cached    =    jsStringSeparator.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
693	[BUG]  [BUGGY]  String  cached  =  jsString.get(s,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.get(s,  0);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s,  0);	  String    cached    =    jsString.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
694	[BUG]  [BUGGY]  String  cached  =  jsString.get(s,  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.get(s,  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s,  1);	  String    cached    =    jsString.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
695	[BUG]  [BUGGY]  String  cached  =  jsString.get(s,  DEFAULT_JSC_STRING);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.get(s,  DEFAULT_JSC_STRING);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s,  DEFAULT_JSC_STRING);	  String    cached    =    jsString.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
696	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.convert(s,  this);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.convert(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.convert(s,  this);	  String    cached    =    jsStringSeparator.convert(s);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
697	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.convert(s,  conn);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.convert(s,  conn);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.convert(s,  conn);	  String    cached    =    jsStringSeparator.convert(s);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
698	[BUG]  [BUGGY]  String  cached  =  jsString(outputCharsetEncoder.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(outputCharsetEncoder.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(outputCharsetEncoder.generateJsString(s);	  String    cached    =    outputCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
699	[BUG]  [BUGGY]  String  cached  =  jsString(outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(outputCharsetEncoder);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(outputCharsetEncoder);	  String    cached    =    outputCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
700	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(jsString,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(jsString,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(jsString,  s);	  String    cached    =    outputCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
701	[BUG]  [BUGGY]  String  cached  =  jsString(outputCharsetEncoder.generateJsString(s));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(outputCharsetEncoder.generateJsString(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(outputCharsetEncoder.generateJsString(s));	  String    cached    =    outputCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
702	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(null);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext(null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext(null);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
703	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(rhsContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext(rhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext(rhsContext);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
704	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
705	[BUG]  [BUGGY]  String  cached  =(this.jsStringSeparator!=  null?  this.jsStringSeparator.get(s):  s;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSeparator!=  null?  this.jsStringSeparator.get(s):  s;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSeparator!=  null?  this.jsStringSeparator.get(s):  s;	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
706	[BUG]  [BUGGY]  String  cached  =(this.jsStringSeparator  ==  null)?  this.jsStringSeparator.get(s):  s;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSeparator  ==  null)?  this.jsStringSeparator.get(s):  s;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSeparator  ==  null)?  this.jsStringSeparator.get(s):  s;	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
707	[BUG]  [BUGGY]  String  cached  =(this.jsStringSeparator!=  null)?  this.jsStringSeparator.get(s):  _jsStringSeparator.get(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSeparator!=  null)?  this.jsStringSeparator.get(s):  _jsStringSeparator.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSeparator!=  null)?  this.jsStringSeparator.get(s):  _jsStringSeparator.get(s);	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
708	[BUG]  [BUGGY]  Char  cached  =  JsStringUtil.jsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  JsStringUtil.jsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  JsStringUtil.jsString(s);	  char    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
709	[BUG]  [BUGGY]  JS_STRINGS.put(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  ESCAPED_JS_STRINGS);	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
710	[BUG]  [BUGGY]  JS_STRINGS.put(s,  JSON_STRING_EXPR);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  JSON_STRING_EXPR);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  JSON_STRING_EXPR);	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
711	[BUG]  [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JS_STRINGS.get(s,  cc);	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
712	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  cc  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  cc  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  cc  +  1);	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
713	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(cc,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(cc,  s);	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
714	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  cc)+  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  cc)+  1;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  cc)+  1;	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
715	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
716	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  jsString);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  jsString);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
717	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s  +  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  s  +  1);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
718	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  this.consume);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s,  this.consume);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  s,  this.consume);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
719	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  jsStringSep);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  jsStringSep);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  jsStringSep);	  String    cached    =    JsStringUtilities.getString(this.context,    s);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
720	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(null);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(null);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
721	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  this);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(context,  this);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
722	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.indexOf(':');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.indexOf(':');  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.indexOf(':');	  String    cached    =    jsStringSeparator.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
723	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.indexOf(')');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.indexOf(')');  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.indexOf(')');	  String    cached    =    jsStringSeparator.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
724	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(ESCAPED_JS_STRINGS,  s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(ESCAPED_JS_STRINGS,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(ESCAPED_JS_STRINGS,  s);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
725	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(SCAPED_JS_STRINGS,  s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(SCAPED_JS_STRINGS,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(SCAPED_JS_STRINGS,  s);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
726	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  16);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(s,  16);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  16);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
727	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(SCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(SCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(SCAPED_JS_STRINGS);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
728	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(ESCAPED_JS_STRINGS);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
729	[BUG]  [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(cc);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JS_STRINGS.get(cc);	  String    cached    =    JS_STRINGS.get(cc);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
730	[BUG]  [BUGGY]  Char  cached  =  JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  JS_STRINGS.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  JS_STRINGS.get(s,  jsString);	  char    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
731	[BUG]  [BUGGY]  char  cached  =  jsString.get(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  jsString.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsString.get(s);	  char    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
732	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(consume,  cc,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(consume,  cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(consume,  cc,  s);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
733	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(lhsContext,  s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(lhsContext,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(lhsContext,  s);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
734	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s  +  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(cc,  s  +  1);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
735	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(consumer,  s);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(consumer,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(consumer,  s);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
736	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.charAt(0));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.charAt(0));	  String    cached    =    JsStringUtilities.getString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
737	[BUG]  [BUGGY]  Character  cached  =  jsString(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString(s,  ESCAPED_JS_STRINGS);	  Character    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
738	[BUG]  [BUGGY]  Character  cached  =  JsStringUtilities.jsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  JsStringUtilities.jsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  JsStringUtilities.jsString(s);	  Character    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
739	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(Character.toLowerCase(s));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toLowerCase(Character.toLowerCase(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(Character.toLowerCase(s));	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
740	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(Character.toUpperCase(s));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toLowerCase(Character.toUpperCase(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(Character.toUpperCase(s));	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
741	[BUG]  [BUGGY]  Object  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString  +  1);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
742	[BUG]  [BUGGY]  Object  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
743	[BUG]  [BUGGY]  Object  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Object  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);	  Object    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
744	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(cached);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(cached);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(cached);	  String    cached    =    JsStringUtilities.getString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
745	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS  +  1);	  String    cached    =    JsStringUtil.jsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
746	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  DEFAULT_JSC_STRING);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  DEFAULT_JSC_STRING);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  DEFAULT_JSC_STRING);	  String    cached    =    JsStringUtil.jsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
747	[BUG]  [BUGGY]  String  cached  =  jsStringSep.contains(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.contains(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.contains(s);	  String    cached    =    jsStringSep.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
748	[BUG]  [BUGGY]  String  cached  =  jsStringSep.containsKey(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.containsKey(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.containsKey(s);	  String    cached    =    jsStringSep.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
749	[BUG]  [BUGGY]  char  cached  =  s.get( "java.sql.String ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.get( "java.sql.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.get( "java.sql.String ");	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
750	[BUG]  [BUGGY]  char  cached  =  s.get( "JSC_STRING ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.get( "JSC_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.get( "JSC_STRING ");	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
751	[BUG]  [BUGGY]  char  cached  =  s.get( "java.sql.SQL_JSC_STRING ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.get( "java.sql.SQL_JSC_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.get( "java.sql.SQL_JSC_STRING ");	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
752	[BUG]  [BUGGY]  char  cached  =  s.get( "JsString ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.get( "JsString ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.get( "JsString ");	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
753	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(null);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContext(null);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
754	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeGenerator();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeGenerator();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContextForCodeGenerator();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
755	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
756	[BUG]  [BUGGY]  Context  cc  =  getContextForCodeGenerator();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  getContextForCodeGenerator();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getContextForCodeGenerator();	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
757	[BUG]  [BUGGY]  Context  cc  =  getContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  getContextForCodeInsertion(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getContextForCodeInsertion(s);	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
758	[BUG]  [BUGGY]  Context  cc  =  getContext(context);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  getContext(context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getContext(context);	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
759	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  lhsContext);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  lhsContext);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
760	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  JS_STRINGS);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
761	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(context,  cc);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
762	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString,  cc);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(jsString,  cc);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
763	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(consume,  cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(consume,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(consume,  cc);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
764	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.class,  cc);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.class,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsString.class,  cc);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
765	[BUG]  [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s).toLowerCase());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s).toLowerCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JS_STRINGS.get(s).toLowerCase());	  String    cached    =    jsString(JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
766	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(rhsContext);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(rhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createCurrentContext(rhsContext);	  Context    cc    =    Context.createCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
767	[BUG]  [BUGGY]  String  cached  =  jsStringSep.remove(s  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.remove(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.remove(s  +  1);	  String    cached    =    jsStringSep.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
768	[BUG]  [BUGGY]  String  cached  =  JsStringSep.convert(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringSep.convert(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringSep.convert(s);	  String    cached    =    JsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
769	[BUG]  [BUGGY]  String  cached  =  JsStringSep.jsString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringSep.jsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringSep.jsString(s);	  String    cached    =    JsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
770	[BUG]  [BUGGY]  String  cached  =  s.get( "java.sql.SQL_STRING ").trim();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "java.sql.SQL_STRING ").trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.sql.SQL_STRING ").trim();	  String    cached    =    s.get(   "java.sql.SQL_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
771	[BUG]  [BUGGY]  String  cached  =  s.get( ",java.sql.SQL_STRING ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( ",java.sql.SQL_STRING ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( ",java.sql.SQL_STRING ");	  String    cached    =    s.get(   "java.sql.SQL_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
772	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  encoding);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  encoding);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  encoding);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
773	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  16);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  16);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  16);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
774	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  JAVA_STRING_ELSE);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  JAVA_STRING_ELSE);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  JAVA_STRING_ELSE);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
775	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  JAVA_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  JAVA_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  JAVA_JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
776	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.containsKey(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.containsKey(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.containsKey(s);	  String    cached    =    JS_STRINGS.get(jsString);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
777	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.convert(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.convert(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.convert(s);	  String    cached    =    JS_STRINGS.get(jsString);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
778	[BUG]  [BUGGY]  Context  rhsContext  =  Context.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.currentTimeMillis();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.currentTimeMillis();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
779	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getContextForCodeInsertion(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContextForCodeInsertion(s);	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
780	[BUG]  [BUGGY]  Context  rhsContext  =  getContext().getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getContext().getCurrentContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContext().getCurrentContext();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
781	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForCodec();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  getContextForCodec();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContextForCodec();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
782	[BUG]  [BUGGY]  Character  cached  =  jsString(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  jsString(s.substring(0,  s.length()  -  1));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString(s.substring(0,  s.length()  -  1));	  Character    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
783	[BUG]  [BUGGY]  String  cached  =  cs.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cs.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cs.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
784	[BUG]  [BUGGY]  String  cached  =  cc.get(s,  ECAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.get(s,  ECAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.get(s,  ECAPED_JS_STRINGS);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
785	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR).toLowerCase();	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
786	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.convert(JS_STRING_SEPARATOR,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.convert(JS_STRING_SEPARATOR,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.convert(JS_STRING_SEPARATOR,  s);	  String    cached    =    JsStringUtilities.getString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
787	[BUG]  [BUGGY]  String  cached  =  cc.getCurrentName();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.getCurrentName();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.getCurrentName();	  String    cached    =    JS_STRINGS.get(cc);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
788	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.convert(cc);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.convert(cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.convert(cc);	  String    cached    =    JS_STRINGS.get(cc);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
789	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.get(s,  jsString);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
790	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSeparator.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.generateJsString(s);	  String    cached    =    JSStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
791	[BUG]  [BUGGY]  String  cached  =  s.trim().toLowerCase().getBoolean(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.trim().toLowerCase().getBoolean(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.trim().toLowerCase().getBoolean(ESCAPED_JS_STRINGS);	  String    cached    =    s.getBoolean(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
792	[BUG]  [BUGGY]  String  cached  =  s.toLowerCase().getBoolean(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.toLowerCase().getBoolean(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.toLowerCase().getBoolean(ESCAPED_JS_STRINGS);	  String    cached    =    s.getBoolean(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
793	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.findCachedString(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.findCachedString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.findCachedString(s);	  String    cached    =    JsStringUtilities.getString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
794	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.convert(jsString,  s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.convert(jsString,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.convert(jsString,  s);	  String    cached    =    JsStringUtilities.getString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
795	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.convert(jsString);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.convert(jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.convert(jsString);	  String    cached    =    JsStringUtilities.getString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
796	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(js,  s);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(js,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(js,  s);	  String    cached    =    JsStringUtilities.getString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
797	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  charEncoding);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  charEncoding);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  charEncoding);	  String    cached    =    JS_STRINGS.get(s,    s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
798	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  charset);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  charset);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  charset);	  String    cached    =    JS_STRINGS.get(s,    s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
799	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  charAt(s));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  charAt(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  charAt(s));	  String    cached    =    JS_STRINGS.get(s,    s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
800	[BUG]  [BUGGY]  String  cached  =  jsStringSep.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.toUpperCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.toUpperCase();	  String    cached    =    s.get(jsStringSep);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
801	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.toUpperCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.toUpperCase();	  String    cached    =    s.get(jsStringSeparator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
802	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.toLowerCase(lhsContext);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.toLowerCase(lhsContext);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.toLowerCase(lhsContext);	  String    cached    =    s.get(jsStringSeparator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
803	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.toCharArray();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.toCharArray();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.toCharArray();	  String    cached    =    s.get(jsStringSeparator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
804	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  this.cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  this.cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  this.cc);	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
805	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc,  encoding);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc,  encoding);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  cc,  encoding);	  String    cached    =    JsStringUtil.jsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
806	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  jsString);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
807	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  4);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStrings.get(s,  4);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  4);	  String    cached    =    JSStrings.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
808	[BUG]  [BUGGY]  String  cached  =  jsString.get(s,  16);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.get(s,  16);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s,  16);	  String    cached    =    jsString.get(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
809	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateString(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateString(s);	  String    cached    =    JSCharsetEncoder.generateJsString(jsString);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
810	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray(),  s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray(),  s.toCharArray());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toCharArray(),  s.toCharArray());	  String    cached    =    JsStringUtilities.getString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
811	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toPath());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toPath());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toPath());	  String    cached    =    JsStringUtilities.getString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
812	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray(),  s.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray(),  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toCharArray(),  s.length());	  String    cached    =    JsStringUtilities.getString(s.toCharArray());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
813	[BUG]  [BUGGY]  String  cached  =  s.get(s.toUpperCase());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get(s.toUpperCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(s.toUpperCase());	  String    cached    =    s.get(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
814	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.intern(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.intern(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.intern(s);	  String    cached    =    JS_STRINGS.remove(s);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
815	[BUG]  [BUGGY]  String  cached  =  s.indexOf('.');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.indexOf('.');  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.indexOf('.');	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
816	[BUG]  [BUGGY]  String  cached  =  jsStringSep.indexOf(s).trim();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.indexOf(s).trim();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.indexOf(s).trim();	  String    cached    =    jsStringSep.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
817	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  true);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  true);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(cc,  s,  true);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
818	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  false);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s,  false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(cc,  s,  false);	  String    cached    =    JsStringUtilities.getString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
819	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s,  cc);	  String    cached    =    esCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
820	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  esCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  esCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s,  esCAPED_JS_STRINGS);	  String    cached    =    esCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
821	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  jsString  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  jsString  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s,  jsString  +  1);	  String    cached    =    esCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
822	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  this);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  this);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  this);	  String    cached    =    JsStringUtil.jsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
823	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  null);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  null);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  null);	  String    cached    =    JsStringUtil.jsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
824	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  4);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  4);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  4);	  String    cached    =    JsStringUtil.jsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
825	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  jsString);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  jsString);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
826	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  STATEMENT);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  STATEMENT);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  STATEMENT);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
827	[BUG]  [BUGGY]  String  cached  =  s.get( ",java.sql.String ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( ",java.sql.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( ",java.sql.String ");	  String    cached    =    s.get(   "java.sql.String   ");    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
828	[BUG]  [BUGGY]  String  cached  =  jsString(s.trim().substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.trim().substring(0,  s.length()));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.trim().substring(0,  s.length()));	  String    cached    =    jsString(s.substring(0,    s.length()));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
829	[BUG]  [BUGGY]  String  cached  =  jsStringESCAPED_JS_STRINGS.remove(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringESCAPED_JS_STRINGS.remove(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringESCAPED_JS_STRINGS.remove(s);	  String    cached    =    jsStringESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
830	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.convertUTCToLocal(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.convertUTCToLocal(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.convertUTCToLocal(s);	  String    cached    =    jsStringSeparator.convert(s);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
831	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  context);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(null,  context);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
832	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()).trim());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()).trim());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(0,  s.length()).trim());	  String    cached    =    jsString(s.substring(0,    s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
833	[BUG]  [BUGGY]  String  cached  =(this.jsStringSep.containsKey(s))?  this.jsStringSep.get(s):  s;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSep.containsKey(s))?  this.jsStringSep.get(s):  s;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSep.containsKey(s))?  this.jsStringSep.get(s):  s;	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
834	[BUG]  [BUGGY]  String  cached  =  s.jsStringSep.get(this.jsStringSep);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.jsStringSep.get(this.jsStringSep);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.jsStringSep.get(this.jsStringSep);	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
835	[BUG]  [BUGGY]  String  cached  =(this.jsStringSep.containsKey(s)||  this.jsStringSep.containsKey(s));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSep.containsKey(s)||  this.jsStringSep.containsKey(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSep.containsKey(s)||  this.jsStringSep.containsKey(s));	  String    cached    =    this.jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
836	[BUG]  [BUGGY]  String  cached  =  s.get( "JSC_STRING ",  s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "JSC_STRING ",  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "JSC_STRING ",  s);	  String    cached    =    s.get(   "JSC_STRING   ");    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
837	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(cc).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(cc).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(cc).toLowerCase();	  String    cached    =    JS_STRINGS.get(s).toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
838	[BUG]  [BUGGY]  String  cached  =  s.get( ",java.lang.String ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( ",java.lang.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( ",java.lang.String ");	  String    cached    =    s.get(   "java.lang.String   ");    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
839	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getJsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.getJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getJsString(s);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
840	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.removeJsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.removeJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.removeJsString(s);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
841	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getCachedString(s,  jsString);	  String    cached    =    JsStringUtil.getCachedString(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
842	[BUG]  [BUGGY]  Context  cc  =  createCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  createCurrentContext();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  createCurrentContext();	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
843	[BUG]  [BUGGY]  Context  cc  =  getContextForCodeInsertion();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  getContextForCodeInsertion();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getContextForCodeInsertion();	  Context    cc    =    getContext();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
844	[BUG]  [BUGGY]  CharType  cached  =  JsStringUtil.jsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharType  cached  =  JsStringUtil.jsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharType  cached  =  JsStringUtil.jsString(s);	  char    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
845	[BUG]  [BUGGY]  String  cached  =(this.jsStringSeparator!=  null?  this.jsStringSeparator.getValue()  :  s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSeparator!=  null?  this.jsStringSeparator.getValue()  :  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSeparator!=  null?  this.jsStringSeparator.getValue()  :  s);	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
846	[BUG]  [BUGGY]  String  cached  =(this.jsStringSeparator!=  null?  this.jsStringSeparator.getKey()  :  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =(this.jsStringSeparator!=  null?  this.jsStringSeparator.getKey()  :  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =(this.jsStringSeparator!=  null?  this.jsStringSeparator.getKey()  :  s);	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
847	[BUG]  [BUGGY]  String  cached  =  this.jsStringSeparator.remove(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  this.jsStringSeparator.remove(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  this.jsStringSeparator.remove(s);	  String    cached    =    this.jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
848	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  SHORT_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  SHORT_OF_EXPR);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(context,  SHORT_OF_EXPR);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
849	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.createContext(context,  false);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(context,  false);	  Context    rhsContext    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
850	[BUG]  [BUGGY]  String  cached  =  s.getBooleanValue(JAVA_STRING_ELSE);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBooleanValue(JAVA_STRING_ELSE);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBooleanValue(JAVA_STRING_ELSE);	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
851	[BUG]  [BUGGY]  String  cached  =  s.getBooleanValue(USE_JSC_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBooleanValue(USE_JSC_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBooleanValue(USE_JSC_STRINGS);	  String    cached    =    s.getBooleanValue(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
852	[BUG]  [BUGGY]  String  cached  =  JSStringSep.remove(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.remove(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.remove(s);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
853	[BUG]  [BUGGY]  String  cached  =  JSStringSep.construct(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringSep.construct(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.construct(s);	  String    cached    =    JSStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
854	[BUG]  [BUGGY]  String  cached  =  jsStringSep.get(s  +  1,  s.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.get(s  +  1,  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.get(s  +  1,  s.length());	  String    cached    =    jsStringSep.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
855	[BUG]  [BUGGY]  String  cached  =  jsStringSep.get(s  *  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.get(s  *  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.get(s  *  1);	  String    cached    =    jsStringSep.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
856	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.toJsString(cc,  s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.toJsString(cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.toJsString(cc,  s);	  String    cached    =    JsStringUtil.toJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
857	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.toJsString(s,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtil.toJsString(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.toJsString(s,  cc);	  String    cached    =    JsStringUtil.toJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
858	[BUG]  [BUGGY]  String  cached  =  jsString.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.generateJsString(s);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
859	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  true);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  true);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
860	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  JsToken.VALUE_STRING);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  JsToken.VALUE_STRING);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  JsToken.VALUE_STRING);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
861	[BUG]  [BUGGY]  String  cached  =  s.endsWith( ".java ")?  outputCharsetEncoder.generateJsString(s):  null;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.endsWith( ".java ")?  outputCharsetEncoder.generateJsString(s):  null;  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.endsWith( ".java ")?  outputCharsetEncoder.generateJsString(s):  null;	  String    cached    =    outputCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
862	[BUG]  [BUGGY]  String  cached  =  this.outputCharsetEncoder.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  this.outputCharsetEncoder.generateJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  this.outputCharsetEncoder.generateJsString(s);	  String    cached    =    outputCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
863	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toLowerCase(context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(context);	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
864	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(context,  s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  Character.toLowerCase(context,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(context,  s);	  Character    cached    =    Character.toLowerCase(s);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
865	[BUG]  [BUGGY]  Character  cached  =  s.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  s.charAt(s.length()  -  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  s.charAt(s.length()  -  1);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
866	[BUG]  [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(cc);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  ESCAPED_JS_STRINGS.get(cc);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
867	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(s,  jsString);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
868	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s.toCharArray());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(s.toCharArray());	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
869	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(cc,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(cc,  s);	  String    cached    =    JsStringUtilities.getStringValue(s);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
870	[BUG]  [BUGGY]  String  cached  =  s.get( "java.util.ArrayList ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.get( "java.util.ArrayList ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.util.ArrayList ");	  String    cached    =    s.get(esCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
871	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.convertToString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.convertToString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.convertToString();	  String    cached    =    jsStringSeparator.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
872	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.convertToString(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.convertToString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.convertToString(s);	  String    cached    =    jsStringSeparator.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
873	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SIGNATURE,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SIGNATURE,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JS_STRING_SIGNATURE,  s);	  String    cached    =    JsStringUtilities.getString(JsString.class);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
874	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR.class);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR.class);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR.class);	  String    cached    =    JsStringUtilities.getString(JsString.class);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
875	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s,  getCachedValue());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s,  getCachedValue());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s,  getCachedValue());	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
876	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s,  context);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s,  context);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s,  context);	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
877	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s,  Context.STATEMENT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s,  Context.STATEMENT);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s,  Context.STATEMENT);	  String    cached    =    jsStringSeparator.get(s,    this);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
878	[BUG]  [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s,  charset);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s,  charset);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  ESCAPED_JS_STRINGS.get(s,  charset);	  Character    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
879	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toUpperCase(),  s.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toUpperCase(),  s.toUpperCase());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toUpperCase(),  s.toUpperCase());	  String    cached    =    JsStringUtilities.getString(s.toLowerCase());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
880	[BUG]  [BUGGY]  String  cached  =  jsString(s.getBoolean(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsString(s.getBoolean(ESCAPED_JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getBoolean(ESCAPED_JS_STRINGS);	  String    cached    =    jsString(s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
881	[BUG]  [BUGGY]  Char  cached  =  s.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  s.charAt(s.length()  -  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  s.charAt(s.length()  -  1);	  Char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
882	[BUG]  [BUGGY]  Char  cached  =  s.charAt(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Char  cached  =  s.charAt(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  s.charAt(s);	  Char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
883	[BUG]  [BUGGY]  Charset  cached  =  esCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  esCAPED_JS_STRINGS.get(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  esCAPED_JS_STRINGS.get(s);	  Charset    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
884	[BUG]  [BUGGY]  CharType  cached  =  JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharType  cached  =  JS_STRINGS.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharType  cached  =  JS_STRINGS.get(s,  jsString);	  char    cached    =    JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
885	[BUG]  [BUGGY]  CharCached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  CharCached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharCached  =  ESCAPED_JS_STRINGS.get(s,  jsString);	  char    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
886	[BUG]  [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  java.lang.String);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  java.lang.String);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  ESCAPED_JS_STRINGS.get(s,  java.lang.String);	  char    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
887	[BUG]  [BUGGY]  Charset  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Charset  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);	  char    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
888	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.stripLeadingJsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtil.stripLeadingJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.stripLeadingJsString(s);	  String    cached    =    JSStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
889	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.encodeJsString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JSStringUtil.encodeJsString(s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.encodeJsString(s);	  String    cached    =    JSStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
890	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length()  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.substring(0,  s.length()  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length()  1);	  String    cached    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
891	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "UTF-8 ").replace('-',  '.');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s.getBytes( "UTF-8 ").replace('-',  '.');  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "UTF-8 ").replace('-',  '.');	  String    cached    =    s.getBytes(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
892	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.remove(s  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.remove(s  +  1);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.remove(s  +  1);	  String    cached    =    jsStringSeparator.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
893	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  1,  s.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  1,  s.length());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s  +  1,  s.length());	  String    cached    =    jsStringSeparator.get(s    +    1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
894	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.indexOf('.');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSeparator.indexOf('.');  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.indexOf('.');	  String    cached    =    jsStringSeparator.indexOf(s);    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
895	[BUG]  [BUGGY]  char  cached  =  s.getBoolean( "java.lang.String ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.getBoolean( "java.lang.String ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.getBoolean( "java.lang.String ");	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
896	[BUG]  [BUGGY]  char  cached  =  s.getBoolean(JAVA_STRING_ELSE);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.getBoolean(JAVA_STRING_ELSE);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.getBoolean(JAVA_STRING_ELSE);	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
897	[BUG]  [BUGGY]  char  cached  =  s.getBoolean( "java.lang.Object ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  char  cached  =  s.getBoolean( "java.lang.Object ");  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.getBoolean( "java.lang.Object ");	  char    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
898	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  cc).toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  cc).toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  cc).toLowerCase();	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
899	[BUG]  [BUGGY]  String  cached  =  cc.get(s,  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.get(s,  JS_STRINGS);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.get(s,  JS_STRINGS);	  String    cached    =    JS_STRINGS.get(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
900	[BUG]  [BUGGY]  String  cached  =  s!=  null?  null  :  s.toString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s!=  null?  null  :  s.toString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s!=  null?  null  :  s.toString();	  String    cached    =    s!=    null?    null    :    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
901	[BUG]  [BUGGY]  String  cached  =  s!=  null?  null  :  s.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s!=  null?  null  :  s.toLowerCase();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s!=  null?  null  :  s.toLowerCase();	  String    cached    =    s!=    null?    null    :    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
902	[BUG]  [BUGGY]  String  cached  =  s!=  null?  null  :  s.getText();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s!=  null?  null  :  s.getText();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s!=  null?  null  :  s.getText();	  String    cached    =    s!=    null?    null    :    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
903	[BUG]  [BUGGY]  String  cached  =  s!=  null?  null  :  s.toCharArray();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  s!=  null?  null  :  s.toCharArray();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s!=  null?  null  :  s.toCharArray();	  String    cached    =    s!=    null?    null    :    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
904	[BUG]  [BUGGY]  String  cached  =  cc.generateJsString(s,  JSCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  cc.generateJsString(s,  JSCharsetEncoder);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  cc.generateJsString(s,  JSCharsetEncoder);	  String    cached    =    JSCharsetEncoder.generateJsString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
905	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.currentTimeMillis();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
906	[BUG]  [BUGGY]  JS_STRINGS.put(s,  jsString(s));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  jsString(s));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  jsString(s));	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
907	[BUG]  [BUGGY]  JS_STRINGS.put(s,  JsString.valueOf(cached));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  JsString.valueOf(cached));  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  JsString.valueOf(cached));	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
908	[BUG]  [BUGGY]  JS_STRINGS.put(s,  jsString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  jsString());  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  jsString());	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
909	[BUG]  [BUGGY]  JS_STRINGS.put(s,  JsString.class);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  JS_STRINGS.put(s,  JsString.class);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  JsString.class);	  JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
910	[BUG]  [BUGGY]  String  cached  =  jsStringSep.convertToString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  jsStringSep.convertToString();  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.convertToString();	  String    cached    =    jsStringSep.getValue(s);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
911	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  0,  s.length);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JS_STRINGS.get(s,  0,  s.length);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  0,  s.length);	  String    cached    =    JS_STRINGS.get(s,    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
912	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.findCachedString(s,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.findCachedString(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.findCachedString(s,  cc);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
913	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.convert(cc,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.convert(cc,  s);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.convert(cc,  s);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
914	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.convert(s,  cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {      [BUGGY]  String  cached  =  JsStringUtilities.convert(s,  cc);  [BUGGY]      if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.convert(s,  cc);	  String    cached    =    JsStringUtilities.getString(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
