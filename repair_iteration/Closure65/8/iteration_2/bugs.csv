bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s).toLowerCase();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.get(s).toLowerCase();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s).toLowerCase();	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.get(s  +  1);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s  +  1);	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.get(s,  0);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  0);	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.get(s,  cc);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  cc);	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  String  cached  =  jsString.get(s);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  String  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.get(s,  jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  jsString);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  Object  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Object  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Object  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(s,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.get(s,  s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(s,  s);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  char  cached  =  JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  JS_STRINGS.get(s,  jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JS_STRINGS.get(s,  jsString);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  String  cached  =  s.get(jsStringSep);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.get(jsStringSep);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(jsStringSep);	  String    cached    =    jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  String  cached  =  JSStringSep.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSStringSep.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSep.get(s);	  String    cached    =    jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  String  cached  =  jsStringSep.getValue(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSep.getValue(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.getValue(s);	  String    cached    =    jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  String  cached  =  jsStringSep.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSep.get(s  +  1);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.get(s  +  1);	  String    cached    =    jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  String  cached  =  JsStringSep.get(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringSep.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringSep.get(s);	  String    cached    =    jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  String  cached  =  jsString(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(s.toLowerCase());  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toLowerCase());	  String    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  String  cached  =  jsString(s.trim());  [CE]  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(s.trim());  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.trim());	  String    cached    =    jsString(s);    	non-compiled	[CE]  	1	None	replace
20	[BUG]  [BUGGY]  String  cached  =  jsString(s.toUpperCase());  [CE]  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(s.toUpperCase());  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toUpperCase());	  String    cached    =    jsString(s);    	non-compiled	[CE]  	1	None	replace
21	[BUG]  [BUGGY]  char  cached  =  jsString(s);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  jsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  jsString(s);	  String    cached    =    jsString(s);    	non-compiled	[CE]  	1	None	replace
22	[BUG]  [BUGGY]  String  cached  =  jsString(s.toCharArray());  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(s.toCharArray());  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.toCharArray());	  String    cached    =    jsString(s);    	non-compiled	[CE]  	1	None	replace
23	[BUG]  [BUGGY]  String  cached  =  JsString.valueOf(s);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsString.valueOf(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsString.valueOf(s);	  String    cached    =    jsString(s);    	non-compiled	[CE]  	1	None	replace
24	[BUG]  [BUGGY]  String  cached  =  s.toLowerCase();  [CE]  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.toLowerCase();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.toLowerCase();	  String    cached    =    s.getValue();    	non-compiled	[CE]  	3	None	replace
25	[BUG]  [BUGGY]  String  cached  =  s.toCharArray();  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.toCharArray();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.toCharArray();	  String    cached    =    s.getValue();    	non-compiled	[CE]  	3	None	replace
26	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length()  -  1);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.substring(0,  s.length()  -  1);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length()  -  1);	  String    cached    =    s.getValue();    	non-compiled	[CE]  	3	None	replace
27	[BUG]  [BUGGY]  String  cached  =  s.getKey();  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.getKey();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getKey();	  String    cached    =    s.getValue();    	non-compiled	[CE]  	3	None	replace
28	[BUG]  [BUGGY]  String  cached  =  s.getQualifiedName();  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.getQualifiedName();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getQualifiedName();	  String    cached    =    s.getValue();    	non-compiled	[CE]  	3	None	replace
29	[BUG]  [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  ESCAPED_JS_STRINGS.get(s);	  char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	8	None	replace
30	[BUG]  [BUGGY]  Charset  cached  =  ESCAPED_JS_STRINGS.get(s);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Charset  cached  =  ESCAPED_JS_STRINGS.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Charset  cached  =  ESCAPED_JS_STRINGS.get(s);	  char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	8	None	replace
31	[BUG]  [BUGGY]  char  cached  =  JS_STRINGS.get(s);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  JS_STRINGS.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JS_STRINGS.get(s);	  char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	8	None	replace
32	[BUG]  [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  ESCAPED_JS_STRINGS.get(s)+  1;	  char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	8	None	replace
33	[BUG]  [BUGGY]  String  cached  =  s.get(s);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(s);	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  	9	None	replace
34	[BUG]  [BUGGY]  char  cached  =  s.get(ESCAPED_JS_STRINGS);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  s.get(ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  s.get(ESCAPED_JS_STRINGS);	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  	9	None	replace
35	[BUG]  [BUGGY]  String  cached  =  s.getBoolean(ESCAPED_JS_STRINGS);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.getBoolean(ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBoolean(ESCAPED_JS_STRINGS);	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  	9	None	replace
36	[BUG]  [BUGGY]  String  cached  =  s.getBytes( "UTF-8 ");  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.getBytes( "UTF-8 ");  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBytes( "UTF-8 ");	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  	9	None	replace
37	[BUG]  [BUGGY]  String  cached  =  s.getBooleanValue(ESCAPED_JS_STRINGS);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.getBooleanValue(ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.getBooleanValue(ESCAPED_JS_STRINGS);	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  	9	None	replace
38	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  	6	None	replace
39	[BUG]  [BUGGY]  char  cached  =  JsStringUtil.jsString(s);  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  JsStringUtil.jsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsStringUtil.jsString(s);	  String    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  	6	None	replace
40	[BUG]  [BUGGY]  String  cached  =  JSStringUtil.jsString(s);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSStringUtil.jsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringUtil.jsString(s);	  String    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  	6	None	replace
41	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc);  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  cc);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  cc);	  String    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  	6	None	replace
42	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  esCAPED_JS_STRINGS);  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtil.jsString(s,  esCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.jsString(s,  esCAPED_JS_STRINGS);	  String    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  	6	None	replace
43	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  cc  =  Context.getCurrentContext();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext();	      	non-compiled	[CE]  	7	None	replace
44	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(s);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(s);	      	non-compiled	[CE]  	7	None	replace
45	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context);  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  cc  =  Context.createContext(context);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(context);	      	non-compiled	[CE]  	7	None	replace
46	[BUG]  [BUGGY]  Character  cached  =  Character.toLowerCase(s);  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Character  cached  =  Character.toLowerCase(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  Character.toLowerCase(s);	      	non-compiled	[CE]  	7	None	replace
47	[BUG]  [BUGGY]  Context  cc  =  getContext();  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  cc  =  getContext();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  getContext();	      	non-compiled	[CE]  	7	None	replace
48	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context);  [CE]  [FE]                              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  cc  =  Context.createChildObjectContext(context);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(context);	      	non-compiled	[CE]  	7	None	replace
49	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s);  [CE]  [FE]                                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  cc  =  Context.createContext(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createContext(s);	      	non-compiled	[CE]  	7	None	replace
50	[BUG]  [BUGGY]  String  cached  =  JSStringSeparator.get(s);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSStringSeparator.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStringSeparator.get(s);	  String    cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  	10	None	replace
51	[BUG]  [BUGGY]  String  cached  =  s.get(jsStringSeparator);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.get(jsStringSeparator);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(jsStringSeparator);	  String    cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  	10	None	replace
52	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.getValue(s);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSeparator.getValue(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.getValue(s);	  String    cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  	10	None	replace
53	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  1);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSeparator.get(s  +  1);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s  +  1);	  String    cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  	10	None	replace
54	[BUG]  [BUGGY]  String  cached  =  this.jsStringSeparator.get(s);  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  this.jsStringSeparator.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  this.jsStringSeparator.get(s);	  String    cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  	10	None	replace
55	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.remove(s);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSeparator.remove(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.remove(s);	  String    cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  	10	None	replace
56	[BUG]  [BUGGY]  String  cached  =  jsString(s.getString());  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(s.getString());  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.getString());	  String    cached    =    s.getString();    	non-compiled	[CE]  	4	None	replace
57	[BUG]  [BUGGY]  String  cached  =  s.toString();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.toString();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.toString();	  String    cached    =    s.getString();    	non-compiled	[CE]  	4	None	replace
58	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  ESCAPED_JS_STRINGS);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
59	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(context,  s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(context,  s);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
60	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toLowerCase());  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toLowerCase());  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toLowerCase());	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
61	[BUG]  [BUGGY]  char  cached  =  JsStringUtilities.getString(s);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  JsStringUtilities.getString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JsStringUtilities.getString(s);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
62	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s);  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(cc,  s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(cc,  s);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
63	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString);  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(jsString);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
64	[BUG]  [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  outputCharsetEncoder.generateJsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  outputCharsetEncoder.generateJsString(s);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  	14	None	replace
65	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  ESCAPED_JS_STRINGS);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  	14	None	replace
66	[BUG]  [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  JSCharsetEncoder.generateJsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  JSCharsetEncoder.generateJsString(s);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  	14	None	replace
67	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(jsString);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(jsString);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  	14	None	replace
68	[BUG]  [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(s);  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  cached  =  JSCharsetEncoder.generateJsString(s);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  	14	None	replace
69	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  context);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  context);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  context);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  	14	None	replace
70	[BUG]  [BUGGY]  String  cached  =  s.get(esCAPED_JS_STRINGS);  [CE]  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.get(esCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get(esCAPED_JS_STRINGS);	  String    cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	12	None	replace
71	[BUG]  [BUGGY]  char  cached  =  esCAPED_JS_STRINGS.get(s);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  char  cached  =  esCAPED_JS_STRINGS.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	char  cached  =  esCAPED_JS_STRINGS.get(s);	  String    cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	12	None	replace
72	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s).toLowerCase();  [CE]  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s).toLowerCase();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s).toLowerCase();	  String    cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	12	None	replace
73	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s  +  1);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s  +  1);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s  +  1);	  String    cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  	12	None	replace
74	[BUG]  [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getString();  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getString();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s  ==  null?  null  :  s.getString();	  String    cached    =    s.getString();    	non-compiled	[CE]  	4	None	replace
75	[BUG]  [BUGGY]  String  cached  =  s.trim();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.trim();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.trim();	  String    cached    =    s.getString();    	non-compiled	[CE]  	4	None	replace
76	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.get(s,  this);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSeparator.get(s,  this);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.get(s,  this);	  String    cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  	10	None	replace
77	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.class);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(JsString.class);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsString.class);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
78	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JsStringEncoder.class.getSimpleName());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(JsStringEncoder.class.getSimpleName());  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JsStringEncoder.class.getSimpleName());	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(JS_STRING_SEPARATOR);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(this.context,  s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(this.context,  s);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
81	[BUG]  [BUGGY]  String  cached  =  this.jsStringSep.get(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  this.jsStringSep.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  this.jsStringSep.get(s);	  String    cached    =    jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()));  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(0,  s.length()));	  String    cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
83	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.toJsString(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtil.toJsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.toJsString(s);	  String    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
84	[BUG]  [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtil.getCachedString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtil.getCachedString(s);	  String    cached    =    JsStringUtil.jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
85	[BUG]  [BUGGY]  String  cached  =  jsStringESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringESCAPED_JS_STRINGS.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringESCAPED_JS_STRINGS.get(s);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
86	[BUG]  [BUGGY]  String  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSStrings.get(s,  ESCAPED_JS_STRINGS);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
87	[BUG]  [BUGGY]  Char  cached  =  ESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Char  cached  =  ESCAPED_JS_STRINGS.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Char  cached  =  ESCAPED_JS_STRINGS.get(s);	  char    cached    =    ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
88	[BUG]  [BUGGY]  String  cached  =  jsString(esCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(esCAPED_JS_STRINGS.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(esCAPED_JS_STRINGS.get(s);	  String    cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  esCAPED_JS_STRINGS.get(s,  jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  esCAPED_JS_STRINGS.get(s,  jsString);	  String    cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
90	[BUG]  [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getValue();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s  ==  null?  null  :  s.getValue();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s  ==  null?  null  :  s.getValue();	  String    cached    =    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  String  cached  =  s!=  null?  null  :  s.getValue();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s!=  null?  null  :  s.getValue();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s!=  null?  null  :  s.getValue();	  String    cached    =    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
92	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(jsString);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.get(jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(jsString);	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
93	[BUG]  [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(JS_STRINGS.get(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(JS_STRINGS.get(s);	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
94	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  outputCharsetEncoder);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
95	[BUG]  [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	CharsetEncoder  outputCharsetEncoder  =  cc.generateJsString(s);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
96	[BUG]  [BUGGY]  String  cached  =  s.get( "java.sql.SQL_STRING ");  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.get( "java.sql.SQL_STRING ");  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.sql.SQL_STRING ");	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
97	[BUG]  [BUGGY]  String  cached  =  s.get( "java.sql.String ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.get( "java.sql.String ");  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.sql.String ");	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
98	[BUG]  [BUGGY]  String  cached  =  s.get( "JSC_STRING ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.get( "JSC_STRING ");  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "JSC_STRING ");	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
99	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
100	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createContext(context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  rhsContext  =  Context.createContext(context);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createContext(context);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
101	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  cc  =  Context.createCurrentContext();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
102	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
103	[BUG]  [BUGGY]  Context  rhsContext  =  getContext();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  rhsContext  =  getContext();  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  getContext();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
104	[BUG]  [BUGGY]  Character  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Character  cached  =  jsString(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  jsString(s);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
105	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  cc  =  Context.createChildObjectContext(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  cc  =  Context.createChildObjectContext(s);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
106	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(-1,  -1);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Context  rhsContext  =  Context.createChildObjectContext(-1,  -1);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
107	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  cc);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  cc);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  cc);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
108	[BUG]  [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  jsString);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JSCharsetEncoder.generateJsString(s,  jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JSCharsetEncoder.generateJsString(s,  jsString);	  String    cached    =    JSCharsetEncoder.generateJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
109	[BUG]  [BUGGY]  String  cached  =  jsString(s.get(ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(s.get(ESCAPED_JS_STRINGS);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.get(ESCAPED_JS_STRINGS);	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
110	[BUG]  [BUGGY]  String  cached  =  s.get( "java.lang.String ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.get( "java.lang.String ");  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.get( "java.lang.String ");	  String    cached    =    s.get(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
111	[BUG]  [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  Character  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	Character  cached  =  ESCAPED_JS_STRINGS.get(s,  jsString);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
112	[BUG]  [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  ESCAPED_JS_STRINGS.get(s,  cc);	  String    cached    =    ESCAPED_JS_STRINGS.get(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
113	[BUG]  [BUGGY]  String  cached  =  s.substring(0,  s.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  s.substring(0,  s.length()  -  2);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  s.substring(0,  s.length()  -  2);	  String    cached    =    s.getValue();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
114	[BUG]  [BUGGY]  String  cached  =  jsStringSep.remove(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSep.remove(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.remove(s);	  String    cached    =    jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
115	[BUG]  [BUGGY]  String  cached  =  jsStringSep.indexOf(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSep.indexOf(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSep.indexOf(s);	  String    cached    =    jsStringSep.get(s);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
116	[BUG]  [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  -  1));  [CE]  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsString(s.substring(0,  s.length()  -  1));  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsString(s.substring(0,  s.length()  -  1));	  String    cached    =    jsString(s);    	non-compiled	[CE]  	1	None	replace
117	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray());  [CE]  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(s.toCharArray());  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s.toCharArray());	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
118	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getStringValue(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getStringValue(s);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
119	[BUG]  [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc);  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JsStringUtilities.getString(s,  cc);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JsStringUtilities.getString(s,  cc);	  String    cached    =    JsStringUtilities.getString(s);    	non-compiled	[CE]  	5	None	replace
120	[BUG]  [BUGGY]  JS_STRINGS.put(s,  cached);  [CE]  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  JS_STRINGS.put(s,  cached);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	JS_STRINGS.put(s,  cached);	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  	2	None	replace
121	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.get(cc);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.get(cc);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.get(cc);	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  	2	None	replace
122	[BUG]  [BUGGY]  String  cached  =  JS_STRINGS.remove(s);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  JS_STRINGS.remove(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  JS_STRINGS.remove(s);	  String    cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  	2	None	replace
123	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.convert(s);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSeparator.convert(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.convert(s);	  String    cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
124	[BUG]  [BUGGY]  String  cached  =  jsStringSeparator.indexOf(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {    [BUGGY]  String  cached  =  jsStringSeparator.indexOf(s);  [BUGGY]    if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	948	948	1	replace	String  cached  =  jsStringSeparator.indexOf(s);	  String    cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
