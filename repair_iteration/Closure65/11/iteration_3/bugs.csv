bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(cached,  d);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(cached,  d);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(cached,  d);	  CACHED_JS_STRINGS.put(d,    cached);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
2	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(lhsContext,  cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(lhsContext,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(lhsContext,  cached);	  CACHED_JS_STRINGS.put(d,    cached);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
3	[BUG]  [BUGGY]  Cached  <  K,  V>  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  K,  V>  cached  =  jsString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  K,  V>  cached  =  jsString(s);	  if(cached    ==    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  CACHED  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED  =  jsString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED  =  jsString(s);	  if(cached    ==    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]  Cached  <  K,  V>  cached  =  cached.jsString();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  K,  V>  cached  =  cached.jsString();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  K,  V>  cached  =  cached.jsString();	  if(cached    ==    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  cached  =  cc.put(cached,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.put(cached,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.put(cached,  cached);	  cached    =    ESCAPED_JS_STRINGS.put(cached,    cached);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
7	[BUG]  [BUGGY]  cached  =  cc.get(s,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.get(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.get(s,  cached);	  cached    =    ESCAPED_JS_STRINGS.get(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
8	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(s,  cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.get(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.get(s,  cached);	  cached    =    ESCAPED_JS_STRINGS.get(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
9	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.get(s,  cached);	  cached    =    ESCAPED_JS_STRINGS.get(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
10	[BUG]  [BUGGY]  cached  =  cached.get(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cached.get(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cached.get(s);	  cached    =    ESCAPED_JS_STRINGS.get(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
11	[BUG]  [BUGGY]  cached  =  s.get(esCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  s.get(esCAPED_JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  s.get(esCAPED_JS_STRINGS);	  cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.get(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.get(cached);	  cached    =    esCAPED_JS_STRINGS.get(cached);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
13	[BUG]  [BUGGY]  cached  =  cc.getCurrentStructure().put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.getCurrentStructure().put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.getCurrentStructure().put(s,  cached);	  cached    =    cc.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
14	[BUG]  [BUGGY]  cached  =  cc.findCachedString(s,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.findCachedString(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.findCachedString(s,  cached);	  cached    =    cc.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
15	[BUG]  [BUGGY]  cached  =  cc.add(s,  cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.add(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.add(s,  cached);	  cached    =    cc.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
16	[BUG]  [BUGGY]  cached  =  cc.put(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.put(s,  cached  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.put(s,  cached  +  1);	  cached    =    cc.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
17	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  *  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  *  2);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  *  2);	  ESCAPED_JS_STRINGS.put(s,    cached    *    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
18	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  /  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  /  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  /  1);	  ESCAPED_JS_STRINGS.put(s,    cached    *    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
19	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  *  4);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  *  4);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  *  4);	  ESCAPED_JS_STRINGS.put(s,    cached    *    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
20	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  +  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  +  2);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(s,  cached  +  2);	  CACHED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
21	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  +  3);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  +  3);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(s,  cached  +  3);	  CACHED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
22	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  +  1,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  +  1,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(s,  cached  +  1,  cached);	  CACHED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  +  4);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  +  4);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(s,  cached  +  4);	  CACHED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  /  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  /  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(s,  cached  /  1);	  CACHED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(cached,  jsString);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(cached,  jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(cached,  jsString);	  CACHED_JS_STRINGS.put(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
26	[BUG]  [BUGGY]  cached  =  CACHED_JS_STRINGS.put(s,  jsString);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  CACHED_JS_STRINGS.put(s,  jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  CACHED_JS_STRINGS.put(s,  jsString);	  CACHED_JS_STRINGS.put(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
27	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(key,  jsString);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(key,  jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(key,  jsString);	  CACHED_JS_STRINGS.put(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
28	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  cached.put(s,  cc);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  context.getCurrentContext();  cached.put(s,  cc);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  context.getCurrentContext();  cached.put(s,  cc);	  Context    cc    =    Context.getCurrentContext();    cached.put(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
29	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached.put(s,  CATCH_OF_EXPR);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached.put(s,  CATCH_OF_EXPR);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContext();  cached.put(s,  CATCH_OF_EXPR);	  Context    cc    =    Context.getCurrentContext();    cached.put(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
30	[BUG]  [BUGGY]  Context  cc  =  Context.currentContext();  cached.put(s,  cc);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.currentContext();  cached.put(s,  cc);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.currentContext();  cached.put(s,  cc);	  Context    cc    =    Context.getCurrentContext();    cached.put(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
31	[BUG]  [BUGGY]  Context  context  =  Context.getCurrentContext();  cached.put(s,  context);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  context  =  Context.getCurrentContext();  cached.put(s,  context);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  context  =  Context.getCurrentContext();  cached.put(s,  context);	  Context    cc    =    Context.getCurrentContext();    cached.put(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
32	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached.put(s,  new  JsString(cached));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached.put(s,  new  JsString(cached));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContext();  cached.put(s,  new  JsString(cached));	  Context    cc    =    Context.getCurrentContext();    cached.put(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
33	[BUG]  [BUGGY]  cached  =  cc.getJsString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.getJsString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.getJsString(s);	  cached    =    cc.get(s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  cached  =  cc.get(cached);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.get(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.get(cached);	  cached    =    cc.get(s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  cached  =  cc.getString(s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.getString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.getString(s);	  cached    =    cc.get(s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  cached  =  cc.get(key);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.get(key);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.get(key);	  cached    =    cc.get(s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  cached  =  cc.construct(s);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.construct(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.construct(s);	  cached    =    cc.get(s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  cached  =  cc.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.get(s  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.get(s  +  1);	  cached    =    cc.get(s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  cached  =  JsStringUtil.jsString(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JsStringUtil.jsString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JsStringUtil.jsString(s);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  cached  =  jsString(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(s.toLowerCase());  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(s.toLowerCase());	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  cached  =  jsString(s.trim());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(s.trim());  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(s.trim());	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  cached  =  jsString(s.substring(0,  cached.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(s.substring(0,  cached.length()  -  1));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(s.substring(0,  cached.length()  -  1));	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  cached  =  JSStringUtilities.jsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSStringUtilities.jsString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSStringUtilities.jsString(s);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  cached  =  jsString(cached);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(cached);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  cached  =  jsString(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(s.toCharArray());  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(s.toCharArray());	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  cached  =  jsString(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(JS_STRINGS);	  cached    =    jsString(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  cached  =  jsString(JS_STRINGS.get(s));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(JS_STRINGS.get(s));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(JS_STRINGS.get(s));	  cached    =    jsString(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  cached  =  jsString(JS_STRINGS,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(JS_STRINGS,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(JS_STRINGS,  s);	  cached    =    jsString(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  cached  =  JsStringUtil.jsString(cached);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JsStringUtil.jsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JsStringUtil.jsString(cached);	  cached    =    jsString(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
50	[BUG]  [BUGGY]  cached  =  cached.get(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cached.get(s,  ESCAPED_JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cached.get(s,  ESCAPED_JS_STRINGS);	  cached    =    cached.put(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
51	[BUG]  [BUGGY]  cached  =  cc.put(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.put(s,  ESCAPED_JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.put(s,  ESCAPED_JS_STRINGS);	  cached    =    cached.put(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
52	[BUG]  [BUGGY]  cached  =  cached.put(s,  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cached.put(s,  JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cached.put(s,  JS_STRINGS);	  cached    =    cached.put(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
53	[BUG]  [BUGGY]  cached  =  cached.put(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cached.put(s,  jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cached.put(s,  jsString);	  cached    =    cached.put(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
54	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s,  cached  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.get(s,  cached  +  1);	  cached    =    ESCAPED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.get(s  +  1);	  cached    =    ESCAPED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached  +  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached  +  2);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.put(s,  cached  +  2);	  cached    =    ESCAPED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached  +  3);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached  +  3);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.put(s,  cached  +  3);	  cached    =    ESCAPED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  cached  =  JS_STRINGS.put(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.put(s,  cached  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.put(s,  cached  +  1);	  cached    =    ESCAPED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  cached  =  jsStrings.get(cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStrings.get(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStrings.get(cached);	  cached    =    jsStrings.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
60	[BUG]  [BUGGY]  cached  =  JSStrings.get(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSStrings.get(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSStrings.get(s);	  cached    =    jsStrings.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
61	[BUG]  [BUGGY]  cached  =  JSStrings.get(cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSStrings.get(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSStrings.get(cached);	  cached    =    jsStrings.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
62	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  s);	  Context    rhsContext    =    Context.createChildObjectContext(context,    cached);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
63	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  lhsContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  lhsContext);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  lhsContext);	  Context    rhsContext    =    Context.createChildObjectContext(context,    cached);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
64	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(cached,  context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(cached,  context);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(cached,  context);	  Context    rhsContext    =    Context.createChildObjectContext(context,    cached);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
65	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  JS_STRINGS);	  Context    rhsContext    =    Context.createChildObjectContext(context,    cached);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
66	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  cached);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  cached);	  Context    rhsContext    =    Context.createChildObjectContext(context,    cached);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
67	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  jsString);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  jsString);	  Context    rhsContext    =    Context.createChildObjectContext(context,    cached);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
68	[BUG]  [BUGGY]  cached  =  JSStringStructure.get(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSStringStructure.get(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSStringStructure.get(s);	  cached    =    jsStringStructure.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
69	[BUG]  [BUGGY]  cached  =  jsStringStructure.get(cc);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringStructure.get(cc);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringStructure.get(cc);	  cached    =    jsStringStructure.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
70	[BUG]  [BUGGY]  cached  =  JSStringStructure.get(cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSStringStructure.get(cc);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSStringStructure.get(cc);	  cached    =    jsStringStructure.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
71	[BUG]  [BUGGY]  cached  =  jsStringStructure.get(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringStructure.get(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringStructure.get(cached);	  cached    =    jsStringStructure.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
72	[BUG]  [BUGGY]  cached  =  JSStringStructure.get(cached);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSStringStructure.get(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSStringStructure.get(cached);	  cached    =    jsStringStructure.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
73	[BUG]  [BUGGY]  cached  =  jsStringStructure.getValue(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringStructure.getValue(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringStructure.getValue(s);	  cached    =    jsStringStructure.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
74	[BUG]  [BUGGY]  cached  =  JS_STRINGS.remove(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.remove(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.remove(s);	  cached    =    JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
75	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s,  cached));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s,  cached));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.get(s,  cached));	  cached    =    jsString(ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
76	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.put(s,  cached));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.put(s,  cached));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.put(s,  cached));	  cached    =    jsString(ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s),  cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s),  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.get(s),  cached);	  cached    =    jsString(ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
78	[BUG]  [BUGGY]  cached  =  jsString(cached.put(s,  ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(cached.put(s,  ESCAPED_JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(cached.put(s,  ESCAPED_JS_STRINGS);	  cached    =    jsString(ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
79	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.get(s));	  cached    =    jsString(ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
80	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s)+  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s)+  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.get(s)+  1);	  cached    =    jsString(ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
81	[BUG]  [BUGGY]  cached  =  JSString(ESCAPED_JS_STRINGS.get(s));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSString(ESCAPED_JS_STRINGS.get(s));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSString(ESCAPED_JS_STRINGS.get(s));	  cached    =    jsString(ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
82	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s).toLowerCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(s).toLowerCase());  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.get(s).toLowerCase());	  cached    =    jsString(ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.getValue(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.getValue(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.getValue(s);	  cached    =    jsString(ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  cached  =  ESC_ESCAPED_JS_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESC_ESCAPED_JS_STRINGS.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESC_ESCAPED_JS_STRINGS.put(s,  cached);	  ESC_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
85	[BUG]  [BUGGY]  ESC_ESCAPED_JS_STRINGS.put(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESC_ESCAPED_JS_STRINGS.put(s,  cached  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESC_ESCAPED_JS_STRINGS.put(s,  cached  +  1);	  ESC_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
86	[BUG]  [BUGGY]  cached.put(s,  ESC_ESCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached.put(s,  ESC_ESCAPED_JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached.put(s,  ESC_ESCAPED_JS_STRINGS);	  ESC_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
87	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(cached);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
88	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(lhsContext);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
89	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  context);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  context);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
90	[BUG]  [BUGGY]  ESCHRONIZED_JS_STRINGS.put(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCHRONIZED_JS_STRINGS.put(s,  cached  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCHRONIZED_JS_STRINGS.put(s,  cached  +  1);	  ESCHRONIZED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
91	[BUG]  [BUGGY]  cached.put(s,  ESCHRONIZED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached.put(s,  ESCHRONIZED_JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached.put(s,  ESCHRONIZED_JS_STRINGS);	  ESCHRONIZED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
92	[BUG]  [BUGGY]  JS_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  JS_STRINGS.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	JS_STRINGS.put(s,  cached);	  ESCHRONIZED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
93	[BUG]  [BUGGY]  ESCHRONIZED_JS_STRINGS.put(cached,  cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCHRONIZED_JS_STRINGS.put(cached,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCHRONIZED_JS_STRINGS.put(cached,  cached);	  ESCHRONIZED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
94	[BUG]  [BUGGY]  ESCHRONIZED_JS_STRINGS.put(cached,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCHRONIZED_JS_STRINGS.put(cached,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCHRONIZED_JS_STRINGS.put(cached,  s);	  ESCHRONIZED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
95	[BUG]  [BUGGY]  cached  =  JSStringSeparator.get(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSStringSeparator.get(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSStringSeparator.get(s);	  cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
96	[BUG]  [BUGGY]  cached  =  jsStringSeparator.get(cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringSeparator.get(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringSeparator.get(cached);	  cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
97	[BUG]  [BUGGY]  cached  =  s.get(jsStringSeparator);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  s.get(jsStringSeparator);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  s.get(jsStringSeparator);	  cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
98	[BUG]  [BUGGY]  cached  =  JSStringSeparator.get(cached);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSStringSeparator.get(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSStringSeparator.get(cached);	  cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
99	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached  +  1,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached  +  1,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.put(s,  cached  +  1,  cached);	  ESCAPED_JS_STRINGS.put(s,    cached    +    1,    cached);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
100	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(cached,  cached  +  1,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(cached,  cached  +  1,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(cached,  cached  +  1,  cached);	  ESCAPED_JS_STRINGS.put(s,    cached    +    1,    cached);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
101	[BUG]  [BUGGY]  cached  =  esCAPED_JS_STRINGS.get(s,  cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  esCAPED_JS_STRINGS.get(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  esCAPED_JS_STRINGS.get(s,  cached);	  cached    =    esCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
102	[BUG]  [BUGGY]  cached  =  cached.put(s,  esCAPED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cached.put(s,  esCAPED_JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cached.put(s,  esCAPED_JS_STRINGS);	  cached    =    esCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
103	[BUG]  [BUGGY]  Cached  <  K,  V>  cached  =  JsStringUtil.jsString(cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  K,  V>  cached  =  JsStringUtil.jsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  K,  V>  cached  =  JsStringUtil.jsString(cached);	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
104	[BUG]  [BUGGY]  CACHED  =  JsStringUtil.jsString(cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED  =  JsStringUtil.jsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED  =  JsStringUtil.jsString(cached);	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
105	[BUG]  [BUGGY]  Cached  <  String>cached  =  JsStringUtil.jsString(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  String>cached  =  JsStringUtil.jsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  String>cached  =  JsStringUtil.jsString(cached);	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
106	[BUG]  [BUGGY]  CASE_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CASE_STRINGS.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CASE_STRINGS.put(s,  cached);	  ESCH_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
107	[BUG]  [BUGGY]  ESCH_STRINGS.put(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCH_STRINGS.put(s,  cached  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCH_STRINGS.put(s,  cached  +  1);	  ESCH_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
108	[BUG]  [BUGGY]  ESCH_STRINGS.put(cached,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCH_STRINGS.put(cached,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCH_STRINGS.put(cached,  s);	  ESCH_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
109	[BUG]  [BUGGY]  ESCH_STRINGS.put(cached,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCH_STRINGS.put(cached,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCH_STRINGS.put(cached,  cached);	  ESCH_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
110	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  null);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  null);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.put(s,  null);	  ESCAPED_JS_STRINGS.put(cached,    null);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
111	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(s,  null);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(s,  null);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(s,  null);	  ESCAPED_JS_STRINGS.put(cached,    null);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
112	[BUG]  [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	OSG_ESCAPED_JS_STRINGS.put(s,  cached  +  1);	  OSG_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
113	[BUG]  [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached  -  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached  -  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	OSG_ESCAPED_JS_STRINGS.put(s,  cached  -  1);	  OSG_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
114	[BUG]  [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  jsString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	OSG_ESCAPED_JS_STRINGS.put(s,  jsString);	  OSG_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
115	[BUG]  [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached?  null  :  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached?  null  :  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	OSG_ESCAPED_JS_STRINGS.put(s,  cached?  null  :  cached);	  OSG_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
116	[BUG]  [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(cached,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(cached,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	OSG_ESCAPED_JS_STRINGS.put(cached,  cached);	  OSG_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
117	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
118	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(jsString);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
119	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJSString(cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJSString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJSString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
120	[BUG]  [BUGGY]  Context  context  =  Context.getCurrentContext();  cached  =  context.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  context  =  Context.getCurrentContext();  cached  =  context.addJsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  context  =  Context.getCurrentContext();  cached  =  context.addJsString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
121	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(cc);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.get(cc);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.get(cc);	  cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
122	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(chk);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.get(chk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.get(chk);	  cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
123	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(s  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.get(s  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.get(s  +  1);	  cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
124	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(chunk);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.get(chunk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.get(chunk);	  cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
125	[BUG]  [BUGGY]  cached  =  CACHED_JS_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  CACHED_JS_STRINGS.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  CACHED_JS_STRINGS.put(s,  cached);	  CACHED_JS_STRINGS.put(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
126	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContext(context);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
127	[BUG]  [BUGGY]  Context  cc  =  Context.currentContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.currentContext();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.currentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
128	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  context.getCurrentContext();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  context.getCurrentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
129	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createContext(context);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createContext(context);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
131	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext(true);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContext(true);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
132	[BUG]  [BUGGY]  cached  =  CACHED_JS_STRINGS.put(cached,  cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  CACHED_JS_STRINGS.put(cached,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  CACHED_JS_STRINGS.put(cached,  cached);	  CACHED_JS_STRINGS.put(cached,    cached);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
133	[BUG]  [BUGGY]  cached  =  JsString.valueOf(cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JsString.valueOf(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JsString.valueOf(cached);	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
134	[BUG]  [BUGGY]  CACHED  =  JsString.valueOf(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED  =  JsString.valueOf(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED  =  JsString.valueOf(cached);	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
135	[BUG]  [BUGGY]  Cached  <  K,  V>  cached  =  JsString.valueOf(cached);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  K,  V>  cached  =  JsString.valueOf(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  K,  V>  cached  =  JsString.valueOf(cached);	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
136	[BUG]  [BUGGY]  Context.codeBug();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context.codeBug();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context.codeBug();	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
137	[BUG]  [BUGGY]  conn.addJsString(jsString(s));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  conn.addJsString(jsString(s));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	conn.addJsString(jsString(s));	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
138	[BUG]  [BUGGY]  Cached  <  K,  V>  cached  =  cached.get();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  K,  V>  cached  =  cached.get();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  K,  V>  cached  =  cached.get();	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
139	[BUG]  [BUGGY]  ESCHRONIZED_STRINGS.put(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCHRONIZED_STRINGS.put(s,  cached  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCHRONIZED_STRINGS.put(s,  cached  +  1);	  ESCHRONIZED_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
140	[BUG]  [BUGGY]  EXPR_JSC_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  EXPR_JSC_STRINGS.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	EXPR_JSC_STRINGS.put(s,  cached);	  ESCHRONIZED_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
141	[BUG]  [BUGGY]  ESCHRONIZED_STRINGS.put(cached,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCHRONIZED_STRINGS.put(cached,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCHRONIZED_STRINGS.put(cached,  cached);	  ESCHRONIZED_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
142	[BUG]  [BUGGY]  ESCHRONIZED_STRINGS.put(cached,  s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCHRONIZED_STRINGS.put(cached,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCHRONIZED_STRINGS.put(cached,  s);	  ESCHRONIZED_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
143	[BUG]  [BUGGY]  cc.addJsString(cachedd);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cc.addJsString(cachedd);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cc.addJsString(cachedd);	  cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
144	[BUG]  [BUGGY]  cached.add(cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached.add(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached.add(cached);	  cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
145	[BUG]  [BUGGY]  cc.addJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cc.addJsString(jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cc.addJsString(jsString);	  cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
146	[BUG]  [BUGGY]  cc.addJsString(cached,  cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cc.addJsString(cached,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cc.addJsString(cached,  cached);	  cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
147	[BUG]  [BUGGY]  cc.addCached(cached);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cc.addCached(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cc.addCached(cached);	  cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
148	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildObjectContext(context,  cached);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
149	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildObjectContext(s);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
150	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildObjectContext(cached);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
151	[BUG]  [BUGGY]  Context  cc  =  Context.createChildContext(context,  cached);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildContext(context,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildContext(context,  cached);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
152	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  context);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildObjectContext(s,  context);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
153	[BUG]  [BUGGY]  Cached  <  String>  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  String>  cached  =  jsString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  String>  cached  =  jsString(s);	  if(cached    ==    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
154	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(chunk);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(chunk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.get(chunk);	  cached    =    ESCAPED_JS_STRINGS.put(cached,    cached);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
155	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(lhsContext);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildObjectContext(lhsContext);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
156	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  context);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildObjectContext(null,  context);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
157	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(consume);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(consume);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildObjectContext(consume);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
158	[BUG]  [BUGGY]  ESC_ESCAPED_JS_STRINGS.put(cached,  s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESC_ESCAPED_JS_STRINGS.put(cached,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESC_ESCAPED_JS_STRINGS.put(cached,  s);	  ESC_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
159	[BUG]  [BUGGY]  EXTENDS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  EXTENDS.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	EXTENDS.put(s,  cached);	  ESCHRONIZED_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
160	[BUG]  [BUGGY]  cached  =  jsStringStructure.get(s,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringStructure.get(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringStructure.get(s,  cached);	  cached    =    ESCAPED_JS_STRINGS.get(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
161	[BUG]  [BUGGY]  cached  =  jsStrings.get(s,  cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStrings.get(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStrings.get(s,  cached);	  cached    =    ESCAPED_JS_STRINGS.get(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
162	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  -  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(s,  cached  -  1);	  CACHED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
163	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  *  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(s,  cached  *  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(s,  cached  *  1);	  CACHED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
164	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(consume);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(consume);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(consume);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
165	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(null,  context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(null,  context);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(null,  context);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
166	[BUG]  [BUGGY]  cached  =  JS_STRING(ESCAPED_JS_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRING(ESCAPED_JS_STRINGS.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRING(ESCAPED_JS_STRINGS.put(s,  cached);	  cached    =    jsString(ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
167	[BUG]  [BUGGY]  cached  =  JS_STRING(ESCAPED_JS_STRINGS.get(s,  cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRING(ESCAPED_JS_STRINGS.get(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRING(ESCAPED_JS_STRINGS.get(s,  cached);	  cached    =    jsString(ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
168	[BUG]  [BUGGY]  cached  =  jsStringSeparator.get(chk);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringSeparator.get(chk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringSeparator.get(chk);	  cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
169	[BUG]  [BUGGY]  Cached  <  String>  cached  =  JsString.valueOf(cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  String>  cached  =  JsString.valueOf(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  String>  cached  =  JsString.valueOf(cached);	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
170	[BUG]  [BUGGY]  ced  =  JsString.valueOf(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ced  =  JsString.valueOf(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ced  =  JsString.valueOf(cached);	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
171	[BUG]  [BUGGY]  Context  cc  =  Context.current();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.current();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.current();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
172	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(null);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext(null);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContext(null);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
173	[BUG]  [BUGGY]  ESCH_STRINGS.put(s,  null);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCH_STRINGS.put(s,  null);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCH_STRINGS.put(s,  null);	  ESCAPED_JS_STRINGS.put(cached,    null);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
174	[BUG]  [BUGGY]  cached  =  cached.get(s,  0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cached.get(s,  0);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cached.get(s,  0);	  cached    =    cached.put(s,    ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
175	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(chunks);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.get(chunks);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.get(chunks);	  cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
176	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(key);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.get(key);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.get(key);	  cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
177	[BUG]  [BUGGY]  cached  =  esCAPED_JS_STRINGS.get(chunk);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  esCAPED_JS_STRINGS.get(chunk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  esCAPED_JS_STRINGS.get(chunk);	  cached    =    esCAPED_JS_STRINGS.get(cached);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
178	[BUG]  [BUGGY]  ESCHRONIZED_JS_STRINGS.put(s,  jsString);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCHRONIZED_JS_STRINGS.put(s,  jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCHRONIZED_JS_STRINGS.put(s,  jsString);	  ESCHRONIZED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
179	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(chunk,  cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(chunk,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(chunk,  cached);	  CACHED_JS_STRINGS.put(cached,    cached);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
180	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(cached  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(cached  +  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.get(cached  +  1);	  cached    =    ESCAPED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
181	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s,  cached  +  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s,  cached  +  2);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.get(s,  cached  +  2);	  cached    =    ESCAPED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
182	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(chunk,  s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(chunk,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(chunk,  s);	  CACHED_JS_STRINGS.put(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
183	[BUG]  [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(cached,  s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(cached,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	OSG_ESCAPED_JS_STRINGS.put(cached,  s);	  OSG_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
184	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(chunk,  jsString);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(chunk,  jsString);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(chunk,  jsString);	  CACHED_JS_STRINGS.put(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
185	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  *  1,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  *  1,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  *  1,  cached);	  ESCAPED_JS_STRINGS.put(s,    cached    +    1,    cached);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
186	[BUG]  [BUGGY]  ced  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ced  =  jsString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ced  =  jsString(s);	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
187	[BUG]  [BUGGY]  Cached  <  String>cached  =  cached.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  String>cached  =  cached.toLowerCase();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  String>cached  =  cached.toLowerCase();	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
188	[BUG]  [BUGGY]  Cached  <  String>cached  =  cached.jsString();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <  String>cached  =  cached.jsString();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <  String>cached  =  cached.jsString();	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
189	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  getCurrentContext();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  getCurrentContext();	  Context    cc    =    Context.getCurrentContext();    cached.put(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
190	[BUG]  [BUGGY]  cached.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached.addJsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached.addJsString(cached);	  cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
191	[BUG]  [BUGGY]  cached  =  cc.put(JS_STRINGS,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.put(JS_STRINGS,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.put(JS_STRINGS,  cached);	  cached    =    cc.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
192	[BUG]  [BUGGY]  cached  =  cc.findCachedString(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.findCachedString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.findCachedString(s);	  cached    =    cc.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
193	[BUG]  [BUGGY]  cached  =  jsString(JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(JS_STRINGS.get(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(JS_STRINGS.get(s);	  cached    =    jsString(ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
194	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.get(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.get(cached);	  cached    =    jsString(ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
195	[BUG]  [BUGGY]  cached  =  JSString(ESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JSString(ESCAPED_JS_STRINGS.get(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JSString(ESCAPED_JS_STRINGS.get(s);	  cached    =    jsString(ESCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
196	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  cc);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  cc);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  cc);	  Context    rhsContext    =    Context.createChildObjectContext(context,    cached);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
197	[BUG]  [BUGGY]  cached  =  JsStringUtilities.jsString(cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JsStringUtilities.jsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JsStringUtilities.jsString(cached);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
198	[BUG]  [BUGGY]  cached  =  JsStringUtilities.jsString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JsStringUtilities.jsString(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JsStringUtilities.jsString(s);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
199	[BUG]  [BUGGY]  cached  =  jsString(CASED_JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(CASED_JS_STRINGS);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(CASED_JS_STRINGS);	  cached    =    jsString(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
200	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  *  3);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  *  3);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  *  3);	  ESCAPED_JS_STRINGS.put(s,    cached    +    3);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
201	[BUG]  [BUGGY]  cached  =  cc.get(chk);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.get(chk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.get(chk);	  cached    =    cc.get(s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
202	[BUG]  [BUGGY]  cached  =  jsStringStructure.get(chk);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringStructure.get(chk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringStructure.get(chk);	  cached    =    jsStringStructure.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
203	[BUG]  [BUGGY]  CACHED_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_STRINGS.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_STRINGS.put(s,  cached);	  ESCH_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
204	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  +  11);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  +  11);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  +  11);	  ESCAPED_JS_STRINGS.put(s,    cached    +    4);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
205	[BUG]  [BUGGY]  cached  =  jsStrings.get(chunk);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStrings.get(chunk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStrings.get(chunk);	  cached    =    jsStrings.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
206	[BUG]  [BUGGY]  Context  cc  =  context.createContext(cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  context.createContext(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  context.createContext(cached);	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
207	[BUG]  [BUGGY]  ERROR_DANGLING_ELSE.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ERROR_DANGLING_ELSE.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ERROR_DANGLING_ELSE.put(s,  cached);	  ESCHRONIZED_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
208	[BUG]  [BUGGY]  EXPR_RESULT.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  EXPR_RESULT.put(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	EXPR_RESULT.put(s,  cached);	  ESCHRONIZED_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
209	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached  *  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached  *  1);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.put(s,  cached  *  1);	  cached    =    ESCAPED_JS_STRINGS.put(s,    cached    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
210	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  +  31);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  +  31);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  +  31);	  ESCAPED_JS_STRINGS.put(s,    cached    +    4);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
211	[BUG]  [BUGGY]  cached  =  jsStringStructure.get(chunk);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringStructure.get(chunk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringStructure.get(chunk);	  cached    =    jsStringStructure.get(s);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
212	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  /  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  /  2);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  /  2);	  ESCAPED_JS_STRINGS.put(s,    cached    +    2);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
213	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(cachedd,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(cachedd,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(cachedd,  cached);	  CACHED_JS_STRINGS.put(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
214	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  cached  =  cc.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  getCurrentContext();  cached  =  cc.addJsString(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  getCurrentContext();  cached  =  cc.addJsString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
215	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
216	[BUG]  [BUGGY]  cached  =  jsStringSeparator.convert(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringSeparator.convert(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringSeparator.convert(s);	  cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
217	[BUG]  [BUGGY]  cached  =  jsStringSeparator.indexOf(')');  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStringSeparator.indexOf(')');  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStringSeparator.indexOf(')');	  cached    =    jsStringSeparator.get(s);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
218	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  cached.put(s,  cc);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  getCurrentContext();  cached.put(s,  cc);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  getCurrentContext();  cached.put(s,  cc);	  Context    cc    =    Context.getCurrentContext();    cached.put(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
219	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis();  cached.put(s,  cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.currentTimeMillis();  cached.put(s,  cc);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.currentTimeMillis();  cached.put(s,  cc);	  Context    cc    =    Context.getCurrentContext();    cached.put(s,    cc);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
220	[BUG]  [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  jsString(cached));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  jsString(cached));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	OSG_ESCAPED_JS_STRINGS.put(s,  jsString(cached));	  OSG_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
221	[BUG]  [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached?  Boolean.TRUE  :  Boolean.FALSE);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached?  Boolean.TRUE  :  Boolean.FALSE);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	OSG_ESCAPED_JS_STRINGS.put(s,  cached?  Boolean.TRUE  :  Boolean.FALSE);	  OSG_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
222	[BUG]  [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached?  JsEncoder.getInstance()  :  JsEncoder.getInstance());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  OSG_ESCAPED_JS_STRINGS.put(s,  cached?  JsEncoder.getInstance()  :  JsEncoder.getInstance());  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	OSG_ESCAPED_JS_STRINGS.put(s,  cached?  JsEncoder.getInstance()  :  JsEncoder.getInstance());	  OSG_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
223	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(desc,  cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED_JS_STRINGS.put(desc,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(desc,  cached);	  CACHED_JS_STRINGS.put(cached,    cached);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
224	[BUG]  [BUGGY]  jsString  =  CACHED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  jsString  =  CACHED_JS_STRINGS.get(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	jsString  =  CACHED_JS_STRINGS.get(s);	  CACHED_JS_STRINGS.put(s,    jsString);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
225	[BUG]  [BUGGY]  cached  =  jsString(chunk);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(chunk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(chunk);	  cached    =    jsString(ESCAPED_JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
226	[BUG]  [BUGGY]  Cached  <=  null  ||  cached.length()  ==  0)  {  cached  =  JsString.valueOf(cached);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <=  null  ||  cached.length()  ==  0)  {  cached  =  JsString.valueOf(cached);  }  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <=  null  ||  cached.length()  ==  0)  {  cached  =  JsString.valueOf(cached);  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
227	[BUG]  [BUGGY]  Cached  <=  null  ||  cached.equals(JsString.valueOf(cached));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Cached  <=  null  ||  cached.equals(JsString.valueOf(cached));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Cached  <=  null  ||  cached.equals(JsString.valueOf(cached));	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
228	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.currentTimeMillis();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
229	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
230	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createCurrentContext(context);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createCurrentContext(context);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
231	[BUG]  [BUGGY]  cached  =  cc.add(cached,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.add(cached,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.add(cached,  s);	  cached    =    cc.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
232	[BUG]  [BUGGY]  cached  =  cc.getCached(s,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.getCached(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.getCached(s,  cached);	  cached    =    cc.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
233	[BUG]  [BUGGY]  cached  =  cc.convert(s,  cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.convert(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.convert(s,  cached);	  cached    =    cc.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
234	[BUG]  [BUGGY]  cached  =  jsString(s.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(s.toUpperCase());  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(s.toUpperCase());	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
235	[BUG]  [BUGGY]  cached  =  jsString(s.substring(1));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsString(s.substring(1));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsString(s.substring(1));	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
236	[BUG]  [BUGGY]  ESC_ESCAPED_JS_STRINGS.put(cached,  cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESC_ESCAPED_JS_STRINGS.put(cached,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESC_ESCAPED_JS_STRINGS.put(cached,  cached);	  ESC_ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
237	[BUG]  [BUGGY]  Character(cached!=  null)  {  cached  =  JsStringUtil.jsString(cached);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Character(cached!=  null)  {  cached  =  JsStringUtil.jsString(cached);  }  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Character(cached!=  null)  {  cached  =  JsStringUtil.jsString(cached);  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
238	[BUG]  [BUGGY]  Character(cached)  {  cached  =  JsStringUtil.jsString(cached);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Character(cached)  {  cached  =  JsStringUtil.jsString(cached);  }  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Character(cached)  {  cached  =  JsStringUtil.jsString(cached);  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
239	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  }  else  {  Context.codeBug();  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  }  else  {  Context.codeBug();  }  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	if(cached  ==  null)  {  cached  =  jsString(s);  }  else  {  Context.codeBug();  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
240	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()  >  0)  {  cached  =  jsString(s);  }  else  {  Context.codeBug();  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  if(cached!=  null  &&  cached.length()  >  0)  {  cached  =  jsString(s);  }  else  {  Context.codeBug();  }  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	if(cached!=  null  &&  cached.length()  >  0)  {  cached  =  jsString(s);  }  else  {  Context.codeBug();  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
241	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  }  else  {  Context.codeBug();  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  }  else  {  Context.codeBug();  }  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  }  else  {  Context.codeBug();  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
242	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()  ==  0)  {  cached  =  jsString(s);  }  else  {  Context.codeBug();  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  if(cached!=  null  &&  cached.length()  ==  0)  {  cached  =  jsString(s);  }  else  {  Context.codeBug();  }  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	if(cached!=  null  &&  cached.length()  ==  0)  {  cached  =  jsString(s);  }  else  {  Context.codeBug();  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
243	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  this);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  this);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  cached,  this);	  Context    rhsContext    =    Context.createChildObjectContext(context,    cached);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
244	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(rhsContext);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(rhsContext);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildObjectContext(rhsContext);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
245	[BUG]  [BUGGY]  cached  =  jsStrings.remove(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  jsStrings.remove(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  jsStrings.remove(s);	  cached    =    jsStrings.get(s);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
246	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  cached);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	Context  cc  =  Context.createChildObjectContext(s,  cached);	  ESCHRONIZED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
247	[BUG]  [BUGGY]  cached  =  JS_STRINGS.peek();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.peek();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.peek();	  cached    =    JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
248	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(charAt(s));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  JS_STRINGS.get(charAt(s));  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  JS_STRINGS.get(charAt(s));	  cached    =    JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
249	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  +  1,  this);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  +  1,  this);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  +  1,  this);	  ESCAPED_JS_STRINGS.put(s,    cached    +    1,    cached);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
250	[BUG]  [BUGGY]  cached  =  esCAPED_JS_STRINGS.get(chk);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  esCAPED_JS_STRINGS.get(chk);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  esCAPED_JS_STRINGS.get(chk);	  cached    =    esCAPED_JS_STRINGS.get(s);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
251	[BUG]  [BUGGY]  cached  =  cc.getCurrentSegment();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cached  =  cc.getCurrentSegment();  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  cc.getCurrentSegment();	  cached    =    cc.get(s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
252	[BUG]  [BUGGY]  CACHED  =  ESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  CACHED  =  ESCAPED_JS_STRINGS.get(s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED  =  ESCAPED_JS_STRINGS.get(s);	  ESCH_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
253	[BUG]  [BUGGY]  cc.addJsString(cachedd,  s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cc.addJsString(cachedd,  s);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cc.addJsString(cachedd,  s);	  cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
254	[BUG]  [BUGGY]  cc.addJsString(cachedd,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);      [BUGGY]  cc.addJsString(cachedd,  cached);  [BUGGY]      }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cc.addJsString(cachedd,  cached);	  cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
