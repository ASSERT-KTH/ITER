bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  +  1);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached  +  1);  [BUGGY]  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  cached  +  1);	ESCAPED_JS_STRINGS.put(s,  cached);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.put(s,  cached);  [BUGGY]  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.put(s,  cached);	ESCAPED_JS_STRINGS.put(s,  cached);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
3	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(cached,  cached);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  [BUGGY]  ESCAPED_JS_STRINGS.put(cached,  cached);  [BUGGY]  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(cached,  cached);	ESCAPED_JS_STRINGS.put(s,  cached);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s);  [BUGGY]  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	cached  =  ESCAPED_JS_STRINGS.get(s);	ESCAPED_JS_STRINGS.put(s,  cached);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  [BUGGY]    [BUGGY]  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	  	ESCAPED_JS_STRINGS.put(s,  cached);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  CACHED_JS_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  [BUGGY]  CACHED_JS_STRINGS.put(s,  cached);  [BUGGY]  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	CACHED_JS_STRINGS.put(s,  cached);	ESCAPED_JS_STRINGS.put(s,  cached);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
7	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  null);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  null);  [BUGGY]  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	951	951	1	replace	ESCAPED_JS_STRINGS.put(s,  null);	ESCAPED_JS_STRINGS.put(s,  cached);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
