bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(AsciiCharacter.toLowerCase(c),  quote);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(AsciiCharacter.toLowerCase(c),  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(AsciiCharacter.toLowerCase(c),  quote);	  sb.append(AsciiCharacter.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
2	[BUG]  [BUGGY]  sb.append(AsciiCharacter.toLowerCase(c)+  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(AsciiCharacter.toLowerCase(c)+  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(AsciiCharacter.toLowerCase(c)+  1);	  sb.append(AsciiCharacter.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
3	[BUG]  [BUGGY]  sb.append(AsciiCharacter.toLowerCase(c)+  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(AsciiCharacter.toLowerCase(c)+  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(AsciiCharacter.toLowerCase(c)+  quote);	  sb.append(AsciiCharacter.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
4	[BUG]  [BUGGY]  sb.append(asciiCharacter.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(asciiCharacter.toLowerCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(asciiCharacter.toLowerCase(c));	  sb.append(AsciiCharacter.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
5	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.charAt(c));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.charAt(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.charAt(c));	  sb.append(quoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
6	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.charAt(0));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.charAt(0));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.charAt(0));	  sb.append(quoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
7	[BUG]  [BUGGY]  sb.append(strEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(strEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(strEscape);	  sb.append(quoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
8	[BUG]  [BUGGY]  sb.append( "] ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "] ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "] ");	  sb.append(']');    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
9	[BUG]  [BUGGY]  sb.append(']').append(quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(']').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(']').append(quote);	  sb.append(']');    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
10	[BUG]  [BUGGY]  sb.append(backslashEscape,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(backslashEscape,  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(backslashEscape,  doublequoteEscape);	  sb.append(doublequoteEscape,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
11	[BUG]  [BUGGY]  sb.append(singlequoteEscape,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(singlequoteEscape,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(singlequoteEscape,  backslashEscape);	  sb.append(doublequoteEscape,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
12	[BUG]  [BUGGY]  sb.append(strEscape,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(strEscape,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(strEscape,  backslashEscape);	  sb.append(doublequoteEscape,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
13	[BUG]  [BUGGY]  sb.append(c,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  backslashEscape);	  sb.append(doublequoteEscape,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
14	[BUG]  [BUGGY]  sb.append(quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote,  backslashEscape);	  sb.append(doublequoteEscape,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
15	[BUG]  [BUGGY]  sb.append(price,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(price,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(price,  backslashEscape);	  sb.append(doublequoteEscape,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
16	[BUG]  [BUGGY]  sb.append( ",' ").append(quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",' ").append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",' ").append(quote);	  sb.append(   ",'   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
17	[BUG]  [BUGGY]  sb.append( ",' ").append(c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",' ").append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",' ").append(c);	  sb.append(   ",'   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
18	[BUG]  [BUGGY]  sb.append( "',' ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "',' ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "',' ");	  sb.append(   ",'   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
19	[BUG]  [BUGGY]  sb.append('n').append(c);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('n').append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('n').append(c);	  sb.append('n').append(quote);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
20	[BUG]  [BUGGY]  sb.append(c).append(quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c).append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c).append(quote);	  sb.append('n').append(quote);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
21	[BUG]  [BUGGY]  sb.append('n').append(backslashEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('n').append(backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('n').append(backslashEscape);	  sb.append('n').append(quote);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
22	[BUG]  [BUGGY]  sb.append('n').append(quoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('n').append(quoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('n').append(quoteEscape);	  sb.append('n').append(quote);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
23	[BUG]  [BUGGY]  sb.append('#').append(c);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('#').append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('#').append(c);	  sb.append('n').append(quote);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
24	[BUG]  [BUGGY]  sb.append('N').append(c);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('N').append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('N').append(c);	  sb.append('n').append(quote);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
25	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c),  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c),  backslashEscape);	  sb.append(Character.toUpperCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c),  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c),  quote,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c),  quote,  backslashEscape);	  sb.append(Character.toUpperCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  sb.append(c,  Character.toUpperCase(c));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toUpperCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toUpperCase(c));	  sb.append(Character.toUpperCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c),  quote  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c),  quote  +  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c),  quote  +  1);	  sb.append(Character.toUpperCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c),  quote,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c),  quote,  outputCharsetEncoder);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c),  quote,  outputCharsetEncoder);	  sb.append(Character.toUpperCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  sb.append( "[null] ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "[null] ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "[null] ");	  sb.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  sb.append( "null ",  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "null ",  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "null ",  quote);	  sb.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  sb.append( "  <  null> ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "  <  null> ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "  <  null> ");	  sb.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  sb.append(';').append(quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(';').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(';').append(quote);	  sb.append(';');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
34	[BUG]  [BUGGY]  sb.append(';').append(c);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(';').append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(';').append(c);	  sb.append(';');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  sb.append(';',  c);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(';',  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(';',  c);	  sb.append(';');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  sb.append('n',  c  +  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('n',  c  +  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('n',  c  +  1);	  sb.append('n',    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
37	[BUG]  [BUGGY]  sb.append('#',  c);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('#',  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('#',  c);	  sb.append('n',    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
38	[BUG]  [BUGGY]  sb.append('[',  c);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('[',  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('[',  c);	  sb.append('n',    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
39	[BUG]  [BUGGY]  sb.append('N',  c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('N',  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('N',  c);	  sb.append('n',    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
40	[BUG]  [BUGGY]  sb.append( ",null ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",null ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",null ");	  sb.append(   ",n   ");    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
41	[BUG]  [BUGGY]  sb.append( ",null ",  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",null ",  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",null ",  quote);	  sb.append(   ",n   ");    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
42	[BUG]  [BUGGY]  sb.append( ";next ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";next ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";next ");	  sb.append(   ";nn   ");    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
43	[BUG]  [BUGGY]  sb.append( ";native ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";native ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";native ");	  sb.append(   ";nn   ");    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
44	[BUG]  [BUGGY]  sb.append( ";nt ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";nt ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";nt ");	  sb.append(   ";nn   ");    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
45	[BUG]  [BUGGY]  sb.append( ";non ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";non ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";non ");	  sb.append(   ";nn   ");    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
46	[BUG]  [BUGGY]  sb.append(c,  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  quote,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  quote,  backslashEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
47	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  backslashEscape,  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  backslashEscape,  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  backslashEscape,  quote);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
48	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote,  doublequoteEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
49	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  backslashEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  backslashEscape,  outputCharsetEncoder);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote,  backslashEscape,  outputCharsetEncoder);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
50	[BUG]  [BUGGY]  sb.append(CaseConsumer.toLowerCase(c),  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toLowerCase(c),  quote,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toLowerCase(c),  quote,  backslashEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
51	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  backslashEscape,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  backslashEscape,  singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote,  backslashEscape,  singlequoteEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
52	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote,  singlequoteEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
53	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)+  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c)+  2);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c)+  2);	  sb.append(Character.toLowerCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
54	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)/  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c)/  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c)/  1);	  sb.append(Character.toLowerCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
55	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(c)+  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toLowerCase(c)+  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toLowerCase(c)+  1);	  sb.append(Character.toLowerCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
56	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)+  4);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c)+  4);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c)+  4);	  sb.append(Character.toLowerCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
57	[BUG]  [BUGGY]  sb.append( "#null ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "#null ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "#null ");	  sb.append(   "#n   ");    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
58	[BUG]  [BUGGY]  sb.append( "#next ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "#next ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "#next ");	  sb.append(   "#n   ");    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
59	[BUG]  [BUGGY]  sb.append( "#none ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "#none ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "#none ");	  sb.append(   "#n   ");    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
60	[BUG]  [BUGGY]  sb.append( "#no-char ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "#no-char ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "#no-char ");	  sb.append(   "#n   ");    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
61	[BUG]  [BUGGY]  sb.append( "#x ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "#x ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "#x ");	  sb.append(   "#n   ");    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
62	[BUG]  [BUGGY]  sb.append( "negative ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "negative ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "negative ");	  sb.append(   ";negative   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
63	[BUG]  [BUGGY]  sb.append( ";negative: ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";negative: ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";negative: ");	  sb.append(   ";negative   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
64	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  quote);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  2);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  4);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  4);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  4);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
67	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  c);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  c);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
68	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  c);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  c);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
69	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  3);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  3);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  3);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
70	[BUG]  [BUGGY]  sb.append(hexJavaScriptRepresentation,  c);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(hexJavaScriptRepresentation,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(hexJavaScriptRepresentation,  c);	  sb.append(hexJavaScriptRepresentation);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
71	[BUG]  [BUGGY]  sb.append(HEX_CHARS);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(HEX_CHARS);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(HEX_CHARS);	  sb.append(hexJavaScriptRepresentation);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
72	[BUG]  [BUGGY]  sb.append(CaseConsumer.toLowerCase(c),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toLowerCase(c),  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toLowerCase(c),  backslashEscape);	  sb.append(CaseConsumer.toLowerCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
73	[BUG]  [BUGGY]  sb.append(CaseConsumer.toLowerCase(c),  quote  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toLowerCase(c),  quote  +  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toLowerCase(c),  quote  +  1);	  sb.append(CaseConsumer.toLowerCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
74	[BUG]  [BUGGY]  sb.append(CaseConsumer.toUpperCase(c),  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toUpperCase(c),  quote,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toUpperCase(c),  quote,  backslashEscape);	  sb.append(CaseConsumer.toLowerCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
75	[BUG]  [BUGGY]  sb.append(CaseConsumer.toLowerCase(c)+  quote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toLowerCase(c)+  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toLowerCase(c)+  quote);	  sb.append(CaseConsumer.toLowerCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
76	[BUG]  [BUGGY]  sb.append( "no ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "no ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "no ");	  sb.append(   ";no   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
77	[BUG]  [BUGGY]  sb.append( ";no ",  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";no ",  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";no ",  quote);	  sb.append(   ";no   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
78	[BUG]  [BUGGY]  sb.append( ".no ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ".no ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ".no ");	  sb.append(   ";no   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
79	[BUG]  [BUGGY]  sb.append( ";no. ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";no. ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";no. ");	  sb.append(   ";no   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
80	[BUG]  [BUGGY]  sb.append( ",n ",  c);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",n ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",n ",  c);	  sb.append(   ",   ",    c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
81	[BUG]  [BUGGY]  sb.append( ", ").append(singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ", ").append(singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ", ").append(singlequoteEscape);	  sb.append(   ",       ").append(quote);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
82	[BUG]  [BUGGY]  sb.append(',').append(c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(',').append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(',').append(c);	  sb.append(   ",       ").append(quote);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
83	[BUG]  [BUGGY]  sb.append( ",n ").append(quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",n ").append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",n ").append(quote);	  sb.append(   ",       ").append(quote);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
84	[BUG]  [BUGGY]  sb.append( ", ").append(c);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ", ").append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ", ").append(c);	  sb.append(   ",       ").append(quote);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
85	[BUG]  [BUGGY]  sb.append( ",n ").append(c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",n ").append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",n ").append(c);	  sb.append(   ",       ").append(quote);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
86	[BUG]  [BUGGY]  sb.append( ": ").append(c);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ": ").append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ": ").append(c);	  sb.append(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  sb.append( ": ").append(quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ": ").append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ": ").append(quote);	  sb.append(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
88	[BUG]  [BUGGY]  sb.append( ":n ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ":n ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ":n ");	  sb.append(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
89	[BUG]  [BUGGY]  sb.append( ": ".charAt(c));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ": ".charAt(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ": ".charAt(c));	  sb.append(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
90	[BUG]  [BUGGY]  sb.append( ":: ").append(c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ":: ").append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ":: ").append(c);	  sb.append(   "::   ");    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
91	[BUG]  [BUGGY]  sb.append( ":: ").append(quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ":: ").append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ":: ").append(quote);	  sb.append(   "::   ");    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
92	[BUG]  [BUGGY]  sb.append( ":: "  +  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ":: "  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ":: "  +  quote);	  sb.append(   "::   ");    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
93	[BUG]  [BUGGY]  sb.append( "[:: ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "[:: ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "[:: ");	  sb.append(   "::   ");    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
94	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	appendHexJavaScriptRepresentation(sb,  c,  quote);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
95	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	appendHexJavaScriptRepresentation(sb,  c,  backslashEscape);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
96	[BUG]  [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  AppendHexJavaScriptRepresentation(sb,  c,  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	AppendHexJavaScriptRepresentation(sb,  c,  quote);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  appendHexJavaScriptRepresentation(sb,  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	appendHexJavaScriptRepresentation(sb,  quote);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  appendJavaScriptRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  appendJavaScriptRepresentation(sb,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	appendJavaScriptRepresentation(sb,  c);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
99	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  2);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  2);	  sb.append(Character.toUpperCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
100	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)/  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)/  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)/  1);	  sb.append(Character.toUpperCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
101	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  4);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  4);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  4);	  sb.append(Character.toUpperCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
102	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  3);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  3);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  3);	  sb.append(Character.toUpperCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
103	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  backslashEscape);	  sb.append(Character.toUpperCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
104	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  quote,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  quote,  backslashEscape);	  sb.append(Character.toUpperCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
105	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  quote,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  quote,  outputCharsetEncoder);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  quote,  outputCharsetEncoder);	  sb.append(Character.toUpperCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
106	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  quote  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  quote  +  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  quote  +  1);	  sb.append(Character.toUpperCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  this.backslashEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  this.backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  this.backslashEscape);	  sb.append(Character.toUpperCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
108	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(c),  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toLowerCase(c),  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toLowerCase(c),  quote);	  sb.append(c,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
109	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(char));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toLowerCase(char));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toLowerCase(char));	  sb.append(c,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
110	[BUG]  [BUGGY]  sb.append(quote,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote,  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote,  doublequoteEscape);	  sb.append(doublequoteEscape,    quote);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
111	[BUG]  [BUGGY]  sb.append(backslashEscape,  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(backslashEscape,  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(backslashEscape,  quote);	  sb.append(doublequoteEscape,    quote);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
112	[BUG]  [BUGGY]  sb.append(singlequoteEscape,  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(singlequoteEscape,  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(singlequoteEscape,  quote);	  sb.append(doublequoteEscape,    quote);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
113	[BUG]  [BUGGY]  sb.append(price,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(price,  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(price,  doublequoteEscape);	  sb.append(doublequoteEscape,    quote);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
114	[BUG]  [BUGGY]  sb.append(char,  Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(char,  Character.toLowerCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(char,  Character.toLowerCase(c));	  sb.append(quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
115	[BUG]  [BUGGY]  sb.append(quote,  Character.toLowerCase(c),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote,  Character.toLowerCase(c),  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote,  Character.toLowerCase(c),  backslashEscape);	  sb.append(quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
116	[BUG]  [BUGGY]  sb.append(quote,  Character.toUpperCase(c));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote,  Character.toUpperCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote,  Character.toUpperCase(c));	  sb.append(quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
117	[BUG]  [BUGGY]  sb.append(quote,  Character.toLowerCase(c),  true);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote,  Character.toLowerCase(c),  true);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote,  Character.toLowerCase(c),  true);	  sb.append(quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
118	[BUG]  [BUGGY]  sb.append(',',  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(',',  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(',',  quote);	  sb.append(   ",   ",    quote);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
119	[BUG]  [BUGGY]  sb.append( ",n ",  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",n ",  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",n ",  quote);	  sb.append(   ",   ",    quote);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
120	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)+  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c)+  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c)+  backslashEscape);	  sb.append(Character.toLowerCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
121	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)+  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c)+  quote,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c)+  quote,  backslashEscape);	  sb.append(Character.toLowerCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
122	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)+  quote  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c)+  quote  +  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c)+  quote  +  1);	  sb.append(Character.toLowerCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
123	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)+  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c)+  singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c)+  singlequoteEscape);	  sb.append(Character.toLowerCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
124	[BUG]  [BUGGY]  sb.append(CaseConsumer.toLowerCase(c)+  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toLowerCase(c)+  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toLowerCase(c)+  1);	  sb.append(CaseConsumer.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
125	[BUG]  [BUGGY]  sb.append(CaseConsumer.toHexJavaScriptRepresentation(c));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toHexJavaScriptRepresentation(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toHexJavaScriptRepresentation(c));	  sb.append(CaseConsumer.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
126	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.toLowerCase(c),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.toLowerCase(c),  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.toLowerCase(c),  backslashEscape);	  sb.append(Character.toLowerCase(c),    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
127	[BUG]  [BUGGY]  sb.append(backslashEscape,  Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(backslashEscape,  Character.toLowerCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(backslashEscape,  Character.toLowerCase(c));	  sb.append(Character.toLowerCase(c),    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
128	[BUG]  [BUGGY]  sb.append(Integer.toHexString(c)+  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Integer.toHexString(c)+  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Integer.toHexString(c)+  1);	  sb.append(Integer.toHexString(c));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
129	[BUG]  [BUGGY]  sb.append(Integer.toHexString(c),  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Integer.toHexString(c),  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Integer.toHexString(c),  quote);	  sb.append(Integer.toHexString(c));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
130	[BUG]  [BUGGY]  sb.append(Character.toHexString(c));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toHexString(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toHexString(c));	  sb.append(Integer.toHexString(c));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
131	[BUG]  [BUGGY]  sb.append(Integer.toString(c));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Integer.toString(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Integer.toString(c));	  sb.append(Integer.toHexString(c));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
132	[BUG]  [BUGGY]  sb.append(Integer.toHexString(c  +  1));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Integer.toHexString(c  +  1));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Integer.toHexString(c  +  1));	  sb.append(Integer.toHexString(c));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
133	[BUG]  [BUGGY]  sb.append(Integer.toHexString(quote));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Integer.toHexString(quote));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Integer.toHexString(quote));	  sb.append(Integer.toHexString(c));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
134	[BUG]  [BUGGY]  sb.append(c  +  quote,  Character.toUpperCase(c));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  quote,  Character.toUpperCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  quote,  Character.toUpperCase(c));	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
135	[BUG]  [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  quote,  Character.toLowerCase(c),  backslashEscape);	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
136	[BUG]  [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  false);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  false);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  quote,  Character.toLowerCase(c),  false);	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
137	[BUG]  [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  true);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  true);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  quote,  Character.toLowerCase(c),  true);	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
138	[BUG]  [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(lhsContext));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(lhsContext));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  quote,  Character.toLowerCase(lhsContext));	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
139	[BUG]  [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c)+  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c)+  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  quote,  Character.toLowerCase(c)+  1);	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
140	[BUG]  [BUGGY]  sb.append('N').append(quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('N').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('N').append(quote);	  sb.append('N');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
141	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toLowerCase(singlequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toLowerCase(singlequoteEscape));	  sb.append(c,    Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
142	[BUG]  [BUGGY]  sb.append(c,  Character.toUpperCase(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toUpperCase(singlequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toUpperCase(singlequoteEscape));	  sb.append(c,    Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
143	[BUG]  [BUGGY]  sb.append(c,  Character.toUpperCase(quote));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toUpperCase(quote));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toUpperCase(quote));	  sb.append(c,    Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
144	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(singlequote));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toLowerCase(singlequote));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toLowerCase(singlequote));	  sb.append(c,    Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
145	[BUG]  [BUGGY]  sb.append(c,  character.toLowerCase(quote));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  character.toLowerCase(quote));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  character.toLowerCase(quote));	  sb.append(c,    Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
146	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(doublequoteEscape));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toLowerCase(doublequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toLowerCase(doublequoteEscape));	  sb.append(c,    Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
147	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(suffixEscape));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toLowerCase(suffixEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toLowerCase(suffixEscape));	  sb.append(c,    Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
148	[BUG]  [BUGGY]  sb.append(singlequoteEscape,  c);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(singlequoteEscape,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(singlequoteEscape,  c);	  sb.append(backslashEscape,    c);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
149	[BUG]  [BUGGY]  sb.append(suffixEscape,  c);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(suffixEscape,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(suffixEscape,  c);	  sb.append(backslashEscape,    c);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
150	[BUG]  [BUGGY]  sb.append(strEscape,  c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(strEscape,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(strEscape,  c);	  sb.append(backslashEscape,    c);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
151	[BUG]  [BUGGY]  sb.append(doublequoteEscape,  c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(doublequoteEscape,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(doublequoteEscape,  c);	  sb.append(backslashEscape,    c);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
152	[BUG]  [BUGGY]  sb.append( ";n:n ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";n:n ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";n:n ");	  sb.append(   ";n:   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
153	[BUG]  [BUGGY]  sb.append( "n: ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "n: ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "n: ");	  sb.append(   ";n:   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
154	[BUG]  [BUGGY]  sb.append(c;n: ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c;n: ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c;n: ");	  sb.append(   ";n:   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
155	[BUG]  [BUGGY]  sb.append( ";n: ",  quote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";n: ",  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";n: ",  quote);	  sb.append(   ";n:   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
156	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2);	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
157	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toCharArray());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toCharArray());	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
158	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString());	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
159	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.trim());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.trim());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.trim());	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
160	[BUG]  [BUGGY]  sb.append(AsciiCharacter.toUpperCase(c),  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(AsciiCharacter.toUpperCase(c),  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(AsciiCharacter.toUpperCase(c),  quote);	  sb.append(AsciiCharacter.toUpperCase(c));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
161	[BUG]  [BUGGY]  sb.append(AsciiCharacter.toUpperCase(c)+  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(AsciiCharacter.toUpperCase(c)+  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(AsciiCharacter.toUpperCase(c)+  quote);	  sb.append(AsciiCharacter.toUpperCase(c));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
162	[BUG]  [BUGGY]  sb.append(AsciiCharacter.toUpperCase(c)+  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(AsciiCharacter.toUpperCase(c)+  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(AsciiCharacter.toUpperCase(c)+  1);	  sb.append(AsciiCharacter.toUpperCase(c));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
163	[BUG]  [BUGGY]  sb.append('$').append(quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('$').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('$').append(quote);	  sb.append('$');    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
164	[BUG]  [BUGGY]  sb.append('$').append(Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('$').append(Character.toLowerCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('$').append(Character.toLowerCase(c));	  sb.append('$');    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
165	[BUG]  [BUGGY]  sb.append('$'  +  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('$'  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('$'  +  quote);	  sb.append('$');    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
166	[BUG]  [BUGGY]  sb.append('$').append(c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('$').append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('$').append(c);	  sb.append('$');    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
167	[BUG]  [BUGGY]  sb.append('$',  c);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('$',  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('$',  c);	  sb.append('$');    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
168	[BUG]  [BUGGY]  sb.append( "[ ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "[ ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "[ ");	  sb.append(   "       ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
169	[BUG]  [BUGGY]  sb.append(';',  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(';',  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(';',  quote);	  sb.append(   ";n   ",    quote);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
170	[BUG]  [BUGGY]  sb.append( ";n ", "n ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";n ", "n ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";n ", "n ");	  sb.append(   ";n   ",    quote);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
171	[BUG]  [BUGGY]  sb.append( "# ",  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "# ",  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "# ",  quote);	  sb.append(   "#   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
172	[BUG]  [BUGGY]  sb.append( "# ").append(c);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "# ").append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "# ").append(c);	  sb.append(   "#   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
173	[BUG]  [BUGGY]  sb.append('[').append(quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('[').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('[').append(quote);	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
174	[BUG]  [BUGGY]  sb.append('[').append(c);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('[').append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('[').append(c);	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
175	[BUG]  [BUGGY]  sb.append('['  +  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('['  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('['  +  quote);	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
176	[BUG]  [BUGGY]  sb.append( ";n ", ",  c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";n ", ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";n ", ",  c);	  sb.append(   ";n   ",    c);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
177	[BUG]  [BUGGY]  sb.append( ";n ", " ",  c);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";n ", " ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";n ", " ",  c);	  sb.append(   ";n   ",    c);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
178	[BUG]  [BUGGY]  sb.append('?',  c);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('?',  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('?',  c);	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
179	[BUG]  [BUGGY]  sb.append('?').append(quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('?').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('?').append(quote);	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
180	[BUG]  [BUGGY]  sb.append('?').append(c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('?').append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('?').append(c);	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
181	[BUG]  [BUGGY]  sb.append('?'  +  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('?'  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('?'  +  quote);	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
182	[BUG]  [BUGGY]  sb.append(':').append(quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(':').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(':').append(quote);	  sb.append(':');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
183	[BUG]  [BUGGY]  sb.append(':').append(c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(':').append(c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(':').append(c);	  sb.append(':');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
184	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(str.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
185	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  1);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
186	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s.length());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb  =  new  StringBuilder(s.length());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb  =  new  StringBuilder(s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
187	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length();  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length();	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
188	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(singlequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(singlequoteEscape));	  sb.append(Character.toUpperCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
189	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(char));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(char));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(char));	  sb.append(Character.toUpperCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
190	[BUG]  [BUGGY]  sb.append('+',  c);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('+',  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('+',  c);	  sb.append('+');    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
191	[BUG]  [BUGGY]  sb.append('+').append(quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('+').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('+').append(quote);	  sb.append('+');    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
192	[BUG]  [BUGGY]  sb.append('+'  +  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('+'  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('+'  +  quote);	  sb.append('+');    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
193	[BUG]  [BUGGY]  sb.append('/');  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('/');  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('/');	  sb.append('+');    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
194	[BUG]  [BUGGY]  sb.append('#').append(quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('#').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('#').append(quote);	  sb.append('#');    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
195	[BUG]  [BUGGY]  sb.append('#'  +  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('#'  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('#'  +  quote);	  sb.append('#');    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
196	[BUG]  [BUGGY]  sb.append( ";null ",  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";null ",  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";null ",  quote);	  sb.append(   ";null   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
197	[BUG]  [BUGGY]  sb.append( ";null ",  c);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";null ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";null ",  c);	  sb.append(   ";null   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
198	[BUG]  [BUGGY]  sb.append(CaseConsumer.toUpperCase(c),  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toUpperCase(c),  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toUpperCase(c),  quote);	  sb.append(CaseConsumer.toUpperCase(c));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
199	[BUG]  [BUGGY]  sb.append(CaseConsumer.toUpperCase(c)+  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toUpperCase(c)+  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toUpperCase(c)+  quote);	  sb.append(CaseConsumer.toUpperCase(c));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
200	[BUG]  [BUGGY]  sb.append(CaseConsumer.toUpperCase(c,  quote));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toUpperCase(c,  quote));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toUpperCase(c,  quote));	  sb.append(CaseConsumer.toUpperCase(c));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
201	[BUG]  [BUGGY]  sb.append(suffixEscape);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(suffixEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(suffixEscape);	  sb.append(backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
202	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(char));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(char));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(char));	  sb.append(Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
203	[BUG]  [BUGGY]  sb.append(c,  quote  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  quote  +  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  quote  +  1);	  sb.append(c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
204	[BUG]  [BUGGY]  sb.append(quote,  c);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote,  c);	  sb.append(c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
205	[BUG]  [BUGGY]  sb.append(c,  buf.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  buf.toString());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  buf.toString());	  sb.append(c,    quote);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
206	[BUG]  [BUGGY]  sb.append(',').append(quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(',').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(',').append(quote);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
207	[BUG]  [BUGGY]  sb.append(','  +  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(','  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(','  +  quote);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
208	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote  +  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote  +  2);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote  +  2);	  sb.append(Character.toLowerCase(c),    quote    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
209	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote  +  4);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote  +  4);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote  +  4);	  sb.append(Character.toLowerCase(c),    quote    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
210	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote  +  3);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote  +  3);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote  +  3);	  sb.append(Character.toLowerCase(c),    quote    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
211	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote  *  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote  *  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote  *  1);	  sb.append(Character.toLowerCase(c),    quote    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
212	[BUG]  [BUGGY]  sb.append(c  +  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  quote);	  sb.append(Character.toUpperCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
213	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  doublequoteEscape);	  sb.append(Character.toUpperCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
214	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  singlequoteEscape);	  sb.append(Character.toUpperCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
215	[BUG]  [BUGGY]  sb.append('[').append(quote).append( "] ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('[').append(quote).append( "] ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('[').append(quote).append( "] ");	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
216	[BUG]  [BUGGY]  sb.append( "[] ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "[] ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "[] ");	  sb.append(']');    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
217	[BUG]  [BUGGY]  sb.append( ";null ", "quote ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";null ", "quote ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";null ", "quote ");	  sb.append(   ";n   ",    quote);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
218	[BUG]  [BUGGY]  sb.append('?').append(backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('?').append(backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('?').append(backslashEscape);	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
219	[BUG]  [BUGGY]  sb.append( "?= ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "?= ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "?= ");	  sb.append('?');    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
220	[BUG]  [BUGGY]  sb.append( ": ".charAt(i));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ": ".charAt(i));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ": ".charAt(i));	  sb.append(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
221	[BUG]  [BUGGY]  sb.append( ": "  +  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ": "  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ": "  +  quote);	  sb.append(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
222	[BUG]  [BUGGY]  sb.append('$').append(Character.toUpperCase(c));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('$').append(Character.toUpperCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('$').append(Character.toUpperCase(c));	  sb.append('$');    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
223	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.toLowerCase(c),  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.toLowerCase(c),  quote,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.toLowerCase(c),  quote,  backslashEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
224	[BUG]  [BUGGY]  sb.append(c,  quote,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  quote,  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  quote,  doublequoteEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
225	[BUG]  [BUGGY]  sb.append(c,  quote,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  quote,  singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  quote,  singlequoteEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
226	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  doublequoteEscape,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  doublequoteEscape,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  doublequoteEscape,  backslashEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
227	[BUG]  [BUGGY]  sb.append(CaseConsumer.toUpperCase(c)+  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toUpperCase(c)+  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toUpperCase(c)+  1);	  sb.append(CaseConsumer.toUpperCase(c));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
228	[BUG]  [BUGGY]  sb.append(CaseConsumer.toUpperCase(c),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toUpperCase(c),  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toUpperCase(c),  backslashEscape);	  sb.append(CaseConsumer.toUpperCase(c));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
229	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(singlequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(singlequoteEscape));	  sb.append(Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
230	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(singlequote));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(singlequote));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(singlequote));	  sb.append(Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
231	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(doublequoteEscape));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(doublequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(doublequoteEscape));	  sb.append(Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
232	[BUG]  [BUGGY]  sb.append( "  }   ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "  }   ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "  }   ");	  sb.append(   "       ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
233	[BUG]  [BUGGY]  sb.append( ",null ",  c);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",null ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",null ",  c);	  sb.append(   ",n   ");    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
234	[BUG]  [BUGGY]  sb.append( ",null, ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",null, ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",null, ");	  sb.append(   ",n   ");    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
235	[BUG]  [BUGGY]  sb.append( ",   ",  doublequote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",   ",  doublequote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",   ",  doublequote);	  sb.append(   ",   ",    quote);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
236	[BUG]  [BUGGY]  sb.append( "# ",  c);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "# ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "# ",  c);	  sb.append(   "#   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
237	[BUG]  [BUGGY]  sb.append( "# ").append(quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "# ").append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "# ").append(quote);	  sb.append(   "#   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
238	[BUG]  [BUGGY]  sb.append( "#: ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "#: ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "#: ");	  sb.append(   "#   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
239	[BUG]  [BUGGY]  n:   ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  n:   ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	n:   ");	  sb.append(   ";n:   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
240	[BUG]  [BUGGY]  sb.append( ";n: ",  c);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";n: ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";n: ",  c);	  sb.append(   ";n:   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
241	[BUG]  [BUGGY]  sb.append( ";n: ".charAt(i));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";n: ".charAt(i));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";n: ".charAt(i));	  sb.append(   ";n:   ");    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
242	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.charAt(backslashEscape));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.charAt(backslashEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.charAt(backslashEscape));	  sb.append(backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
243	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.valueOf(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.valueOf(singlequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.valueOf(singlequoteEscape));	  sb.append(backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
244	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.toCharArray(backslashEscape));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.toCharArray(backslashEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.toCharArray(backslashEscape));	  sb.append(backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
245	[BUG]  [BUGGY]  sb.append(strquoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(strquoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(strquoteEscape);	  sb.append(backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
246	[BUG]  [BUGGY]  sb.append(c,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  singlequoteEscape);	  sb.append(Character.toLowerCase(c),    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
247	[BUG]  [BUGGY]  sb.append(c,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  outputCharsetEncoder);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  outputCharsetEncoder);	  sb.append(Character.toLowerCase(c),    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
248	[BUG]  [BUGGY]  sb.append(backslashEscape,  Character.toLowerCase(c),  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(backslashEscape,  Character.toLowerCase(c),  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(backslashEscape,  Character.toLowerCase(c),  quote);	  sb.append(Character.toLowerCase(c),    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
249	[BUG]  [BUGGY]  sb.append(',').append(singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(',').append(singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(',').append(singlequoteEscape);	  sb.append(   ",       ").append(quote);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
250	[BUG]  [BUGGY]  sb.append( ",n ").append(singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",n ").append(singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",n ").append(singlequoteEscape);	  sb.append(   ",       ").append(quote);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
251	[BUG]  [BUGGY]  sb.append( "NaN ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "NaN ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "NaN ");	  sb.append('N');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
252	[BUG]  [BUGGY]  sb.append('N'  +  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('N'  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('N'  +  quote);	  sb.append('N');    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
253	[BUG]  [BUGGY]  sb.append(c,  Character.toUpperCase(singlequote));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toUpperCase(singlequote));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toUpperCase(singlequote));	  sb.append(c,    Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
254	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(singlequote));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(singlequote));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(singlequote));	  sb.append(Character.toUpperCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
255	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(doublequoteEscape));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(doublequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(doublequoteEscape));	  sb.append(Character.toUpperCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
256	[BUG]  [BUGGY]  sb.append(doublequoteEscape,  quote  +  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(doublequoteEscape,  quote  +  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(doublequoteEscape,  quote  +  1);	  sb.append(doublequoteEscape,    quote);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
257	[BUG]  [BUGGY]  sb.append( ",n, ",  c);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",n, ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",n, ",  c);	  sb.append(   ",   ",    c);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
258	[BUG]  [BUGGY]  sb.append( "null ",  c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "null ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "null ",  c);	  sb.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
259	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(':');  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  if(sb!=  null)  {  sb.append(':');  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	if(sb!=  null)  {  sb.append(':');  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }	  sb.append(':');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
260	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(':');  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  if(sb!=  null)  {  sb.append(':');  }  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	if(sb!=  null)  {  sb.append(':');  }	  sb.append(':');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
261	[BUG]  [BUGGY]  sb.append(':'  +  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(':'  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(':'  +  quote);	  sb.append(':');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
262	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(':');  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  if(sb!=  null)  {  sb.append(':');  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	if(sb!=  null)  {  sb.append(':');  }  else  {  appendSinglequoteEscape(sb,  c);  }	  sb.append(':');    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
263	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
264	[BUG]  [BUGGY]  sb.append(c  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  1);	  sb.append(Character.toUpperCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
265	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)+  'n');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)+  'n');  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)+  'n');	  sb.append(Character.toUpperCase(c)+    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
266	[BUG]  [BUGGY]  sb.append('n').append(singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('n').append(singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('n').append(singlequoteEscape);	  sb.append('n').append(quote);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
267	[BUG]  [BUGGY]  sb.append('n').append(doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('n').append(doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('n').append(doublequoteEscape);	  sb.append('n').append(quote);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
268	[BUG]  [BUGGY]  sb.append(CaseConsumer.toLowerCase(c),  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toLowerCase(c),  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toLowerCase(c),  doublequoteEscape);	  sb.append(CaseConsumer.toLowerCase(c),    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
269	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sbuf.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sbuf.length());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(sbuf.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
270	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(suffixEscape.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(suffixEscape.length());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(suffixEscape.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
271	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(segment.length());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(segment.length());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(segment.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
272	[BUG]  [BUGGY]  sb.append( ";numeric ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";numeric ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";numeric ");	  sb.append(   ";nn   ");    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
273	[BUG]  [BUGGY]  sb.append( ";nano ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";nano ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";nano ");	  sb.append(   ";nn   ");    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
274	[BUG]  [BUGGY]  sb.append( ";nexus: ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";nexus: ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";nexus: ");	  sb.append(   ";nn   ");    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
275	[BUG]  [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  outputCharsetEncoder);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  quote,  Character.toLowerCase(c),  outputCharsetEncoder);	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
276	[BUG]  [BUGGY]  sb.append(quote  +  quote,  Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote  +  quote,  Character.toLowerCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote  +  quote,  Character.toLowerCase(c));	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
277	[BUG]  [BUGGY]  sb.append( ".null ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ".null ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ".null ");	  sb.append(   ";null   ");    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
278	[BUG]  [BUGGY]  sb.append( ";no ",  c);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";no ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";no ",  c);	  sb.append(   ";no   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
279	[BUG]  [BUGGY]  sb.append(quote,  Character.toLowerCase(c)+  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote,  Character.toLowerCase(c)+  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote,  Character.toLowerCase(c)+  1);	  sb.append(quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
280	[BUG]  [BUGGY]  sb.append( ";null ", "c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";null ", "c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";null ", "c);	  sb.append(   ";n   ",    c);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
281	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)+  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c)+  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c)+  doublequoteEscape);	  sb.append(Character.toLowerCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
282	[BUG]  [BUGGY]  sb.append( "#does  not  exist: ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "#does  not  exist: ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "#does  not  exist: ");	  sb.append(   "#n   ");    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
283	[BUG]  [BUGGY]  sb.append( "#no  response  provided ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "#no  response  provided ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "#no  response  provided ");	  sb.append(   "#n   ");    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
284	[BUG]  [BUGGY]  sb.append(Integer.toHexString(c),  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Integer.toHexString(c),  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Integer.toHexString(c),  1);	  sb.append(Integer.toHexString(c));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
285	[BUG]  [BUGGY]  sb.append( ":: ".charAt(i));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ":: ".charAt(i));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ":: ".charAt(i));	  sb.append(   "::   ");    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
286	[BUG]  [BUGGY]  sb.append(singlequoteEscape,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(singlequoteEscape,  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(singlequoteEscape,  doublequoteEscape);	  sb.append(doublequoteEscape,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
287	[BUG]  [BUGGY]  sb.append(backslashEscape,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(backslashEscape,  singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(backslashEscape,  singlequoteEscape);	  sb.append(doublequoteEscape,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
288	[BUG]  [BUGGY]  sb.append(singlequoteEscape,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(singlequoteEscape,  singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(singlequoteEscape,  singlequoteEscape);	  sb.append(doublequoteEscape,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
289	[BUG]  [BUGGY]  sb.append( ".negative ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ".negative ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ".negative ");	  sb.append(   ";negative   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
290	[BUG]  [BUGGY]  sb.append( ";negative ",  c);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";negative ",  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";negative ",  c);	  sb.append(   ";negative   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
291	[BUG]  [BUGGY]  sb.append(AsciiCharacter.toLowerCase(char));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(AsciiCharacter.toLowerCase(char));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(AsciiCharacter.toLowerCase(char));	  sb.append(AsciiCharacter.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
292	[BUG]  [BUGGY]  sb.append(AsciiCharacter.toHexJavaScriptRepresentation(c));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(AsciiCharacter.toHexJavaScriptRepresentation(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(AsciiCharacter.toHexJavaScriptRepresentation(c));	  sb.append(AsciiCharacter.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
293	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(c),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toLowerCase(c),  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toLowerCase(c),  backslashEscape);	  sb.append(c,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
294	[BUG]  [BUGGY]  sb.append(strquoteEscape,  c);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(strquoteEscape,  c);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(strquoteEscape,  c);	  sb.append(backslashEscape,    c);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
295	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	appendHexJavaScriptRepresentation(sb,  c,  outputCharsetEncoder);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
296	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  appendHexJavaScriptRepresentation(sb,  c,  1);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	appendHexJavaScriptRepresentation(sb,  c,  1);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
297	[BUG]  [BUGGY]  sb.append(',').append(backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(',').append(backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(',').append(backslashEscape);	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
298	[BUG]  [BUGGY]  sb.append(',').append(charAt(i));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(',').append(charAt(i));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(',').append(charAt(i));	  sb.append(',');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
299	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
300	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.length());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape.length());	  StringBuilder    sb    =    new    StringBuilder(s.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
301	[BUG]  [BUGGY]  sb.append( ",' "  +  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ",' "  +  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ",' "  +  quote);	  sb.append(   ",'   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
302	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.charAt(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.charAt(singlequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.charAt(singlequoteEscape));	  sb.append(quoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
303	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.toCharArray(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.toCharArray(singlequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.toCharArray(singlequoteEscape));	  sb.append(quoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
304	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.toHexString(c));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.toHexString(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.toHexString(c));	  sb.append(quoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
305	[BUG]  [BUGGY]  sb.append(CaseConsumer.toString(c));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(CaseConsumer.toString(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(CaseConsumer.toString(c));	  sb.append(CaseConsumer.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
306	[BUG]  [BUGGY]  sb.append('[').append(quote).append(']');  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('[').append(quote).append(']');  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('[').append(quote).append(']');	  sb.append('[');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
307	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(c,  sb);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  appendHexJavaScriptRepresentation(c,  sb);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	appendHexJavaScriptRepresentation(c,  sb);	  appendHexJavaScriptRepresentation(sb,    c);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
308	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.toString());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.toString());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.toString());	  sb.append(quoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
309	[BUG]  [BUGGY]  sb.append(SinglequoteEscape.toHexString());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(SinglequoteEscape.toHexString());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(SinglequoteEscape.toHexString());	  sb.append(quoteEscape);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
310	[BUG]  [BUGGY]  sb.append( ";' ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";' ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";' ");	  sb.append(';');    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
311	[BUG]  [BUGGY]  sb.append(Integer.toHexString(c,  quote));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Integer.toHexString(c,  quote));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Integer.toHexString(c,  quote));	  sb.append(Integer.toHexString(c));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
312	[BUG]  [BUGGY]  sb.append(Integer.toHexString(c).charAt(0));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Integer.toHexString(c).charAt(0));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Integer.toHexString(c).charAt(0));	  sb.append(Integer.toHexString(c));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
313	[BUG]  [BUGGY]  sb.append(c,  Character.toUpperCase(doublequoteEscape));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toUpperCase(doublequoteEscape));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toUpperCase(doublequoteEscape));	  sb.append(c,    Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
314	[BUG]  [BUGGY]  sb.append('>');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('>');  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('>');	  sb.append('#');    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
315	[BUG]  [BUGGY]  sb.append(Character.toOtherCase(c));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toOtherCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toOtherCase(c));	  sb.append(Character.toLowerCase(quote));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
316	[BUG]  [BUGGY]  sb.append(c).append('n').append(quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c).append('n').append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c).append('n').append(quote);	  sb.append('n').append(quote);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
317	[BUG]  [BUGGY]  sb.append(c,  Character.toLowerCase(quoted));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,  Character.toLowerCase(quoted));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,  Character.toLowerCase(quoted));	  sb.append(quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
318	[BUG]  [BUGGY]  sb.append(c, ",   ").append(quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c, ",   ").append(quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c, ",   ").append(quote);	  sb.append(   ",       ").append(quote);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
319	[BUG]  [BUGGY]  sb.append( ";n ", "quoten ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( ";n ", "quoten ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( ";n ", "quoten ");	  sb.append(   ";n   ",    quote);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
320	[BUG]  [BUGGY]  sb.append(quote,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote,  singlequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote,  singlequoteEscape);	  sb.append(doublequoteEscape,    quote);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
321	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c)/  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c)/  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c)/  quote);	  sb.append(Character.toLowerCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
322	[BUG]  [BUGGY]  sb.append(c;negative ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c;negative ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c;negative ");	  sb.append(   ";negative   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
323	[BUG]  [BUGGY]  sb.append(quote, ", ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(quote, ", ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(quote, ", ");	  sb.append(c,   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
324	[BUG]  [BUGGY]  sb.append(c, ":: ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c, ":: ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c, ":: ");	  sb.append(   "::   ");    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
325	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote  +  16);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote  +  16);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote  +  16);	  sb.append(Character.toLowerCase(c),    quote    +    1);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
326	[BUG]  [BUGGY]  sb.append(c, "null ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c, "null ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c, "null ");	  sb.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
327	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  s.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  s.length());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
328	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(separator.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(separator.length());  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	StringBuilder  sb  =  new  StringBuilder(separator.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
329	[BUG]  [BUGGY]  sb.append(c  +  1,  Character.toLowerCase(c));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  1,  Character.toLowerCase(c));  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  1,  Character.toLowerCase(c));	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
330	[BUG]  [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  outlineCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c  +  quote,  Character.toLowerCase(c),  outlineCharsetEncoder);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c  +  quote,  Character.toLowerCase(c),  outlineCharsetEncoder);	  sb.append(c    +    quote,    Character.toLowerCase(c));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
331	[BUG]  [BUGGY]  if(no)  {  sb.append( ";no ");  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  if(no)  {  sb.append( ";no ");  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	if(no)  {  sb.append( ";no ");  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }	  sb.append(   ";no   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
332	[BUG]  [BUGGY]  if(no)  {  sb.append( ";no ");  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  if(no)  {  sb.append( ";no ");  }  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	if(no)  {  sb.append( ";no ");  }	  sb.append(   ";no   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
333	[BUG]  [BUGGY]  if(no)  {  sb.append(';');  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  if(no)  {  sb.append(';');  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	if(no)  {  sb.append(';');  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }	  sb.append(   ";no   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
334	[BUG]  [BUGGY]  if(no)  {  sb.append( ";no ");  }  else  {  AppendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  if(no)  {  sb.append( ";no ");  }  else  {  AppendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	if(no)  {  sb.append( ";no ");  }  else  {  AppendHexJavaScriptRepresentation(sb,  c);  }	  sb.append(   ";no   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
335	[BUG]  [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  doublequoteEscape,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toLowerCase(c),  quote,  doublequoteEscape,  backslashEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toLowerCase(c),  quote,  doublequoteEscape,  backslashEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
336	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c),  quote,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c),  quote,  doublequoteEscape);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c),  quote,  doublequoteEscape);	  sb.append(Character.toLowerCase(c),    quote,    backslashEscape);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
337	[BUG]  [BUGGY]  sb.append(c, ": ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c, ": ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c, ": ");	  sb.append(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
338	[BUG]  [BUGGY]  sb.append(Character.toUpperCase(c)/  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(Character.toUpperCase(c)/  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(Character.toUpperCase(c)/  quote);	  sb.append(Character.toUpperCase(c)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
339	[BUG]  [BUGGY]  sb.append(c,   ",  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c,   ",  quote);  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c,   ",  quote);	  sb.append(   ",   ",    quote);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
340	[BUG]  [BUGGY]  sb.append(c, ",' ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append(c, ",' ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append(c, ",' ");	  sb.append(   ",'   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
341	[BUG]  [BUGGY]  sb.append( "#no  action  provided ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append( "#no  action  provided ");  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append( "#no  action  provided ");	  sb.append(   "#n   ");    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
342	[BUG]  [BUGGY]  sb.append('n',  'n');  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      sb.append(c);  }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }      [BUGGY]  sb.append('n',  'n');  [BUGGY]      return  sb.toString();  }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1073	1073	1	replace	sb.append('n',  'n');	  sb.append('n',    c);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
