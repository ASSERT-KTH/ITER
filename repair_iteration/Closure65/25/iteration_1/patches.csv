bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  sb.toString()  + ", "  +  quote);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ", "  +  quote);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ", "  +  quote);	  return    sb.toString()    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  return  sb.toString()  + ", "  +  quote;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ", "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ", "  +  quote;	  return    sb.toString()    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  return  sb.toString()  + ",n "  +  c);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ",n "  +  c);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ",n "  +  c);	  return    sb.toString()    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  sb.append( ", ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  sb.append( ", ");  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	sb.append( ", ");	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  sb.append('n');  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  sb.append('n');  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	sb.append('n');	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  sb.append( "n ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  sb.append( "n ");  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	sb.append( "n ");	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  sb.append( ";n ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  sb.append( ";n ");  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	sb.append( ";n ");	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  sb.append('ufffd');  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  sb.append('ufffd');  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	sb.append('ufffd');	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  sb.append(',');  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  sb.append(',');  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	sb.append(',');	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  return  c.toString()  + ": "  +  sb;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  c.toString()  + ": "  +  sb;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  c.toString()  + ": "  +  sb;	  return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  return  sb.toString()  + ",: "  +  quote;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ",: "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ",: "  +  quote;	  return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  return  c  + ": "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  c  + ": "  +  sb.toString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  c  + ": "  +  sb.toString();	  return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": "  +  c;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": "  +  c;	  return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ": "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString()  +  quote);  return  sb.toString()  + ": "  +  c;	  return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ": "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString());  return  sb.toString()  + ": "  +  quote;	  return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  appendHexJavaScriptRepresentation(sb,  c);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  appendHexJavaScriptRepresentation(sb,  c);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	appendHexJavaScriptRepresentation(sb,  c);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  return  sb.toString()  + "   ";  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + "   ";  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + "   ";	  return    sb.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  return  sb.toString()  + "null ";  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + "null ";  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + "null ";	  return    sb.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  return  sb.toString()  + ",null ";  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ",null ";  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ",null ";	  return    sb.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  return  sb.toString()  + "# ";  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + "# ";  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + "# ";	  return    sb.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  return  sb.toString()  + ", ";  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ", ";  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ", ";	  return    sb.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  return  sb.toString()  + ": ";  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ": ";  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ": ";	  return    sb.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ": "  +  backslashEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ": "  +  backslashEscape;	  return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	StringBuilder  sb  =  new  StringBuilder(sb.toString())+ ": "  +  quote;	  return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ": "  +  doublequoteEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ": "  +  doublequoteEscape;	  return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quoteEscape;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ": "  +  quoteEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ": "  +  quoteEscape;	  return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  quote  + "n ";  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ": "  +  quote  + "n ";  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ": "  +  quote  + "n ";	  return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  1;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quote  +  1;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quote  +  1;	  return    sb.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  2;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quote  +  2;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quote  +  2;	  return    sb.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  return  sb.toString()  +  quoteEscape;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quoteEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quoteEscape;	  return    sb.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quote  +  backslashEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quote  +  backslashEscape;	  return    sb.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  return  sb.toString()  +  quote  +  4;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quote  +  4;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quote  +  4;	  return    sb.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  return  sb.toString()  +  backslashEscape;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  backslashEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  backslashEscape;	  return    sb.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	if(c!=  null)  {  return  c.toString();  }  else  {  appendHexJavaScriptRepresentation(sb,  c);  }	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  sb.append(c.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  sb.append(c.toString());  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	sb.append(c.toString());	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  if(c!=  null)  {  return  c.toString();  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	if(c!=  null)  {  return  c.toString();  }	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  return  c.toString()  +  quote;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  c.toString()  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  c.toString()  +  quote;	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  return  sb.toString();	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	if(c!=  null)  {  return  c.toString();  }  else  {  appendSinglequoteEscape(sb,  c);  }	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  return  sb.toString()  + ".   "  +  quote;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ".   "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ".   "  +  quote;	  return    sb.toString()    +   ".   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  return  sb.toString()  + ".html "  +  c;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ".html "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ".html "  +  c;	  return    sb.toString()    +   ".   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  return  c.toString()  + ".   "  +  sb;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  c.toString()  + ".   "  +  sb;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  c.toString()  + ".   "  +  sb;	  return    sb.toString()    +   ".   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  return  c.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  c.toString()  +  1;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  c.toString()  +  1;	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  return  strEscape.toString();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  strEscape.toString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  strEscape.toString();	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  return  strEscape.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  strEscape.toString()  +  1;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  strEscape.toString()  +  1;	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  return  sb.toString()  +  2;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  2;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  2;	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  return  sbu.toString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sbu.toString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sbu.toString();	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  return  sb.toString()  + ",n "  +  c;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ",n "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ",n "  +  c;	  return    sb.toString()    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  return  c.toString()  + ",   "  +  sb;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  c.toString()  + ",   "  +  sb;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  c.toString()  + ",   "  +  sb;	  return    sb.toString()    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  quote;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ",' "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ",' "  +  quote;	  return    sb.toString()    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  return  sb.toString()  + "   "  +  quote;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + "   "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + "   "  +  quote;	  return    sb.toString()    +   "       "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  return  c.toString()  + "   "  +  sb;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  c.toString()  + "   "  +  sb;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  c.toString()  + "   "  +  sb;	  return    sb.toString()    +   "       "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  return  sb.toString()  + "/ "  +  c;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + "/ "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + "/ "  +  c;	  return    sb.toString()    +   "       "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  return  sb.toString()  + "= "  +  quote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + "= "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + "= "  +  quote;	  return    sb.toString()    +   "       "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  return  sb.toString()  + "= "  +  c;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + "= "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + "= "  +  c;	  return    sb.toString()    +   "       "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ".   "  +  c;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quote  + ".   "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quote  + ".   "  +  c;	  return    sb.toString()    +   ".   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  return  sb.toString()  + ".* "  +  c;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ".* "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ".* "  +  c;	  return    sb.toString()    +   ".   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  return  sb.toString()  + ".n "  +  c;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ".n "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ".n "  +  c;	  return    sb.toString()    +   ".   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  return  SHORT_Escape.toString();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  SHORT_Escape.toString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  SHORT_Escape.toString();	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  return  sbe.toString();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sbe.toString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sbe.toString();	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  return  sb.getString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.getString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.getString();	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  return  sb.toString()  + ";n ";  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ";n ";  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ";n ";	  return    sb.toString()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
63	[BUG]  [BUGGY]  return  sb.toString()  +  doublequoteEscape;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  doublequoteEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  doublequoteEscape;	  return    sb.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
64	[BUG]  [BUGGY]  return  sb.toString()  +  c;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  c;	  return    sb.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ": "  +  c;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quote  + ": "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quote  + ": "  +  c;	  return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  sb.append( "] ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  sb.append( "] ");  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	sb.append( "] ");	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
67	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	if(c!=  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  c);  }	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
68	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ", ");  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	if(c!=  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  sb.append( ", ");  }	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
69	[BUG]  [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  sb.toString());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  if(c!=  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  sb.toString());  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	if(c!=  null)  {  return  c.toString();  }  else  {  StringBuilder  sb  =  new  StringBuilder(sb.toString());  appendHexJavaScriptRepresentation(sb,  sb.toString());  }	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  c);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ",' "  +  c);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ",' "  +  c);	  return    sb.toString()    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
71	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  singlequoteEscape;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ": "  +  singlequoteEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ": "  +  singlequoteEscape;	  return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  doublequote;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ": "  +  doublequote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ": "  +  doublequote;	  return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  return  sb.toString()  + ": "  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ": "  +  this.backslashEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ": "  +  this.backslashEscape;	  return    sb.toString()    +   ":   "    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  return  sb.toString()  + ",' "  +  c;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ",' "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ",' "  +  c;	  return    sb.toString()    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ", "  +  c;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quote  + ", "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quote  + ", "  +  c;	  return    sb.toString()    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  return  sb.toString()  + ", ",  +  c;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ", ",  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ", ",  +  c;	  return    sb.toString()    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
77	[BUG]  [BUGGY]  return  sb.toString()  + "n "  +  c;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + "n "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + "n "  +  c;	  return    sb.toString()    +   "       "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  return  sb.toString()  + "( "  +  c;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + "( "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + "( "  +  c;	  return    sb.toString()    +   "       "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
79	[BUG]  [BUGGY]  return  sb.toString()  *  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  *  1;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  *  1;	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
80	[BUG]  [BUGGY]  return  text.toString()  +  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  text.toString()  +  1;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  text.toString()  +  1;	  return    sb.toString()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
81	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length());  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
82	[BUG]  [BUGGY]  return  sb.toString()  + ".: "  +  quote;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ".: "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ".: "  +  quote;	  return    sb.toString()    +   ":   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + ", "  +  c);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quote  + ", "  +  c);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quote  + ", "  +  c);	  return    sb.toString()    +   ",   "    +    c);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
84	[BUG]  [BUGGY]  sb.append(doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  sb.append(doublequoteEscape);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	sb.append(doublequoteEscape);	  sb.append(c);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  return  sb.toString()  + ",n "  +  quote;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  + ",n "  +  quote;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  + ",n "  +  quote;	  return    sb.toString()    +   ",   "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  return  sb.toString();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  return  sb.toString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1);  return  sb.toString();	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
87	[BUG]  [BUGGY]  return  c.toString()  + ", "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  c.toString()  + ", "  +  sb.toString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  c.toString()  + ", "  +  sb.toString();	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
88	[BUG]  [BUGGY]  return  c.toString()  + ": "  +  sb.toString();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  c.toString()  + ": "  +  sb.toString();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  c.toString()  + ": "  +  sb.toString();	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
89	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));	  return    c.toString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
90	[BUG]  [BUGGY]  return  sb.toString()  +  quote  + "   "  +  c;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  quote  + "   "  +  c;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  quote  + "   "  +  c;	  return    sb.toString()    +   "       "    +    c;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
91	[BUG]  [BUGGY]  return  sb.toString()  +  this.backslashEscape;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  else  {    appendHexJavaScriptRepresentation(sb,  c);  }  }  }  }  sb.append(quote);    [BUGGY]  return  sb.toString()  +  this.backslashEscape;  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1074	1074	1	replace	return  sb.toString()  +  this.backslashEscape;	  return    sb.toString()    +    quote;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
