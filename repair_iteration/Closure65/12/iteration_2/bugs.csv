bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  cc.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.addJsString(cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.addJsString(cached);	  addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  conn.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  conn.addJsString(cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	conn.addJsString(cached);	  addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  addJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  addJsString(jsString);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	addJsString(jsString);	  addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  jsString(s);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  jsString(s);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	jsString(s);	  jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  jsString(cached);  }	  jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  System.arraycopy(ESCAPED_JS_STRINGS,  0,  cached,  0,  cached.length);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  System.arraycopy(ESCAPED_JS_STRINGS,  0,  cached,  0,  cached.length);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  jsString(cached);  }  else  {  System.arraycopy(ESCAPED_JS_STRINGS,  0,  cached,  0,  cached.length);  }	  jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  cached  =  ESCAPED_JS_STRINGS.get(s);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  cached  =  ESCAPED_JS_STRINGS.get(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  jsString(cached);  }  else  {  cached  =  ESCAPED_JS_STRINGS.get(s);  }	  jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  addJsString(s);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  addJsString(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  jsString(cached);  }  else  {  addJsString(s);  }	  jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  jsString(cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  cached[i]  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  cached[i]  =  jsString(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  cached[i]  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  jsString(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  cached.length;  ++i)  {  cached[i]  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  cached.length;  ++i)  {  cached[i]  =  jsString(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  cached.length;  ++i)  {  cached[i]  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  i++)  {  cached[i]  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  i++)  {  cached[i]  =  jsString(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  i++)  {  cached[i]  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  cached  =  jsString(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  cached  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(cached[i]);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(cached[i]);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached.length()  ==  0)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(cached[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.length()  ==  0)  {  add(cached);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null  ||  cached.length()  ==  0)  {  add(cached);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null  ||  cached.length()  ==  0)  {  add(cached);  }	  if(cached!=    null)    {    add(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  if(cached  ==  null)  {  add(cached);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached  ==  null)  {  add(cached);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached  ==  null)  {  add(cached);  }	  if(cached!=    null)    {    add(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  if(cached  ==  null)  {  add(cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached  ==  null)  {  add(cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached  ==  null)  {  add(cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    add(cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  add(s,  cached);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  add(s,  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	add(s,  cached);	  add(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  cc.add(cached,  s);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.add(cached,  s);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.add(cached,  s);	  add(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  addJsString(s,  cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  addJsString(s,  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	addJsString(s,  cached);	  add(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  add(cached,  JsString.valueOf(s));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  add(cached,  JsString.valueOf(s));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	add(cached,  JsString.valueOf(s));	  add(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  add(cached,  JsString.valueOf(cached));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  add(cached,  JsString.valueOf(cached));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	add(cached,  JsString.valueOf(cached));	  add(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  cc.add(s);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.add(s);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.add(s);	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  cc.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.put(s,  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.put(s,  cached);	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  cc.add(context,  cached);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.add(context,  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.add(context,  cached);	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  cc.addJsString(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.addJsString(s);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.addJsString(s);	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  cc.add(cached,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.add(cached,  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.add(cached,  cached);	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  Context.codeBug();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context.codeBug();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context.codeBug();	  if(cached!=    null)    {    add(cached);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  if(cached  ==  null)  {  add(cached);  }  else  {  Context.codeBug();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached  ==  null)  {  add(cached);  }  else  {  Context.codeBug();  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached  ==  null)  {  add(cached);  }  else  {  Context.codeBug();  }	  if(cached!=    null)    {    add(cached);    }    else    {    Context.codeBug();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  Context  cc  =  context.createContext();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  cc  =  context.createContext();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  cc  =  context.createContext();	  if(cached!=    null)    {    add(cached);    }    else    {    context.addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  Context  cc  =  getContext();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  cc  =  getContext();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  cc  =  getContext();	  if(cached!=    null)    {    add(cached);    }    else    {    context.addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  if(cached!=  null)  {  add(s);  }  else  {  context.addJsString(s);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  add(s);  }  else  {  context.addJsString(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  add(s);  }  else  {  context.addJsString(s);  }	  if(cached!=    null)    {    add(cached);    }    else    {    context.addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  Context  cc  =  context.createContext(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  cc  =  context.createContext(s);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  cc  =  context.createContext(s);	  if(cached!=    null)    {    add(cached);    }    else    {    context.addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  append(JSCharsetEncoder.getJsString(s));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(JSCharsetEncoder.getJsString(s));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(JSCharsetEncoder.getJsString(s));	  append(cached);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  append(JSCharsetEncoder.getInstance(),  cached);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(JSCharsetEncoder.getInstance(),  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(JSCharsetEncoder.getInstance(),  cached);	  append(cached);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  append(JSCharsetEncoder.generateJsString(cached));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(JSCharsetEncoder.generateJsString(cached));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(JSCharsetEncoder.generateJsString(cached));	  append(cached);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  append(JSCharacterEncoder.getJsString(s));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(JSCharacterEncoder.getJsString(s));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(JSCharacterEncoder.getJsString(s));	  append(cached);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  append(JSCharsetEncoder.encode(cached));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(JSCharsetEncoder.encode(cached));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(JSCharsetEncoder.encode(cached));	  append(cached);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  add(cached,  cached);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  add(cached,  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	add(cached,  cached);	  add(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  add(cached,  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  add(cached,  JS_STRINGS);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	add(cached,  JS_STRINGS);	  add(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  if(cached!=  null)  {  addJsString(cached);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  addJsString(cached);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  addJsString(cached);  }	  addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  if(cached!=  null)  {  addJsString(cached);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  addJsString(cached);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  addJsString(cached);  }  else  {  throw  new  IllegalStateException( " ");  }	  addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  if(cached!=  null)  {  addJsString(cached);  }  else  {  Context.codeBug();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  addJsString(cached);  }  else  {  Context.codeBug();  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  addJsString(cached);  }  else  {  Context.codeBug();  }	  addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  cc  =  Context.getCurrentContext();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  cc  =  Context.getCurrentContext();	  if(cached!=    null)    {    add(cached);    }    else    {    context.addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  context.addJsString(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  context.addJsString(s);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	context.addJsString(s);	  if(cached!=    null)    {    add(cached);    }    else    {    context.addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(jsString[i]);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(jsString[i]);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(jsString[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  cached[i]  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  cached[i]  =  jsString(s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  cached[i]  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  cc  =  Context.getCurrentContext();  addJsString(cached);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cached,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cached,  s);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  cc  =  Context.getCurrentContext();  addJsString(cached,  s);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(jsString,  s);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(jsString,  s);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(jsString,  s);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(jsString);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(jsString);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  for(int  i  =  0;  i  <  ESCAPED_JS_STRINGS.size();  ++i)  {  addJsString(jsString);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  append(JSCharsetEncoder.getInstance());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(JSCharsetEncoder.getInstance());  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(JSCharsetEncoder.getInstance());	  append(cached);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  append(JSCharsetEncoder.encode(cached,  s));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(JSCharsetEncoder.encode(cached,  s));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(JSCharsetEncoder.encode(cached,  s));	  append(cached);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  cc.add(JsString.valueOf(cached));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.add(JsString.valueOf(cached));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.add(JsString.valueOf(cached));	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  cc.add(jsString);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.add(jsString);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.add(jsString);	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  cc.add(JSStringUtilities.join(s,  cached));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.add(JSStringUtilities.join(s,  cached));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.add(JSStringUtilities.join(s,  cached));	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  if(cached!=  null)  {  add(CASED_JS_STRINGS);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  add(CASED_JS_STRINGS);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  add(CASED_JS_STRINGS);  }	  if(cached!=    null)    {    add(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  jsString(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  jsString(JS_STRINGS);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	jsString(JS_STRINGS);	  jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  jsString(cached);  }  else  {  throw  new  IllegalStateException( " ");  }	  jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  if(cached!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    add(cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  addJsString(cached);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  if(cached!=  null)  {  jsString(cached);  }  else  {  addJsString(cached);  }  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	if(cached!=  null)  {  jsString(cached);  }  else  {  addJsString(cached);  }	  jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  cc  =  getCurrentContext();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  cc  =  getCurrentContext();	  if(cached!=    null)    {    add(cached);    }    else    {    context.addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
65	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  cc  =  context.getCurrentContext();  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  cc  =  context.getCurrentContext();	  if(cached!=    null)    {    add(cached);    }    else    {    context.addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  Context  cc  =  context.createContext(cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  cc  =  context.createContext(cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  cc  =  context.createContext(cached);	  if(cached!=    null)    {    add(cached);    }    else    {    context.addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  add(cached,  JsString.valueOf(cached),  s);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  add(cached,  JsString.valueOf(cached),  s);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	add(cached,  JsString.valueOf(cached),  s);	  add(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
68	[BUG]  [BUGGY]  append(cached,  s);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(cached,  s);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(cached,  s);	  add(cached,    s);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  cc.add(cachedd);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.add(cachedd);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.add(cachedd);	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
70	[BUG]  [BUGGY]  cc.addJsString(cachedd);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  cc.addJsString(cachedd);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	cc.addJsString(cachedd);	  cc.add(cached);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
71	[BUG]  [BUGGY]  append(cachedd);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(cachedd);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(cachedd);	  append(cached);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  append(cached,  jsString(s));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  append(cached,  jsString(s));  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	append(cached,  jsString(s));	  append(cached);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj	  if(cached!=    null)    {    add(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  info  =  info(cached)  {  add(cached)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  info  =  info(cached)  {  add(cached)  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  info  =  info(cached)  {  add(cached)	  if(cached!=    null)    {    add(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  is  not  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  is  not  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  is  not  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj	  if(cached!=    null)    {    add(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
76	[BUG]  [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  matches(cached)  {  add(cached))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  matches(cached)  {  add(cached))  {  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  matches(cached)  {  add(cached))  {	  if(cached!=    null)    {    add(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  attracted  =  add(cached))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  attracted  =  add(cached))  {  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  attracted  =  add(cached))  {	  if(cached!=    null)    {    add(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
78	[BUG]  [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiajs())  {  add(cached))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiajs())  {  add(cached))  {  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiaj  machiajs())  {  add(cached))  {	  if(cached!=    null)    {    add(cached);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
79	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  addJsString(rhsContext,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  addJsString(rhsContext,  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  rhsContext  =  Context.getCurrentContext();  addJsString(rhsContext,  cached);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
80	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  addJsString(rhsContext,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  addJsString(rhsContext,  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context);  addJsString(rhsContext,  cached);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
81	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
82	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(cached);  addJsString(rhsContext,  cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }    [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(cached);  addJsString(rhsContext,  cached);  [BUGGY]    }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	953	953	1	replace	Context  rhsContext  =  Context.createChildObjectContext(cached);  addJsString(rhsContext,  cached);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
