bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(childCount  ==  ((  n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount  >=  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount  ==  ((  n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount  >=  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount  ==  ((  n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount  >=  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)	  if(childCount    ==    ((    n.getFirstChild()!=    null    &&    n.getLastChild().getType()    ==    Token.STRING)||    childCount!=    ((    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.OBJECTLIT)    	non-compiled	[CE]  orphaned  case	575	None	replace
2	[BUG]  [BUGGY]  if(childCount!=  ((  n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount  ==  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount!=  ((  n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount  ==  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount!=  ((  n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount  ==  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)	  if(childCount    ==    ((    n.getFirstChild()!=    null    &&    n.getLastChild().getType()    ==    Token.STRING)||    childCount!=    ((    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.OBJECTLIT)    	non-compiled	[CE]  orphaned  case	575	None	replace
3	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount  ==  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount  ==  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount  ==  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)	  if(childCount    ==    ((    n.getFirstChild()!=    null    &&    n.getLastChild().getType()    ==    Token.STRING)||    childCount!=    ((    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.OBJECTLIT)    	non-compiled	[CE]  orphaned  case	575	None	replace
4	[BUG]  [BUGGY]  if(childCount  ==  ((  n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount!=  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJ  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount  ==  ((  n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount!=  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJ  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount  ==  ((  n.getFirstChild()!=  null  &&  n.getLastChild().getType()  ==  Token.STRING)||  childCount!=  ((  n.getParent()!=  null  &&  n.getParent().getType()  ==  Token.OBJ	  if(childCount    ==    ((    n.getFirstChild()!=    null    &&    n.getLastChild().getType()    ==    Token.STRING)||    childCount!=    ((    n.getParent()!=    null    &&    n.getParent().getType()    ==    Token.OBJECTLIT)    	non-compiled	[CE]  orphaned  case	575	None	replace
5	[BUG]  [BUGGY]  if(childCount  ==  1  ||  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [CE]  orphaned  case  [FE]                                    ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount  ==  1  ||  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount  ==  1  ||  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {	  if(childCount    ==    1    &&    first.getFirstChild()!=    null    &&    first.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  orphaned  case	934	None	replace
6	[BUG]  [BUGGY]  if(first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [CE]  orphaned  case  [FE]                                      ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {	  if(childCount    ==    1    &&    first.getFirstChild()!=    null    &&    first.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  orphaned  case	934	None	replace
7	[BUG]  [BUGGY]  if(first!=  null  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [CE]  orphaned  case  [FE]                                        ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(first!=  null  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(first!=  null  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {	  if(childCount    ==    1    &&    first.getFirstChild()!=    null    &&    first.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  orphaned  case	934	None	replace
8	[BUG]  [BUGGY]  if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().startsWith( "__ "))  {  [CE]  orphaned  case  [FE]                                          ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().startsWith( "__ "))  {  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().startsWith( "__ "))  {	  if(childCount    ==    1    &&    first.getFirstChild()!=    null    &&    first.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  orphaned  case	934	None	replace
9	[BUG]  [BUGGY]  if(childCount  ==  1  &&  first.getLastChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [CE]  orphaned  case  [FE]                                            ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount  ==  1  &&  first.getLastChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount  ==  1  &&  first.getLastChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {	  if(childCount    ==    1    &&    first.getFirstChild()!=    null    &&    first.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  orphaned  case	934	None	replace
10	[BUG]  [BUGGY]  if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().equals( "__ "))  {  [CE]  orphaned  case  [FE]                                              ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().equals( "__ "))  {  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().equals( "__ "))  {	  if(childCount    ==    1    &&    first.getFirstChild()!=    null    &&    first.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  orphaned  case	934	None	replace
11	[BUG]  [BUGGY]  if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "._ "))  {  [CE]  orphaned  case  [FE]                                                ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "._ "))  {  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "._ "))  {	  if(childCount    ==    1    &&    first.getFirstChild()!=    null    &&    first.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  orphaned  case	934	None	replace
12	[BUG]  [BUGGY]  if(childCount!=  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [CE]  orphaned  case  [FE]                                                  ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount!=  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount!=  1  &&  first.getFirstChild()!=  null  &&  first.getLastChild().getString().endsWith( "__ "))  {	  if(childCount    ==    1    &&    first.getFirstChild()!=    null    &&    first.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  orphaned  case	934	None	replace
13	[BUG]  [BUGGY]  if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  last.getLastChild().getString().endsWith( "__ "))  {  [CE]  orphaned  case  [FE]                                                    ComparisonFailure      [CONTEXT]        Node  next  =  first.getNext();  if  (next  !=  null)  {  add(     "(     ");  addList(next);  add(     ")     ");  }  break;  case  Token.STRING:      [BUGGY]  if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  last.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]      ((n.getParent()  !=  null  &&  n.getParent().getType()  ==  Token.OBJECTLIT)  ?  1  :  0))  {  throw  new  IllegalStateException(       "Unexpected  String  children:       "  +  n.getParent().toStringTree());  }  addJsString(n.getString());  break;  case  Token.DELPROP:  Preconditions.checkState(childCount  ==  1);  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preserveBlock  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  key  name  o  opstr  regexp  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.25	632	634	1	replace	if(childCount  ==  1  &&  first.getFirstChild()!=  null  &&  last.getLastChild().getString().endsWith( "__ "))  {	  if(childCount    ==    1    &&    first.getFirstChild()!=    null    &&    first.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  orphaned  case	934	None	replace
