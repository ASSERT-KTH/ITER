bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.charAt(0);	  int    singleq    =    0,    doubleq    =    2    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
2	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  2  *  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  2  *  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  2  *  s.charAt(0);	  int    singleq    =    0,    doubleq    =    2    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
3	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  2  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  2  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  s.length()  +  2  +  s.charAt(0);	  int    singleq    =    0,    doubleq    =    2    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
4	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  3  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  3  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  3  +  s.charAt(0);	  int    singleq    =    0,    doubleq    =    2    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
5	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  4  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  4  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  4  +  s.charAt(0);	  int    singleq    =    0,    doubleq    =    2    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
6	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  s.length()  +  1;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  *  2;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  *  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  s.length()  *  2;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  doubleq  =  s.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  s.length();	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  int  singleq  =  0,  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s.length();	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  +  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  s.length()  +  2;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  s.length()  -  1;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  100;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  100;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  100;	  doubleq    =    0,    doubleq    =    10;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
13	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  10  +  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  10  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  10  +  1;	  doubleq    =    0,    doubleq    =    10;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
14	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  ==  0;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  ==  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  ==  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  <  0;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  <  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  <  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  <=  1;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  <=  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  <=  1;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  >=  0;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  >=  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  >=  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  doubleq  =  0,  doubleq!=  0;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq!=  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq!=  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  {  0;  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  {  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  {  0;	  doubleq    =    0,    doubleq    <=    0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  1  +  s.charAt(0);	  int    singleq    =    0,    doubleq    =    1    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
21	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  1  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  1  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  0,  doubleq  =  1  +  s.charAt(0);	  int    singleq    =    0,    doubleq    =    1    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
22	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.charAt(1);	  int    singleq    =    0,    doubleq    =    1    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
23	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  1  *  s.charAt(0);	  int    singleq    =    0,    doubleq    =    1    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
24	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  <  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  <  1;	  int    singleq    =    0,    doubleq    <=    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  ==  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  ==  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  ==  1;	  int    singleq    =    0,    doubleq    <=    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <=  2;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  <=  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  <=  2;	  int    singleq    =    0,    doubleq    <=    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <=  3;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  <=  3;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  <=  3;	  int    singleq    =    0,    doubleq    <=    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  context.getCurrentContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  context.getCurrentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  Context.getCurrentContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
30	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createCurrentContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  Context.createCurrentContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
31	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  Context.createContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  Context.createContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
32	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextInstance();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContextInstance();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  Context.getCurrentContextInstance();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
33	[BUG]  [BUGGY]  Context  cc  =  Context.currentContext();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  Context.currentContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  Context.currentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
34	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  10)+  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  10)+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  10)+  1;	  int    singleq    =    0,    doubleq    =    10    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
35	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  10);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  10);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  10);	  int    singleq    =    0,    doubleq    =    10    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
36	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  100  +  1;	  int    singleq    =    0,    doubleq    =    10    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
37	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  10  *  1;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  10  *  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  10  *  1;	  int    singleq    =    0,    doubleq    =    10    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
38	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  10  *  s.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  10  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  10  *  s.length();	  int    singleq    =    0,    doubleq    =    10    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
39	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  10  +  s.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  10  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  10  +  s.length();	  int    singleq    =    0,    doubleq    =    10    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
40	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  s.length();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  100  +  s.length();	  int    singleq    =    0,    doubleq    =    10    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
41	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  10  +  s.length();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s  =  10  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s  =  10  +  s.length();	  int    singleq    =    0,    doubleq    =    10    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
42	[BUG]  [BUGGY]  String  singleq  =  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.charAt(0);	  char    singleq    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
43	[BUG]  [BUGGY]  char  singleq  =  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  s.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  s.charAt(i);	  char    singleq    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
44	[BUG]  [BUGGY]  char  singleq  =  s.charAt(1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  s.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  s.charAt(1);	  char    singleq    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
45	[BUG]  [BUGGY]  char  singleq  =  s.charAt(0,  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  s.charAt(0,  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  s.charAt(0,  1);	  char    singleq    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
46	[BUG]  [BUGGY]  int  singleq  =  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  s.charAt(0);	  char    singleq    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
47	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <  12;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  <  12;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  <  12;	  int    singleq    =    0,    doubleq    <=    12;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <=  10;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  <=  10;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  <=  10;	  int    singleq    =    0,    doubleq    <=    12;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <=  16;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  <=  16;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  <=  16;	  int    singleq    =    0,    doubleq    <=    12;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <=  13;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  <=  13;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  <=  13;	  int    singleq    =    0,    doubleq    <=    12;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
51	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <=  11;  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  <=  11;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  <=  11;	  int    singleq    =    0,    doubleq    <=    12;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  16  *  s.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  16  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  16  *  s.length();	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
53	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  17;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  17;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  17;	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
54	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  19;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  19;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  19;	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
55	[BUG]  [BUGGY]  String  singleq  =  s.trim().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.trim().toLowerCase(Locale.ENGLISH);	  String    singleq    =    s.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
56	[BUG]  [BUGGY]  String  singleq  =  s.trim().toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.trim().toLowerCase()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.trim().toLowerCase()  +  1;	  String    singleq    =    s.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
57	[BUG]  [BUGGY]  String  singleq  =  s.trim().toLowerCase(lhsContext);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.trim().toLowerCase(lhsContext);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.trim().toLowerCase(lhsContext);	  String    singleq    =    s.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
58	[BUG]  [BUGGY]  String  singleq  =  jsString.trim().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  jsString.trim().toLowerCase();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  jsString.trim().toLowerCase();	  String    singleq    =    s.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
59	[BUG]  [BUGGY]  String  singleq  =  s.trim().substring(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.trim().substring(0,  s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.trim().substring(0,  s.length()  -  1);	  String    singleq    =    s.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
60	[BUG]  [BUGGY]  String  singleq  =  s.trim().toUpperCase();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.trim().toUpperCase();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.trim().toUpperCase();	  String    singleq    =    s.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
61	[BUG]  [BUGGY]  String  singleq  =  0,  doubleq  =  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  0,  doubleq  =  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  0,  doubleq  =  2;	  char    singleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
62	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  0,  doubleq  =  0;	  char    singleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
63	[BUG]  [BUGGY]  String  singleq  =  0,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  0,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  0,  doubleq  =  0;	  char    singleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
64	[BUG]  [BUGGY]  Char  singleq  =  0,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Char  singleq  =  0,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Char  singleq  =  0,  doubleq  =  0;	  char    singleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
65	[BUG]  [BUGGY]  doubleq  =  0,  singleq  =  0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  singleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  singleq  =  0;	  doubleq    =    0,    doubleq    =    0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
66	[BUG]  [BUGGY]  Doubleq  =  0,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Doubleq  =  0,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Doubleq  =  0,  doubleq  =  0;	  doubleq    =    0,    doubleq    =    0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
67	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  >=  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  >=  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  >=  1;	  int    singleq    =    0,    doubleq    >    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
68	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  <  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  <  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  <  1);	  int    singleq    =    0,    doubleq    >    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
69	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq!=  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq!=  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq!=  1;	  int    singleq    =    0,    doubleq    >    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
70	[BUG]  [BUGGY]  doubleq  =  0,  s  =  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s  =  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s  =  1;	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
71	[BUG]  [BUGGY]  doubleq  =  0,  s.length()  =  0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s.length()  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s.length()  =  0;	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
72	[BUG]  [BUGGY]  doubleq  =  0,  s  =  0L;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s  =  0L;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s  =  0L;	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
73	[BUG]  [BUGGY]  doubleq  =  0,  s  =  ''';  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s  =  ''';  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s  =  ''';	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
74	[BUG]  [BUGGY]  doubleq  =  0,  s  =  2;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s  =  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s  =  2;	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
75	[BUG]  [BUGGY]  doubleq  =  0,  s  =  '0';  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s  =  '0';  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s  =  '0';	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
76	[BUG]  [BUGGY]  Context  case  ''':  jsString(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  case  ''':  jsString(s.toCharArray());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  case  ''':  jsString(s.toCharArray());	  Context    case    ''':    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
77	[BUG]  [BUGGY]  Context  case  ''':  jsString(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  case  ''':  jsString(s.toLowerCase());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  case  ''':  jsString(s.toLowerCase());	  Context    case    ''':    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
78	[BUG]  [BUGGY]  Context  case  ''':  jsString(s.substring(1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  case  ''':  jsString(s.substring(1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  case  ''':  jsString(s.substring(1));	  Context    case    ''':    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
79	[BUG]  [BUGGY]  Context  case  ''':  jsString(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  case  ''':  jsString(s.substring(0,  s.length()  -  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  case  ''':  jsString(s.substring(0,  s.length()  -  1));	  Context    case    ''':    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
80	[BUG]  [BUGGY]  Context  case  ''':  jsString(s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  case  ''':  jsString(s.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  case  ''':  jsString(s.charAt(0));	  Context    case    ''':    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
81	[BUG]  [BUGGY]  Context  case  ''':  jsString(s,  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  case  ''':  jsString(s,  false);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  case  ''':  jsString(s,  false);	  Context    case    ''':    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
82	[BUG]  [BUGGY]  int  singleq  =  0,  s.length()  <  0;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s.length()  <  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s.length()  <  0;	  int    singleq    =    0,    doubleq    <    0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0.0;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0.0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  0.0;	  int    singleq    =    0,    doubleq    =    0.0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
84	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1.0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1.0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  1.0;	  int    singleq    =    0,    doubleq    =    0.0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
85	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  10.0;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  10.0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  10.0;	  int    singleq    =    0,    doubleq    =    0.0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
86	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  0.0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  0.0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  0,  doubleq  =  0.0;	  int    singleq    =    0,    doubleq    =    0.0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
87	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  *  s.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  100  *  s.length();	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
88	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  -  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  100  -  1;	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
89	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100  -  Double.parseDouble(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100  -  Double.parseDouble(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  100  -  Double.parseDouble(s);	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
90	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  3;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  3;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  3;	  doubleq    =    0,    doubleq    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
91	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  {  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  {  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  {  0;	  int    singleq    =    0,    doubleq    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
92	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  {  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  {  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  {  1;	  int    singleq    =    0,    doubleq    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
93	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  >>  0;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  >>  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  >>  0;	  int    singleq    =    0,    doubleq!=    0;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
94	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0x7F;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0x7F;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  0x7F;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
95	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0xFFFF;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0xFFFF;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  0xFFFF;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  0  +  s.length();	  int    singleq    =    0,    doubleq    =    2    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
97	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  3  +  s.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  3  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  3  +  s.length();	  int    singleq    =    0,    doubleq    =    2    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
98	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  4  +  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  4  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  4  +  s.length();	  int    singleq    =    0,    doubleq    =    2    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
99	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  *  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  *  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  2  *  s.charAt(0);	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
100	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  *  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  2  *  s.length();	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
101	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  *(s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  *(s.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  2  *(s.charAt(0));	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
102	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  2  *  s.length()  +  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  2  *  s.length()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  2  *  s.length()  +  1;	  int    singleq    =    0,    doubleq    =    2    *    s.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
103	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  0  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  0  *  s.length();	  int    singleq    =    0,    doubleq    =    2    *    s.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
104	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  1  *  s.length();	  int    singleq    =    0,    doubleq    =    2    *    s.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  3  *  s.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  3  *  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  3  *  s.length();	  int    singleq    =    0,    doubleq    =    2    *    s.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
106	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  2  *  s.length()  +  4;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  2  *  s.length()  +  4;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  2  *  s.length()  +  4;	  int    singleq    =    0,    doubleq    =    2    *    s.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
107	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  Context.getCurrentContext(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
108	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  context.getCurrentContext();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
109	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextFor(s);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextFor(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  Context.getCurrentContextFor(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
110	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeGenerator();  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeGenerator();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  Context.getCurrentContextForCodeGenerator();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
111	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextInstance();  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextInstance();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  Context.getCurrentContextInstance();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
112	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeGenerator(s);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeGenerator(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  Context.getCurrentContextForCodeGenerator(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
113	[BUG]  [BUGGY]  String  singleq  =  jsString(s.substring(1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  jsString(s.substring(1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  jsString(s.substring(1));	  String    singleq    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
114	[BUG]  [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()  -  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  jsString(s.substring(0,  s.length()  -  1));	  String    singleq    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
115	[BUG]  [BUGGY]  String  singleq  =  jsString(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  jsString(s.toLowerCase());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  jsString(s.toLowerCase());	  String    singleq    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
116	[BUG]  [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  jsString(s.substring(0,  s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  jsString(s.substring(0,  s.length()));	  String    singleq    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
117	[BUG]  [BUGGY]  char  singleq  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  jsString(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  jsString(s);	  String    singleq    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
118	[BUG]  [BUGGY]  String  singleq  =  jsString(s,  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  jsString(s,  false);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  jsString(s,  false);	  String    singleq    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
119	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s  =  0;	  int    singleq    =    0,    s    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
120	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s  =  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s  =  1;	  int    singleq    =    0,    s    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
121	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  0x7F;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s  =  0x7F;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s  =  0x7F;	  int    singleq    =    0,    s    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
122	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  16;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s  =  16;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s  =  16;	  int    singleq    =    0,    s    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
123	[BUG]  [BUGGY]  int  doubleq  =  0,  doubleq  =  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  doubleq  =  0,  doubleq  =  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  doubleq  =  0,  doubleq  =  1;	  int    doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
124	[BUG]  [BUGGY]  char  doubleq  =  0,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  doubleq  =  0,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  doubleq  =  0,  doubleq  =  0;	  int    doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
125	[BUG]  [BUGGY]  int  doubleq  =  0,  doubleq  =  2;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  doubleq  =  0,  doubleq  =  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  doubleq  =  0,  doubleq  =  2;	  int    doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
126	[BUG]  [BUGGY]  int  doubleq  =  0,  doubleq  =  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  doubleq  =  0,  doubleq  =  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  doubleq  =  0,  doubleq  =  s.length();	  int    doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
127	[BUG]  [BUGGY]  int  doubleq  =  0,  doubleq  =  0L;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  doubleq  =  0,  doubleq  =  0L;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  doubleq  =  0,  doubleq  =  0L;	  int    doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
128	[BUG]  [BUGGY]  String  singleq  =  0,  doubleq  =  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  0,  doubleq  =  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  0,  doubleq  =  1;	  char    singleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
129	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  s.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  0,  doubleq  =  s.length();	  char    singleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
130	[BUG]  [BUGGY]  char  singleq  =  0,  doubleq  =  1L;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  0,  doubleq  =  1L;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  0,  doubleq  =  1L;	  char    singleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
131	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1  +  s.length();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  1  +  s.length();	  int    singleq    =    0,    doubleq    =    1    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
132	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  1  +  s.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s  =  1  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s  =  1  +  s.length();	  int    singleq    =    0,    doubleq    =    1    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
133	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  s.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  1  -  s.length();	  int    singleq    =    0,    doubleq    =    1    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
134	[BUG]  [BUGGY]  String  quote  =  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  quote  =  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  quote  =  s.charAt(0);	  char    quote    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
135	[BUG]  [BUGGY]  char  quote  =  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  quote  =  s.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  quote  =  s.charAt(i);	  char    quote    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
136	[BUG]  [BUGGY]  char  quote  =  s.charAt(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  quote  =  s.charAt(0,  s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  quote  =  s.charAt(0,  s.length()  -  1);	  char    quote    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
137	[BUG]  [BUGGY]  char  quote  =  s.charAt(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  quote  =  s.charAt(0,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  quote  =  s.charAt(0,  s.length());	  char    quote    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
138	[BUG]  [BUGGY]  char  quote  =  s.charAt(1);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  quote  =  s.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  quote  =  s.charAt(1);	  char    quote    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
139	[BUG]  [BUGGY]  char  quote  =  s.charAt(0,  1);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  quote  =  s.charAt(0,  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  quote  =  s.charAt(0,  1);	  char    quote    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
140	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length())+  1;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length())+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length())+  1;	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
141	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length()  +  1);	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
142	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length();	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
143	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()).trim();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()).trim();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length()).trim();	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
144	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  4);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length()  -  4);	  String    singleq    =    s.substring(0,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
145	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  3);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length()  -  3);	  String    singleq    =    s.substring(0,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
146	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  +  2);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length()  +  2);	  String    singleq    =    s.substring(0,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
147	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  16;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  16;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  16;	  doubleq    =    0,    doubleq    =    4;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
148	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  4  *  s.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  4  *  s.length()  +  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  4  *  s.length()  +  1;	  int    singleq    =    0,    doubleq    =    4    *    s.length();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
149	[BUG]  [BUGGY]  String  s  =  jsString(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  s  =  jsString(s.toLowerCase());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  s  =  jsString(s.toLowerCase());	  String    s    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
150	[BUG]  [BUGGY]  String  s  =  jsString(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  s  =  jsString(s.toCharArray());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  s  =  jsString(s.toCharArray());	  String    s    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
151	[BUG]  [BUGGY]  String  s  =  jsString(s.trim());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  s  =  jsString(s.trim());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  s  =  jsString(s.trim());	  String    s    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
152	[BUG]  [BUGGY]  String  s  =  jsString(s.substring(1));  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  s  =  jsString(s.substring(1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  s  =  jsString(s.substring(1));	  String    s    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
153	[BUG]  [BUGGY]  String  s  =  jsString(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  s  =  jsString(s.substring(0,  s.length()  -  1));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  s  =  jsString(s.substring(0,  s.length()  -  1));	  String    s    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
154	[BUG]  [BUGGY]  String  s  =  jsString(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  s  =  jsString(s.substring(0,  s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  s  =  jsString(s.substring(0,  s.length()));	  String    s    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
155	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  >  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  >  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  >  1;	  doubleq    =    0,    doubleq    >    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
156	[BUG]  [BUGGY]  String  singleq  =  s,  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s,  s.substring(0,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s,  s.substring(0,  s.length());	  String    singleq    =    s.substring(0,    s.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
157	[BUG]  [BUGGY]  String  singleq  =  0,  doubleq  =  0L;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  0,  doubleq  =  0L;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  0,  doubleq  =  0L;	  char    singleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
158	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  1L;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  1L;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  1L;	  doubleq    =    0,    doubleq    =    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
159	[BUG]  [BUGGY]  String  singleq  =  s.trim().toLowerCase(true);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.trim().toLowerCase(true);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.trim().toLowerCase(true);	  String    singleq    =    s.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
160	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  10  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  10  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  10  +  s.charAt(0);	  int    singleq    =    0,    doubleq    =    10    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
161	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  10  -  s.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  10  -  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  10  -  s.length();	  int    singleq    =    0,    doubleq    =    10    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
162	[BUG]  [BUGGY]  Context  case  ''':  jsString(s.trim());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  case  ''':  jsString(s.trim());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  case  ''':  jsString(s.trim());	  Context    case    ''':    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
163	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(lhsContext);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  Context.getCurrentContext(lhsContext);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
164	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(null);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(null);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  Context.getCurrentContext(null);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
165	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  Context.getCurrentContext(context);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
166	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  ==  2;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  ==  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  ==  2;	  int    singleq    =    0,    doubleq    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
167	[BUG]  [BUGGY]  Context  cc  =  Context.current();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  Context.current();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  Context.current();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  	20	None	replace
168	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  getCurrentContext();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  getCurrentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  	20	None	replace
169	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  Context.getCurrentContext(context);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  	20	None	replace
170	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  10);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  -  10);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length()  -  10);	  String    singleq    =    s.substring(0,    s.length());    	non-compiled	[CE]  	45	None	replace
171	[BUG]  [BUGGY]  String  singleq  =  jsString(s.trim());  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  jsString(s.trim());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  jsString(s.trim());	  String    singleq    =    jsString(s);    	non-compiled	[CE]  	19	None	replace
172	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length()));	  String    singleq    =    s.substring(0,    s.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
173	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(i);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.charAt(i);	  int    singleq    =    0,    doubleq    =    1    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
174	[BUG]  [BUGGY]  doubleq  =  1,  doubleq  =  0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  1,  doubleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  1,  doubleq  =  0;	  doubleq    =    0,    doubleq    =    0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
175	[BUG]  [BUGGY]  doubleq  =  0,  s  =  127);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s  =  127);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s  =  127);	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
176	[BUG]  [BUGGY]  doubleq  =  0,  s  =  16;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s  =  16;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s  =  16;	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
177	[BUG]  [BUGGY]  doubleq  =  0,  s  =  10;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s  =  10;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s  =  10;	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
178	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  13;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  13;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  13;	  int    singleq    =    0,    doubleq    =    12;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
179	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  11;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  11;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  11;	  int    singleq    =    0,    doubleq    =    12;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
180	[BUG]  [BUGGY]  String  s  =  jsString(s.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  s  =  jsString(s.toUpperCase());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  s  =  jsString(s.toUpperCase());	  String    s    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
181	[BUG]  [BUGGY]  String  s  =  jsString(s,  false);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  s  =  jsString(s,  false);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  s  =  jsString(s,  false);	  String    s    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
182	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  10  -  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  10  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  10  -  1;	  int    singleq    =    0,    doubleq    =    10    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
183	[BUG]  [BUGGY]  char  singleq  =  s.charAt(0],  s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  s.charAt(0],  s.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  s.charAt(0],  s.charAt(0));	  char    singleq    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
184	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  2.0;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  2.0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  2.0;	  int    singleq    =    0,    doubleq    =    0.0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
185	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  18;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  18;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  18;	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
186	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  +  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  +  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  2  +  s.charAt(0);	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
187	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  2  +  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  2  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  2  +  s.length();	  doubleq    =    0,    doubleq    =    2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
188	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  s.charAt(1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  2  +  s.charAt(1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  2  +  s.charAt(1);	  int    singleq    =    0,    doubleq    =    2    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
189	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  12;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  12;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  12;	  doubleq    =    0,    doubleq    =    10;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
190	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  +  s.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  1  +  s.charAt(s.length()  -  1);	  int    singleq    =    0,    doubleq    =    1    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
191	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  1  -  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  1  -  s.charAt(0);	  int    singleq    =    0,    doubleq    =    1    +    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
192	[BUG]  [BUGGY]  char  singleq  =  s.charAt(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  s.charAt(0,  s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  s.charAt(0,  s.length()  -  1);	  char    singleq    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
193	[BUG]  [BUGGY]  char  singleq  =  s.charAt(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  singleq  =  s.charAt(0,  s.length());  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  singleq  =  s.charAt(0,  s.length());	  char    singleq    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
194	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  999999999999999999999999999999999999999999999;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  999999999999999999999999999999999999999999999;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  999999999999999999999999999999999999999999999;	  int    singleq    =    0,    doubleq    =    10    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
195	[BUG]  [BUGGY]  Context  case  ''':  jsString(s,  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  case  ''':  jsString(s,  quote);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  case  ''':  jsString(s,  quote);	  Context    case    ''':    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
196	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0L  *  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0L  *  s.charAt(0);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  0L  *  s.charAt(0);	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
197	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  =  0,  singleq  =  0;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  =  0,  singleq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  =  0,  singleq  =  0;	  doubleq    =    0,    doubleq    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
198	[BUG]  [BUGGY]  int  doubleq  =  0,  doubleq  =  10;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  doubleq  =  0,  doubleq  =  10;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  doubleq  =  0,  doubleq  =  10;	  int    doubleq    =    0,    doubleq    =    0;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
199	[BUG]  [BUGGY]  char  quote  =  s.charAt(0],  s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  quote  =  s.charAt(0],  s.charAt(0));  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  quote  =  s.charAt(0],  s.charAt(0));	  char    quote    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
200	[BUG]  [BUGGY]  char  quote  =  s.charAt(s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  char  quote  =  s.charAt(s.length()  -  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	char  quote  =  s.charAt(s.length()  -  1);	  char    quote    =    s.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
201	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.indexOf('')+  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.indexOf('')+  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  s.indexOf('')+  1;	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
202	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  *  10  +  s.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  s.length()  *  10  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  s.length()  *  10  +  s.length();	  int    singleq    =    0,    doubleq    =    s.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
203	[BUG]  [BUGGY]  String  singleq  =  s.trim().toLowerCase(context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.trim().toLowerCase(context);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.trim().toLowerCase(context);	  String    singleq    =    s.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
204	[BUG]  [BUGGY]  doubleq  =  0,  dublq  =  0;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  dublq  =  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  dublq  =  0;	  doubleq    =    0,    doubleq    =    0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
205	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  100,  s.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  100,  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  100,  s.length();	  int    singleq    =    0,    doubleq    =    100;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
206	[BUG]  [BUGGY]  String  singleq  =  s.substring(0,  s.length()  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  String  singleq  =  s.substring(0,  s.length()  1);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	String  singleq  =  s.substring(0,  s.length()  1);	  String    singleq    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
207	[BUG]  [BUGGY]  int  singleq  =  0,  len  =  s.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  len  =  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  len  =  s.length();	  int    singleq    =    0,    s    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
208	[BUG]  [BUGGY]  int  singleq  =  0,  s  =  ''';  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s  =  ''';  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s  =  ''';	  int    singleq    =    0,    s    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
209	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  16  -  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  16  -  1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  16  -  1;	  int    singleq    =    0,    doubleq    =    16;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
210	[BUG]  [BUGGY]  doubleq  =  0,  len  =  s.length();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  len  =  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  len  =  s.length();	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
211	[BUG]  [BUGGY]  doubleq  =  0,  s.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  s.length();	  doubleq    =    0,    s    =    0;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
212	[BUG]  [BUGGY]  int  singleq  =  0,  s.length()  ==  0;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s.length()  ==  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s.length()  ==  0;	  int    singleq    =    0,    doubleq    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
213	[BUG]  [BUGGY]  int  singleq  =  0,  s.length  ==  0;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  s.length  ==  0;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  s.length  ==  0;	  int    singleq    =    0,    doubleq    ==    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
214	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  12  +  s.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  12  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  12  +  s.length();	  int    singleq    =    0,    doubleq    =    10    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
215	[BUG]  [BUGGY]  int  singleq  =  0,  doubleq  =  11  +  s.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  int  singleq  =  0,  doubleq  =  11  +  s.length();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	int  singleq  =  0,  doubleq  =  11  +  s.length();	  int    singleq    =    0,    doubleq    =    10    +    s.length();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
216	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
217	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
218	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	Context  cc  =  Context.currentTimeMillis();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
219	[BUG]  [BUGGY]  doubleq  =  1,  doubleq  =  -1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  1,  doubleq  =  -1;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  1,  doubleq  =  -1;	  doubleq    =    0,    doubleq    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
220	[BUG]  [BUGGY]  doubleq  =  0,  doubleq  >  2;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      String  jsString(String  s)  {      [BUGGY]  doubleq  =  0,  doubleq  >  2;  [BUGGY]        for  (int  i  =  0;  i  <  s.length();  i++)  {  switch  (s.charAt(i))  {  case  '     "':  doubleq++;  break;  case  '\'':  singleq++;  break;  }  }  String  doublequote,  singlequote;  [CLASS]  CodeGenerator  Context  [METHOD]  jsString  [RETURN_TYPE]  String  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	957	957	1	replace	doubleq  =  0,  doubleq  >  2;	  doubleq    =    0,    doubleq    >    0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
