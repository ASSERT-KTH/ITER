bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
2	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
3	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0),  quote));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0),  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
4	[BUG]  [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
5	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()).toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()).toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()).toString());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()),  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.computeValue());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.computeValue());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.computeValue());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.computeValue());    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
11	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.computeValue());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.computeValue());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.computeValue());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.computeValue());    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
12	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toUpperCase());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toUpperCase());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.computeValue());    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
13	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.computeValue());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.computeValue());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.computeValue());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.computeValue());    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
14	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.computeShortValue());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.computeShortValue());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.computeShortValue());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.computeValue());    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
15	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  +  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  +  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  +  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
16	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
17	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  doublequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  doublequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
18	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
19	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  +  inputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  +  inputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  +  inputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
20	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.toString()  +  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.toString()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.toString()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
21	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.reset());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.reset());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.reset());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
22	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset(),  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset(),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset(),  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
23	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.trim());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.trim());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.trim());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
24	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset()  +  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
25	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
26	[BUG]  [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(StandardEncoder.escape(s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
27	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()),  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
28	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()).toString());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()).toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()).toString());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  Character.toLowerCase(charAt(0)));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  Character.toLowerCase(charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  Character.toLowerCase(charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
30	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  1);	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
31	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charAt(0),  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charAt(0),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  charAt(0),  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
32	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  Character.toLowerCase(Character.UTF8));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  Character.toLowerCase(Character.UTF8));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  Character.toLowerCase(Character.UTF8));	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
33	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  Character.toUpperCase(charAt(0)));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  Character.toUpperCase(charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  Character.toUpperCase(charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
34	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
35	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  length(0));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  length(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  length(0));	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
36	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
37	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.substring(0,  outputCharsetEncoder.length())));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.substring(0,  outputCharsetEncoder.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.substring(0,  outputCharsetEncoder.length())));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
38	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  outputCharsetEncoder.decode(s.length()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  outputCharsetEncoder.decode(s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  outputCharsetEncoder.decode(s.length()));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
39	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
40	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
41	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.decode(outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.decode(outputCharsetEncoder.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.decode(outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
42	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()),  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
43	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.getBytes()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.getBytes()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
44	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()  +  quote));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
45	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()  +  1));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()  +  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
46	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes(),  quote));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes(),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes(),  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
47	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.getBytes());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.getBytes());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.getBytes());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
48	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i  +  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i  +  1);	  CharsetEncoder    cc    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
49	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(0);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.charAt(0);	  CharsetEncoder    cc    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
50	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i++);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i++);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i++);	  CharsetEncoder    cc    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
51	[BUG]  [BUGGY]  CharsetEncoder  cc  =  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  cc  =  s.charAt(i);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  cc  =  s.charAt(i);	  CharsetEncoder    cc    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
52	[BUG]  [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i  +  2);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i  +  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  cc  =  outputCharsetEncoder.charAt(i  +  2);	  CharsetEncoder    cc    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
53	[BUG]  [BUGGY]  CharsetEncoder  cc  =  this.outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  cc  =  this.outputCharsetEncoder.charAt(i);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  cc  =  this.outputCharsetEncoder.charAt(i);	  CharsetEncoder    cc    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
54	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(str.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  1);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  StandardEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  StandardEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  StandardEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
57	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT,  quote  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT,  quote  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT,  quote  +  1);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
58	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(QuoteEncoder.DEFAULT_SCRIPT,  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(QuoteEncoder.DEFAULT_SCRIPT,  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(QuoteEncoder.DEFAULT_SCRIPT,  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
59	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  StormEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  StormEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  StormEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
60	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  StatardEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  StatardEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  StatardEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
61	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()),  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
62	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()  +  quote));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
63	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(backslashEscape.toString()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(backslashEscape.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(backslashEscape.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
64	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()  +  1));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()  +  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
65	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()),  quotes);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()),  quotes);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()),  quotes);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
66	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString())+  quote);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString())+  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString())+  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
67	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()),  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
68	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getLineno()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getLineno()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getLineno()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
69	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Encoder.encode(outputCharsetEncoder.getEncoding()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Encoder.encode(outputCharsetEncoder.getEncoding()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(Encoder.encode(outputCharsetEncoder.getEncoding()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
70	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getStart()));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getStart()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getStart()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
71	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()  +  quote));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
72	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  quote= ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  quote= ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  quote= ");	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
73	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + "   ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + "   ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + "   ");	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
74	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ".n ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ".n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ".n ");	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
75	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  quote ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  quote ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  quote ");	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
76	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + "# ");  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + "# ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + "# ");	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
77	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(standardEscape));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(standardEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(standardEscape));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
78	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
79	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(backslashEscape.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(backslashEscape.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(backslashEscape.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
80	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
81	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEscape.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEscape.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEscape.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
82	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
83	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(quote));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(quote));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
84	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  +  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s.toString());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
85	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  + "n ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  + "n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString()  + "n ");	  StringBuilder    sb    =    new    StringBuilder(s.toString());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
86	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toCharArray());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toCharArray());	  StringBuilder    sb    =    new    StringBuilder(s.toString());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
87	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.getText());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.getText());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.getText());	  StringBuilder    sb    =    new    StringBuilder(s.toString());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
88	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s)+  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s)+  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s)+  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
89	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s,  quote));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s,  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s,  quote));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
90	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s),  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s),  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
91	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT,  quote));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT,  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT,  quote));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
92	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT),  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT),  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
93	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT)+  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT)+  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT)+  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
94	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT  +  quote));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT  +  quote));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
95	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_QUOTE));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_QUOTE));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_QUOTE));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
96	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.END_SCRIPT));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.END_SCRIPT));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(StandardEncoder.END_SCRIPT));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
97	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
98	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
99	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.reset());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.reset());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.reset());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getEncoding());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
100	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getEncoding()  +  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getEncoding()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getEncoding()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getEncoding());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
101	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encodeAsString());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encodeAsString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encodeAsString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getEncoding());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
102	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getShortName());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getShortName());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getShortName());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getEncoding());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
103	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()  +  quote));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()),  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getValue()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getValue()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getValue()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.toString()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
107	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(backslashEscape));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(backslashEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(backslashEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
108	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape),  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
109	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  quote));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
110	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(doublequoteEscape));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(doublequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(doublequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
111	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  1;	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
112	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
113	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()),  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
114	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()  +  quote));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
115	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape.toString()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
116	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()  +  1));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()  +  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
117	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toHexString()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toHexString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toHexString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
118	[BUG]  [BUGGY]  CharsetEncoder  sb  =  this.outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  this.outputCharsetEncoder.charAt(0);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  this.outputCharsetEncoder.charAt(0);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
119	[BUG]  [BUGGY]  CharsetEncoder  sb  =  inputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  inputCharsetEncoder.charAt(0);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  inputCharsetEncoder.charAt(0);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
120	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(0,  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(0,  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.charAt(0,  1);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
121	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i  +  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i  +  1);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
122	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outlineCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outlineCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outlineCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
123	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length();  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length();	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
124	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote  +  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote  +  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote  +  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
125	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote  +  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote  +  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote  +  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
126	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
127	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote.charAt(0));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
128	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
129	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  offset  +  s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  offset  +  s.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  offset  +  s.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
130	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(strquoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
131	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(singlequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(singlequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(strquoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
132	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(doublequoteEscape));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(doublequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(doublequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(strquoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
133	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strquoteEscape.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strquoteEscape.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(strquoteEscape.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(strquoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
134	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
135	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0),  quote));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0),  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
136	[BUG]  [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
137	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)),  quotes);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)),  quotes);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)),  quotes);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
138	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
139	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote.length());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
140	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  +  1);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
141	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
142	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(0,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(0,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(0,  outputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
143	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape,  outputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
144	[BUG]  [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(StandardEncoder.encode(quote,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder,    quote));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
145	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder,    quote));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
146	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(ptr,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(ptr,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(ptr,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder,    quote));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
147	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(buffer,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(buffer,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(buffer,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder,    quote));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
148	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.charAt(0),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.charAt(0),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.charAt(0),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
149	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  quote,  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  quote,  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
150	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quotes.charAt(0),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quotes.charAt(0),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quotes.charAt(0),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
151	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  quote  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  quote  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  quote  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
152	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.charAt(0),  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.charAt(0),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  strEscape.charAt(0),  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
153	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.charAt(0),  s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.charAt(0),  s);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.charAt(0),  s);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
154	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0)+  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0)+  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0)+  2);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0)+    1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
155	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0)+  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0)+  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0)+    1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
156	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(1)+  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(1)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(1)+  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0)+    1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
157	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0)+  1  +  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0)+  1  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0)+  1  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0)+    1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
158	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.charAt(0)+  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.charAt(0)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.charAt(0)+  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0)+    1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
159	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    4);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
160	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.toString(s.length()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.toString(s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.toString(s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    4);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
161	[BUG]  [BUGGY]  char  quote  =  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  char  quote  =  outputCharsetEncoder.charAt(0);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	char  quote  =  outputCharsetEncoder.charAt(0);	  String    quote    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
162	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);	  String    quote    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
163	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  2);	  String    quote    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
164	[BUG]  [BUGGY]  String  quote  =  s.charAt(0);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  s.charAt(0);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  s.charAt(0);	  String    quote    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
165	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());	  String    quote    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
166	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  outputCharsetEncoder.charAt(i);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  outputCharsetEncoder.charAt(i);	  String    quote    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
167	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  quote);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
168	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(this.backslashEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(this.backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(this.backslashEscape);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
169	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s  +  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(s  +  quote);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
170	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s)+  1;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s)+  1;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(s)+  1;	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
171	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(quote);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(quote);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
172	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s)+  quote;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s)+  quote;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(s)+  quote;	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
173	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()),  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.length()),  quote);	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
174	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.length()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
175	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
176	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.length()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
177	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
178	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  *  1));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  *  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  *  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
179	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
180	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
181	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()),  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
182	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()),  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
183	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()  +  quote));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
184	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(backslashEscape,  outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(backslashEscape,  outputCharsetEncoder.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(backslashEscape,  outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
185	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(quote,  outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(quote,  outputCharsetEncoder.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(quote,  outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
186	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(backslashEscape.toString()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(backslashEscape.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(backslashEscape.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
187	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(s.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
188	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0),  quote));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0),  quote));	  StringBuilder    sb    =    new    StringBuilder(s.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
189	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(s.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
190	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)  +  quote));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)  +  quote));	  StringBuilder    sb    =    new    StringBuilder(s.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
191	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(1));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(1));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
192	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
193	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(i));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(i));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(i));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
194	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.charAt(1));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.charAt(1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  strEscape.charAt(1));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
195	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder();  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder();	  StringBuffer    sb    =    new    StringBuffer();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
196	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(32);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(32);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuffer  sb  =  new  StringBuffer(32);	  StringBuffer    sb    =    new    StringBuffer();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
197	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(100);	  StringBuffer    sb    =    new    StringBuffer();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
198	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(32);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(32);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(32);	  StringBuffer    sb    =    new    StringBuffer();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
199	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(16);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(16);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuffer  sb  =  new  StringBuffer(16);	  StringBuffer    sb    =    new    StringBuffer();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
200	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(256);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(256);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuffer  sb  =  new  StringBuffer(256);	  StringBuffer    sb    =    new    StringBuffer();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
201	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  -  1)));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  -  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  -  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
202	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  -  2)));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  -  2)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  -  2)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
203	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  +  1)));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  +  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  +  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
204	[BUG]  [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  -  1)));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  -  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  -  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
205	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0),  s.length()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0),  s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0),  s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
206	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  +  2)));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  +  2)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  s.length()  +  2)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
207	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  -  1)));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  -  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  -  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
208	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  -  2)));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  -  2)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  -  2)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
209	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  +  1)));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  +  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  +  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
210	[BUG]  [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  -  1)));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  -  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  -  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
211	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  +  2)));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  +  2)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  s.length()  +  2)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
212	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.charAt(0),  s.length()));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.charAt(0),  s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.charAt(0),  s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
213	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toHexString()  +  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toHexString()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toHexString()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toHexString());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
214	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toHexString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toHexString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toHexString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toHexString());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
215	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toHexString()  + "n ");  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toHexString()  + "n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toHexString()  + "n ");	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toHexString());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
216	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.toHexString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.toHexString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.toHexString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toHexString());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
217	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toHexString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toHexString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.toHexString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toHexString());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
218	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n')+  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n')+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n')+  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.indexOf('n'));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
219	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt('n'));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt('n'));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt('n'));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.indexOf('n'));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
220	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n'),  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n'),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n'),  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.indexOf('n'));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
221	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAtIndex('n'));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAtIndex('n'));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAtIndex('n'));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.indexOf('n'));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
222	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n',  quote));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n',  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n',  quote));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.indexOf('n'));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
223	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.charAt(0));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    outlineCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
224	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    outlineCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
225	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outscapeCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outscapeCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outscapeCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    strEscape.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
226	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  line.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  line.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  line.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    strEscape.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
227	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.charAt(0),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.charAt(0),  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  strEscape.charAt(0),  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    strEscape.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
228	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  UTF_8);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  UTF_8);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  UTF_8);	  StringBuilder    sb    =    new    StringBuilder(s,    strEscape.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
229	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  -  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  -  2);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
230	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  /  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  /  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  /  2);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
231	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  2  +  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  2  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  2  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
232	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  4);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  4);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  4);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
233	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote)+  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote)+  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote)+  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
234	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape)+  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape)+  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape)+  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
235	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c)+  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c)+  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c)+  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
236	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  doublequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  doublequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
237	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote)+  inputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote)+  inputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote)+  inputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
238	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  singlequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  singlequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
239	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getLength()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getLength()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getLength()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
240	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
241	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  quote.length()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  quote.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  quote.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
242	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getValue()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getValue()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getValue()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
243	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getDelimiter()  +  quote);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getDelimiter()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getDelimiter()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getDelimiter());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
244	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getDelimiter()  +  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getDelimiter()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getDelimiter()  +  1);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getDelimiter());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
245	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getSuffix());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getSuffix());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getSuffix());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getDelimiter());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
246	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.delimiter());  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.delimiter());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.delimiter());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getDelimiter());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
247	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(16);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(16);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(16);	  StringBuilder    sb    =    new    StringBuilder(128);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
248	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(10);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(10);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(10);	  StringBuilder    sb    =    new    StringBuilder(128);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
249	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(108);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(108);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(108);	  StringBuilder    sb    =    new    StringBuilder(128);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
250	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(256);	  StringBuilder    sb    =    new    StringBuilder(128);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
251	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote.toString());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
252	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  + "n ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  + "n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  + "n ");	  StringBuilder    sb    =    new    StringBuilder(s,    quote.toString());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
253	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toCharArray());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toCharArray());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.toCharArray());	  StringBuilder    sb    =    new    StringBuilder(s,    quote.toString());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
254	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.substring(0,  quote.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.substring(0,  quote.length()  -  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.substring(0,  quote.length()  -  1));	  StringBuilder    sb    =    new    StringBuilder(s,    quote.toString());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
255	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.toString()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    quote.toString());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
256	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder),    quote);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
257	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(buffer,  outputCharsetEncoder),  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(buffer,  outputCharsetEncoder),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(buffer,  outputCharsetEncoder),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder),    quote);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
258	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c),  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder),    quote);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
259	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
260	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
261	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.substring(0,  outputCharsetEncoder.length())));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.substring(0,  outputCharsetEncoder.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.substring(0,  outputCharsetEncoder.length())));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
262	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()  +  2));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()  +  2));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()  +  2));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
263	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  backslashEscape,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  backslashEscape,  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  backslashEscape,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
264	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote,  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
265	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toString()  + "n ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toString()  + "n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toString()  + "n ");	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
266	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toString()  +  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toString()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toString()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
267	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  *  quote));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  *  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  *  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
268	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
269	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote)+  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote)+  1);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
270	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length(),  quote));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length(),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length(),  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
271	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()),  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.length()),  quote);	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
272	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.length()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
273	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.substring(0,  s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
274	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.length()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
275	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  quote;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  quote;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  quote;	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
276	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  /  2;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  /  2;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  /  2;	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
277	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  1;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  1;	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
278	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  2;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  2;	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
279	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  4;  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  4;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  4;	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
280	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toShortString()  +  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toShortString()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toShortString()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toShortString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
281	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toShortString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toShortString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.toShortString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toShortString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
282	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toShortString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.toShortString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.toShortString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toShortString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
283	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toLongString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toLongString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toLongString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toShortString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
284	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape),  quote);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(singlequoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
285	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
286	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(s,  outputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
287	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
288	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.toString()  + "n ";  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  outputCharsetEncoder.toString()  + "n ";  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  outputCharsetEncoder.toString()  + "n ";	  String    quote    =    outputCharsetEncoder.toString();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
289	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  4);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  4);	  String    quote    =    outputCharsetEncoder.toString();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
290	[BUG]  [BUGGY]  String  quote  =  this.outputCharsetEncoder.toString();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  this.outputCharsetEncoder.toString();  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  this.outputCharsetEncoder.toString();	  String    quote    =    outputCharsetEncoder.toString();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
291	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT  +  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT  +  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
292	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT,  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT,  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT,  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
293	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
294	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_QUOTE);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_QUOTE);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.deFAULT_QUOTE);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
295	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  quote);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
296	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
297	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  quote);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
298	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
299	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0),  quote));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0),  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
300	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
301	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(i)));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(i)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(i)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
302	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.getCharAt(0));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.getCharAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.getCharAt(0));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
303	[BUG]  [BUGGY]  sb.append( "n ",  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb.append( "n ",  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb.append( "n ",  outputCharsetEncoder);	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
304	[BUG]  [BUGGY]  sb.append('n');  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb.append('n');  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb.append('n');	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
305	[BUG]  [BUGGY]  sb.append( "n ".charAt(0));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb.append( "n ".charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb.append( "n ".charAt(0));	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
306	[BUG]  [BUGGY]  sb.append( "t ");  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb.append( "t ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb.append( "t ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
307	[BUG]  [BUGGY]  sb.append( ";n ");  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb.append( ";n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb.append( ";n ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
308	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
309	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape,  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape,  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
310	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
311	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
312	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toString()  +  quote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toString()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toString()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
313	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toString()  + "n ");  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toString()  + "n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toString()  + "n ");	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
314	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote.toString());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote.toString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
315	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toHexString());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toHexString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toHexString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
316	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
317	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  *  quote));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  *  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  *  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
318	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  -  quote));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  -  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  -  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
319	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote),  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote),  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote),  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
320	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i++);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i++);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i++);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
321	[BUG]  [BUGGY]  CharsetEncoder  sb  =  this.outputCharsetEncoder.charAt(i);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  this.outputCharsetEncoder.charAt(i);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  this.outputCharsetEncoder.charAt(i);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
322	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i  +  2);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i  +  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i  +  2);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
323	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i)+  1;  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i)+  1;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i)+  1;	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
324	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
325	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0),  quote));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0),  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
326	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
327	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  +  1);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
328	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  +  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
329	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  +  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  +  2);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
330	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  *  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  *  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.length()  *  2);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
331	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder),  quote);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
332	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  singlequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  singlequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
333	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  backslashEscape));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  backslashEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  backslashEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
334	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder),  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder),  singlequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder),  singlequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
335	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder)+  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape,  outputCharsetEncoder)+  1);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
336	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()),  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
337	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getBytes()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getBytes()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
338	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()  +  1));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()  +  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
339	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()  +  quote));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
340	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes(),  quote));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes(),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes(),  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
341	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
342	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  inputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.toString());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
343	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.toString());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
344	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote,  s.toString());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote,  s.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote,  s.toString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.toString());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
345	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString(),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString(),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString(),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.toString());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
346	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote  +  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
347	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  doublequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  doublequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
348	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
349	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  singlequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  singlequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
350	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote  + "n ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote  + "n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote  + "n ");	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
351	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
352	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  inputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  inputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  inputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
353	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quotes.length()  +  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quotes.length()  +  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quotes.length()  +  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
354	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.length()  *  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
355	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quoted.length()  +  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quoted.length()  +  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quoted.length()  +  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
356	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  StandardEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  StandardEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote  +  StandardEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
357	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  SizeUtils.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  SizeUtils.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote  +  SizeUtils.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
358	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  StormEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  StormEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote  +  StormEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
359	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT  +  quote,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT  +  quote,  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT  +  quote,  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
360	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  SizeConstants.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  SizeConstants.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote  +  SizeConstants.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
361	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  *  1));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  *  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  *  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
362	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  *  2));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  *  2));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  *  2));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
363	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  1));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
364	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0),  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0),  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
365	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0)  +  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0)  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0)  +  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
366	[BUG]  [BUGGY]  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0),  quote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0),  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
367	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
368	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  2);	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
369	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  4);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  4);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  4);	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
370	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  -  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  -  1);	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
371	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  *  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  *  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  *  2);	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
372	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  3);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  3);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote.length()  +  3);	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
373	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0),  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0),  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
374	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  backslashEscape,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  backslashEscape,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  backslashEscape,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
375	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  stringEscape,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  stringEscape,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  stringEscape,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
376	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  strEscape,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  strEscape,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  strEscape,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
377	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0),  this.backslashEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0),  this.backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0),  this.backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
378	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0),  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0),  doublequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote,  outputCharsetEncoder.charAt(0),  doublequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
379	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
380	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  *  quote));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  *  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  *  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
381	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote),  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote),  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote),  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
382	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote)+  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote)+  1);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
383	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quotes));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quotes));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quotes));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
384	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(c));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
385	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape,  quote));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape,  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape,  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
386	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
387	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(s.length())));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(s.length())));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
388	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  +  outputCharsetEncoder.escape(s.length()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString()  +  outputCharsetEncoder.escape(s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString()  +  outputCharsetEncoder.escape(s.length()));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
389	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
390	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
391	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  StandardEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  StandardEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  StandardEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
392	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  STATIC_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  STATIC_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  STATIC_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
393	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  Condition.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  Condition.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  Condition.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
394	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerializableStandardEncoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerializableStandardEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerializableStandardEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
395	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(doublequoteEscape,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(doublequoteEscape,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(doublequoteEscape,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
396	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  singlequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  singlequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
397	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(bucketEscape,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(bucketEscape,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(bucketEscape,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
398	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  doublequoteEscape));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  doublequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(quote,  doublequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
399	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.toExternalForm());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.toExternalForm());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.toExternalForm());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toExternalForm());    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
400	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toExternalForm()  +  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toExternalForm()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toExternalForm()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toExternalForm());    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
401	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toExternalForm(),  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toExternalForm(),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toExternalForm(),  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toExternalForm());    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
402	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
403	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()),  quote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()),  quote);	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
404	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
405	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(s.length()));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(s.length()));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
406	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()  +  2));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()  +  2));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.length()  +  2));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
407	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT  +  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT  +  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
408	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT,  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT,  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT,  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
409	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_QUOTE);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_QUOTE);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_QUOTE);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
410	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()),  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
411	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()  +  quote));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
412	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.toString()),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
413	[BUG]  [BUGGY]  String  quote  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  s.substring(0,  s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  s.substring(0,  s.length());	  String    quote    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
414	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  outputCharsetEncoder.substring(0,  s.length()  -  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  outputCharsetEncoder.substring(0,  s.length()  -  1);	  String    quote    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
415	[BUG]  [BUGGY]  String  quote  =  s.substring(0,  s.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  s.substring(0,  s.length()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  s.substring(0,  s.length()  +  1);	  String    quote    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
416	[BUG]  [BUGGY]  String  quote  =  strEscape(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  strEscape(s.substring(0,  s.length()  -  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  strEscape(s.substring(0,  s.length()  -  1));	  String    quote    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
417	[BUG]  [BUGGY]  String  quote  =  s.substring(0,  s.length())+  1;  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  s.substring(0,  s.length())+  1;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  s.substring(0,  s.length())+  1;	  String    quote    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
418	[BUG]  [BUGGY]  String  quote  =  s.substring(0,  s.length();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  s.substring(0,  s.length();  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  s.substring(0,  s.length();	  String    quote    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
419	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
420	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  /  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  /  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  /  2);	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
421	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  4);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  4);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  4);	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
422	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  1);	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
423	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAt(0));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
424	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  s.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length(),  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
425	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1,  s.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  1,  s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  1,  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
426	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAtLength());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAtLength());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAtLength());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
427	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAt(s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAt(s.length()  -  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAt(s.length()  -  1));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
428	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAtLeast(s.length()));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAtLeast(s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  s.charAtLeast(s.length()));	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
429	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
430	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0),  quote));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0),  quote));	  StringBuilder    sb    =    new    StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
431	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(1)));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(1)));	  StringBuilder    sb    =    new    StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
432	[BUG]  [BUGGY]  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
433	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  quotes);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  quotes);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  quotes);	  StringBuilder    sb    =    new    StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
434	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()  +  quote));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
435	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()),  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
436	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.toString()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
437	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeSinglequoteEscape());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeSinglequoteEscape());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeSinglequoteEscape());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.computeStandardEscape());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
438	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeScaleEscape());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeScaleEscape());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeScaleEscape());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.computeStandardEscape());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
439	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeSingleQuoteEscape());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeSingleQuoteEscape());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeSingleQuoteEscape());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.computeStandardEscape());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
440	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
441	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
442	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0),  quote));  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0),  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0),  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
443	[BUG]  [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)),  quote);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
444	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)),  quotes);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)),  quotes);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)),  quotes);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
445	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(outputCharsetEncoder.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
446	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  -  1)));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  -  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  -  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
447	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  -  2)));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  -  2)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  -  2)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
448	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  +  1)));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  +  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  +  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
449	[BUG]  [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  -  1)));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  -  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  -  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
450	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1)));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  s.length()  -  1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
451	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  +  2)));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  +  2)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  s.length()  +  2)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
452	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()  +  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()  +  1));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
453	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()),  quote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()),  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
454	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()  +  quote));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()  +  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
455	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()  +  2));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()  +  2));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()  +  2));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
456	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(backslashEscape));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(backslashEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(backslashEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
457	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
458	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outscapeCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outscapeCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outscapeCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
459	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  strEscape.length());	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
460	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.trim());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.trim());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.trim());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
461	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n',  0));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n',  0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.indexOf('n',  0));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.indexOf('n'));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
462	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.indexOf('n'));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.indexOf('n'));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.indexOf('n'));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.indexOf('n'));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
463	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()  +  2));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()  +  2));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()  +  2));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
464	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length()),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
465	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length())+  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length())+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.length())+  1);	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
466	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(outputCharsetEncoder.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
467	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
468	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.computeValue());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.computeValue());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.computeValue());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.computeValue());    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
469	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeValue());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeValue());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeValue());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.computeValue());    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
470	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(outputCharsetEncoder.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(OutputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
471	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.charAt(1)));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.charAt(1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.charAt(1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
472	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(outputCharsetEncoder.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
473	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0)),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0)),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0)),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
474	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0),  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0),  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0),  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
475	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.getBytes()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.getBytes()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
476	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.getBytes()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.getBytes()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
477	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.decode(outputCharsetEncoder.getBytes()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.decode(outputCharsetEncoder.getBytes()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.decode(outputCharsetEncoder.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
478	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.getBytes()));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.getBytes()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
479	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(SHORT_Escape.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(SHORT_Escape.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(SHORT_Escape.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    3);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
480	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(SHORT_Escape,  s.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(SHORT_Escape,  s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(SHORT_Escape,  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    3);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
481	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.substring(0,  s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
482	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.substring(0,  s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
483	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  outputCharsetEncoder.length())));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  outputCharsetEncoder.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(0,  outputCharsetEncoder.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
484	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s)+  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s)+  1);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
485	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s  +  quote));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s  +  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s  +  quote));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
486	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(40);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(40);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuffer  sb  =  new  StringBuffer(40);	  StringBuffer    sb    =    new    StringBuffer();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
487	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(80);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(80);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuffer  sb  =  new  StringBuffer(80);	  StringBuffer    sb    =    new    StringBuffer();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
488	[BUG]  [BUGGY]  StringBuffer  sb  =  new  StringBuffer(64);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuffer  sb  =  new  StringBuffer(64);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuffer  sb  =  new  StringBuffer(64);	  StringBuffer    sb    =    new    StringBuffer();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
489	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  4096);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  4096);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  4096);	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
490	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  100);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  100);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  100);	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
491	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  4);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  4);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  4);	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
492	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charQuote);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charQuote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  charQuote);	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
493	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
494	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.substring(1)));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.substring(1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.substring(1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
495	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.toString()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
496	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.toString()),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
497	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.toString());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
498	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  strEscape.toString());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  strEscape.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  strEscape.toString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.toString());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
499	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  outputCharsetEncoder.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  outputCharsetEncoder.charAt(0);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2  +  outputCharsetEncoder.charAt(0);	  StringBuilder    sb    =    new    StringBuilder(s.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
500	[BUG]  [BUGGY]  String  quote  =  strEscape(s,  s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  strEscape(s,  s.substring(0,  s.length()  -  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  strEscape(s,  s.substring(0,  s.length()  -  1));	  String    quote    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
501	[BUG]  [BUGGY]  String  quote  =  strEscape.substring(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  strEscape.substring(0,  s.length()  -  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  strEscape.substring(0,  s.length()  -  1);	  String    quote    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
502	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.toString()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.toString()));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
503	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.substring(0,  outputCharsetEncoder.length())));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.substring(0,  outputCharsetEncoder.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.substring(0,  outputCharsetEncoder.length())));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
504	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s,  outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s,  outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s,  outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
505	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  backslashEscape ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  backslashEscape ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  backslashEscape ");	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
506	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  backslash ");  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  backslash ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + ",  backslash ");	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
507	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.getBytes()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.getBytes()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
508	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.getBytes()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.getBytes()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(s.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
509	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Encoder.encode(s.getBytes()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(Encoder.encode(s.getBytes()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(Encoder.encode(s.getBytes()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
510	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.getBytes()),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
511	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0)),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0)),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.charAt(0)),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
512	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.charAt(1)));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.charAt(1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.charAt(1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
513	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(END_SCRIPT));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(END_SCRIPT));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(END_SCRIPT));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
514	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(HEX_CHARS,  outputCharsetEncoder.DEFAULT_SCRIPT));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(HEX_CHARS,  outputCharsetEncoder.DEFAULT_SCRIPT));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(HEX_CHARS,  outputCharsetEncoder.DEFAULT_SCRIPT));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
515	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.toString()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.decode(s.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
516	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toLowerCase());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toLowerCase());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
517	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toShortString());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toShortString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toShortString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
518	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toExternalForm());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toExternalForm());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toExternalForm());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
519	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toHexString()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toHexString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toHexString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
520	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s,  outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s,  outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s,  outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    2));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
521	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getQualifiedName());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getQualifiedName());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getDelimiter());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
522	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getEscape());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getEscape());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getEscape());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getDelimiter());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
523	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toHexString()  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toHexString()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toHexString()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toHexString());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
524	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.toShortString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.toShortString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.toShortString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toShortString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
525	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT  +  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT  +  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_SCRIPT  +  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
526	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length()  +  quote,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
527	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
528	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
529	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toHexString()));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toHexString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toHexString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
530	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getEncoding()  + "n ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getEncoding()  + "n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getEncoding()  + "n ");	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getEncoding());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
531	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getLineno());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getLineno());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getLineno());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getEncoding());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
532	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.reset());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.reset());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.reset());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
533	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset(),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset(),  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset(),  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
534	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset()  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.reset()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
535	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
536	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(singlequoteEscape),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
537	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(quote));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
538	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(outputCharsetEncoder.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
539	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(outputCharsetEncoder.toString()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(outputCharsetEncoder.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(outputCharsetEncoder.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
540	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape,  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  strEscape,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
541	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder,  quote.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder,  quote.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder,  quote.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
542	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charBuffer,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charBuffer,  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  charBuffer,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
543	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outscapeCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outscapeCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outscapeCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
544	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  outputCharsetEncoder.toLowerCase();  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  outputCharsetEncoder.toLowerCase();	  String    quote    =    outputCharsetEncoder.toString();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
545	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  strEscape.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote.toString());    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
546	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SYNTHETIC);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SYNTHETIC);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
547	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SPACE);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SPACE);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_SPACE);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
548	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  1,  outputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
549	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length()  +  quote,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
550	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.substring(0,  s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
551	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.substring(0,  s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
552	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  outputCharsetEncoder.length())));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  outputCharsetEncoder.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(0,  outputCharsetEncoder.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
553	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.charAt(1));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.charAt(1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  s.charAt(1));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
554	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(2));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(2));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(2));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
555	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerialEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerialEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerialEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
556	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SandyEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SandyEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SandyEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
557	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  StormEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  StormEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  StormEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
558	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  CharacterEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  CharacterEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  CharacterEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
559	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(messageEscape.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(messageEscape.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(messageEscape.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
560	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEscape.encode(standardEscape));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEscape.encode(standardEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEscape.encode(standardEscape));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
561	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encodeStandardEscape());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encodeStandardEscape());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encodeStandardEscape());	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
562	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
563	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder  +  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder  +  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
564	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
565	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEscape);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
566	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  text.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  text.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  text.length());	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
567	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  length(1));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  length(1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  length(1));	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
568	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb.append( ",n ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb.append( ",n ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
569	[BUG]  [BUGGY]  sb.append( "0 ");  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  sb.append( "0 ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	sb.append( "0 ");	  sb.append(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
570	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(0,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(0,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.charAt(0,  outputCharsetEncoder.length());	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
571	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()  -  1);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
572	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length());	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
573	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.charAt(1);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
574	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.substring(1)));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.substring(1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.substring(1)));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
575	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.trim()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.trim()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.trim()));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
576	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
577	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s,  outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s,  outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s,  outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
578	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  +  2);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  +  2);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  +  2);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
579	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  +  4);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  +  4);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  +  4);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
580	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  -  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.length()  -  1);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
581	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(outputCharsetEncoder.getEncoding()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(outputCharsetEncoder.getEncoding()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(outputCharsetEncoder.getEncoding()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
582	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(outputCharsetEncoder.getEncoding()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(outputCharsetEncoder.getEncoding()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(outputCharsetEncoder.getEncoding()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
583	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(encode(outputCharsetEncoder.getEncoding()));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(encode(outputCharsetEncoder.getEncoding()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(encode(outputCharsetEncoder.getEncoding()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
584	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
585	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
586	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(s,    outlineCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
587	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  this.backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  this.backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  this.backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder),    quote);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
588	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  quote,  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  quote,  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder),    quote);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
589	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder),  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder),    quote);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
590	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0),  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0),  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0),  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
591	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.charAt(1)));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.charAt(1)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.escape(s.charAt(1)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
592	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  this.backslashEscape));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  this.backslashEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  this.backslashEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder,    quote));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
593	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  doublequoteEscape));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  doublequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  doublequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder,    quote));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
594	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder,    quote));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
595	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
596	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quotes);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quotes);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quotes);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
597	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  doublequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  doublequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
598	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.charAt(0)),  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
599	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.substring(0,  s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
600	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.substring(0,  s.length())));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.substring(0,  s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(s.substring(0,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
601	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  outputCharsetEncoder.length())));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  outputCharsetEncoder.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.substring(0,  outputCharsetEncoder.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
602	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i  +  4);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i  +  4);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.charAt(i  +  4);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
603	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.getEncoder();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.getEncoder();  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.getEncoder();	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
604	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(64);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(64);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(64);	  StringBuilder    sb    =    new    StringBuilder(128);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
605	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(512);	  StringBuilder    sb    =    new    StringBuilder(128);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
606	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toUpperCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toUpperCase());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.toUpperCase());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.computeStandardEscape());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
607	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getSinglequoteEscape());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getSinglequoteEscape());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getSinglequoteEscape());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.computeStandardEscape());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
608	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  SizeUtils.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  SizeUtils.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  SizeUtils.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
609	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charBuffer,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charBuffer,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  charBuffer,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
610	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  quote,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
611	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  strEscape,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
612	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  0,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  0,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  0,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
613	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
614	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(s.toString());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
615	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0)+  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.charAt(0)+  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0)+    1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
616	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
617	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  doublequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  doublequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
618	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  this.backslashEscape);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  this.backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  this.backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
619	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  quotes);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  quotes);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0),  quotes);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
620	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.toString()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.toString()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.escape(s.toString()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
621	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  backslashEscape);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
622	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(backslashEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(backslashEscape);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
623	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  false);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  false);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  false);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
624	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(null);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(null);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(null);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
625	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.toExternalForm());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.toExternalForm());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  outputCharsetEncoder.toExternalForm());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toExternalForm());    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
626	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toExternalForm()  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toExternalForm()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toExternalForm()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toExternalForm());    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
627	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(singlequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(OutputCharsetEncoder.encode(singlequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(singlequoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
628	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.encode(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.encode(singlequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape.encode(singlequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(singlequoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
629	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(s.length()));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
630	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
631	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  1);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
632	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  quote,  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
633	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  singlequoteEscape);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  singlequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+  singlequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
634	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(i)+  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(i)+  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(i)+  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
635	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape  +  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  strEscape  +  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  strEscape  +  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
636	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder  +  offset);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder  +  offset);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder  +  offset);	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
637	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  outputCharsetEncoder.charAt(0),  backslashEscape);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  outputCharsetEncoder.charAt(0),  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  outputCharsetEncoder.charAt(0),  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
638	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(backslashEscape,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(backslashEscape,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(backslashEscape,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
639	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(bluequoteEscape));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(bluequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(bluequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(strquoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
640	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(this.backslashEscape));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(this.backslashEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(this.backslashEscape));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(strquoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
641	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(bucketquoteEscape));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(bucketquoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(bucketquoteEscape));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(strquoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
642	[BUG]  [BUGGY]  String  quote  =  outputCharsetEncoder.toHexString();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  outputCharsetEncoder.toHexString();  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  outputCharsetEncoder.toHexString();	  String    quote    =    outputCharsetEncoder.toString();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
643	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.substring(0,  outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
644	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.peek()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.peek()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.peek()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
645	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toByteArray()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toByteArray()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toByteArray()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
646	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape.length()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
647	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.startsWith( " ")));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.startsWith( " ")));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.startsWith( " ")));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
648	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote)+  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote)+  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()  +  quote)+  1);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    quote));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
649	[BUG]  [BUGGY]  CharsetEncoder  sb  =  s.charAt(i);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  s.charAt(i);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  s.charAt(i);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(i);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
650	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  this.backslashEscape);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  this.backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  this.backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s,    quote);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
651	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  s.length()  +  quote);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  s.length()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  s.length()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
652	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  char.length()  +  quote);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  char.length()  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  char.length()  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
653	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getText()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getText()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getText()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
654	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getQualifiedName()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getQualifiedName()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getQualifiedName()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.getEncoding()));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
655	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.length());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.length()    +    2));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
656	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0)  +  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0)  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(0)  +  quote);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0)+    1);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
657	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
658	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()).append('n');  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()).append('n');  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.length()).append('n');	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
659	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.encode(s.length()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.encode(s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(outputCharsetEncoder.encode(s.length()));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.escape(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
660	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.trim());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.trim());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.trim());	  StringBuilder    sb    =    new    StringBuilder(s.toString());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
661	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  char  quote,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  char  quote,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  char  quote,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
662	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charAt,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charAt,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  charAt,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
663	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  baseUri,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  baseUri,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  baseUri,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
664	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  stringEscape,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  stringEscape,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  stringEscape,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
665	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_COMMENT);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_COMMENT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.DEFAULT_COMMENT);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.DEFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
666	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  1;  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  1;	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
667	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)),  quotes);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)),  quotes);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)),  quotes);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
668	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape,  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape,  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape,  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
669	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(str);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
670	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(strEscape.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(strEscape.toString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
671	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(standardEscape,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(standardEscape,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(standardEscape,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder,    quote));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
672	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(sourceCharsetEncoder,  quote));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(sourceCharsetEncoder,  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(sourceCharsetEncoder,  quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder,    quote));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
673	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    3);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
674	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.encode(quote));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.encode(quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.encode(quote));	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
675	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  buf.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  buf.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  buf.length());	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
676	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.endsWith( "n "));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.endsWith( "n "));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.endsWith( "n "));	  StringBuilder    sb    =    new    StringBuilder(s,    quote.length());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
677	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(endCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(endCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode(endCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.encode(StandardEncoder.DEFAULT_SCRIPT));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
678	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outscape.charAt(0));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outscape.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outscape.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    strEscape.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
679	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  singlequoteEscape.charAt(0));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  singlequoteEscape.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  singlequoteEscape.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    strEscape.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
680	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  text.charAt(0));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  text.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  text.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    strEscape.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
681	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(s.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(s.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(s.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
682	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(backslashEscape.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.escape(backslashEscape.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.escape(backslashEscape.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(s.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
683	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  getCharAt(0));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  getCharAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  getCharAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
684	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.encode(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.encode(singlequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(singlequoteEscape.encode(singlequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(singlequoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
685	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(standardEncoder.encode(backslashEscape));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(standardEncoder.encode(backslashEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(standardEncoder.encode(backslashEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(singlequoteEscape));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
686	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(str);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(str);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(str);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
687	[BUG]  [BUGGY]  CharsetEncoder  sb  =  this.outputCharsetEncoder.encode(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  this.outputCharsetEncoder.encode(s);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  this.outputCharsetEncoder.encode(s);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
688	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  this);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  this);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.encode(s,  this);	  CharsetEncoder    sb    =    outputCharsetEncoder.encode(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
689	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
690	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(binary,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(binary,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(binary,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(backslashEscape,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
691	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + "_ ");  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + "_ ");  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  + "_ ");	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
692	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_HEX_CHARS,  s.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_HEX_CHARS,  s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.DEFAULT_HEX_CHARS,  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    4);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
693	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charAt(0),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charAt(0),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  charAt(0),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
694	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charAt(0),  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  charAt(0),  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  charAt(0),  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(0),    quote);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
695	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s1,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s1,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s1,  outputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.length()    +    2);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
696	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode('n',  quote));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode('n',  quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode('n',  quote));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.deFAULT_SCRIPT);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
697	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.toString()),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.toString()));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
698	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.encode(backslashEscape));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.encode(backslashEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.encode(backslashEscape));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
699	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.start());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.start());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.start());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
700	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.endsWith( ".java "));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.endsWith( ".java "));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.endsWith( ".java "));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
701	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.encode('n'));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.encode('n'));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.encode('n'));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.reset());    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
702	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s,  outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s,  outputCharsetEncoder.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s,  outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
703	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.length());	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.length()    +    1));    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
704	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()),  outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()),  outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.getBytes()),  outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.getBytes()));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
705	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerializableStandardEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerializableStandardEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerializableStandardEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
706	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerialUtilities.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerialUtilities.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder,  SerialUtilities.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    outputCharsetEncoder);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
707	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toShortString()  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toShortString()  +  1);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toShortString()  +  1);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toShortString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
708	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  /  1,  s.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  /  1,  s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  /  1,  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
709	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  -  1,  s.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  -  1,  s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  -  1,  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
710	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2,  s.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  *  2,  s.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  *  2,  s.length());	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    1,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
711	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString(),  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.toString(),  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.toString(),  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.toString());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
712	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  baseUri,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  baseUri,  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  baseUri,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
713	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  char  quote,  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  char  quote,  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  char  quote,  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    quote,    outputCharsetEncoder.toString());    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
714	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str,  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str,  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(str,  outputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
715	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.charAt(0),  outputCharsetEncoder.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.charAt(0),  outputCharsetEncoder.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(str.charAt(0),  outputCharsetEncoder.length());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    outputCharsetEncoder.length());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
716	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  SerializableEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  SerializableEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  SerializableEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
717	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  SerialEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote,  SerialEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote,  SerialEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT,    quote);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
718	[BUG]  [BUGGY]  String  quote  =  s.substring(0,  s.length()).trim();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  String  quote  =  s.substring(0,  s.length()).trim();  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	String  quote  =  s.substring(0,  s.length()).trim();	  String    quote    =    s.substring(0,    s.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
719	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getDelimiter(),  quote);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getDelimiter(),  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.getDelimiter(),  quote);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getDelimiter());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
720	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0),  s.length()));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0),  s.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(s.charAt(0),  s.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
721	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(1,  s.length())));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(1,  s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(s.substring(1,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
722	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(1,  s.length())));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(1,  s.length())));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(s.substring(1,  s.length())));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.decode(s.substring(0,    s.length())));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
723	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  backslashEscape);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  backslashEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  backslashEscape);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
724	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  doublequoteEscape);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  doublequoteEscape);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length()  +  quote,  doublequoteEscape);	  StringBuilder    sb    =    new    StringBuilder(s.length()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
725	[BUG]  [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(0,  3);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  CharsetEncoder  sb  =  outputCharsetEncoder.charAt(0,  3);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	CharsetEncoder  sb  =  outputCharsetEncoder.charAt(0,  3);	  CharsetEncoder    sb    =    outputCharsetEncoder.charAt(0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
726	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.encode());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.getEncoding());    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
727	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
728	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.length()  -  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.length()  -  1));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
729	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.charAt(0)));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.substring(0,  outputCharsetEncoder.charAt(0)));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
730	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  length  +  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  length  +  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  length  +  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
731	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  this.backslashEscape,  outputCharsetEncoder.charAt(0));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  this.backslashEscape,  outputCharsetEncoder.charAt(0));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  this.backslashEscape,  outputCharsetEncoder.charAt(0));	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
732	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  strEscape.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  strEscape.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  strEscape.length());	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
733	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote.length());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  offset  +  quote.length());	  StringBuilder    sb    =    new    StringBuilder(s,    offset    +    outputCharsetEncoder.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
734	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder.outputCharsetEncoder);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder.outputCharsetEncoder);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.length(),  outputCharsetEncoder.outputCharsetEncoder);	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder,    s.length());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
735	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(QuoteEncoder.DEFAULT_SCRIPT  +  quote);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(QuoteEncoder.DEFAULT_SCRIPT  +  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(QuoteEncoder.DEFAULT_SCRIPT  +  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
736	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  StubEncoder.DEFAULT_SCRIPT);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(quote  +  StubEncoder.DEFAULT_SCRIPT);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(quote  +  StubEncoder.DEFAULT_SCRIPT);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.DEFAULT_SCRIPT    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
737	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(singlequoteEscape));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(singlequoteEscape));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.decode(singlequoteEscape));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
738	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(stackEscape.encode(quote));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(stackEscape.encode(quote));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(stackEscape.encode(quote));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
739	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote  +  outputCharsetEncoder.toString());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  quote  +  outputCharsetEncoder.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  quote  +  outputCharsetEncoder.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
740	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  true);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  true);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.toString()  +  quote,  true);	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.toString()    +    quote);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
741	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape)&  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape)&  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(backslashEscape)&  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder),    quote);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
742	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)),  quotes);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)),  quotes);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.charAt(0)),  quotes);	  StringBuilder    sb    =    new    StringBuilder(s.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
743	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.peek()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.peek()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s.encode(outputCharsetEncoder.peek()));	  StringBuilder    sb    =    new    StringBuilder(s.encode(outputCharsetEncoder.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
744	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(buffer,  outputCharsetEncoder)+  quote);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(buffer,  outputCharsetEncoder)+  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(buffer,  outputCharsetEncoder)+  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
745	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(endCharsetEncoder)+  quote);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(endCharsetEncoder)+  quote);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(endCharsetEncoder)+  quote);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder)+    quote);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
746	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(s.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(s.length()  -  1));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  outputCharsetEncoder.charAt(s.length()  -  1));	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.indexOf('n'));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
747	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(backslashEscape.length()));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(backslashEscape.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(backslashEscape.length()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
748	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toByteArray()));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toByteArray()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.toByteArray()));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
749	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.startsWith( " ")));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.startsWith( " ")));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.startsWith( " ")));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
750	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.startsWith( "n ")));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.startsWith( "n ")));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.escape(outputCharsetEncoder.startsWith( "n ")));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.escape(outputCharsetEncoder.length()));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
751	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()),  quotes);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()),  quotes);  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()),  quotes);	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(outputCharsetEncoder.toString()));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
752	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeSimpleEscape());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeSimpleEscape());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeSimpleEscape());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.computeStandardEscape());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
753	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeEscape());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeEscape());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeEscape());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.computeStandardEscape());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
754	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeDelimiter());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeDelimiter());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.computeDelimiter());	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.computeStandardEscape());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
755	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(binaryquoteEscape,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(binaryquoteEscape,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(binaryquoteEscape,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
756	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(line,  outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(line,  outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(StandardEncoder.encode(line,  outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(StandardEncoder.encode(quote,    outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
757	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(doublequoteEscape.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(doublequoteEscape.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(doublequoteEscape.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
758	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.encode(outputCharsetEncoder));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(str.encode(outputCharsetEncoder));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(str.encode(outputCharsetEncoder));	  StringBuilder    sb    =    new    StringBuilder(standardEscape.encode(outputCharsetEncoder));    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
759	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  out.toString());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(s,  out.toString());  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(s,  out.toString());	  StringBuilder    sb    =    new    StringBuilder(s,    outputCharsetEncoder.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
760	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.substring(0,  outputCharsetEncoder.length()));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      CharsetEncoder  outputCharsetEncoder)  {      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.substring(0,  outputCharsetEncoder.length()));  [BUGGY]      sb.append(quote);  for  (int  i  =  0;  i  <  s.length();  i++)  {  char  c  =  s.charAt(i);  switch  (c)  {  case  '\0':  sb.append(     "\\0     ");  break;  case  '\n':  sb.append(     "\\n     ");  break;  case  '\r':  sb.append(     "\\r     ");  break;  case  '\t':  sb.append(     "\\t     ");  break;  case  '\\':  sb.append(backslashEscape);  break;  case  '\     "':  sb.append(doublequoteEscape);  break;  [CLASS]  CodeGenerator  Context  [METHOD]  strEscape  [RETURN_TYPE]  String  String  s  char  quote  String  doublequoteEscape  String  singlequoteEscape  String  backslashEscape  CharsetEncoder  outputCharsetEncoder  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  START_COMMENT  backslashEscape  doublequoteEscape  s  singlequoteEscape  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	1010	1010	1	replace	StringBuilder  sb  =  new  StringBuilder(outputCharsetEncoder.decode(s.substring(0,  outputCharsetEncoder.length()));	  StringBuilder    sb    =    new    StringBuilder(outputCharsetEncoder.decode(s.length()));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
