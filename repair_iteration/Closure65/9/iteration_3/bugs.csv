bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(jsString);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(jsString);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  Context  context  =  Context.getCurrentContext();  cached  =  context.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  context  =  Context.getCurrentContext();  cached  =  context.addJsString(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  context  =  Context.getCurrentContext();  cached  =  context.addJsString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.length()  >=  0)  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.length()  >=  0)  {	  if(cached    [Delete]    null    &&    cached.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
5	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "/   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "/   "))  {	  if(cached!=    null    ||    cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
6	[BUG]  [BUGGY]  if(cached  ==  null  &&  cached.equals( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&  cached.equals( "/   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&  cached.equals( "/   "))  {	  if(cached!=    null    ||    cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
7	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.equals( "/* "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||  cached.equals( "/* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.equals( "/* "))  {	  if(cached!=    null    ||    cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
8	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.equals( "_ "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||  cached.equals( "_ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.equals( "_ "))  {	  if(cached!=    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
9	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||  cached.equals( "- "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.equals( "- "))  {	  if(cached!=    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
10	[BUG]  [BUGGY]  if(cached  ==  null  &&!cached.equals( "/   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&!cached.equals( "/   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&!cached.equals( "/   "))  {	  if(cached    ==    null    ||!cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
11	[BUG]  [BUGGY]  if(cached!=  null  ||!cached.equals( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||!cached.equals( "/ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||!cached.equals( "/ "))  {	  if(cached    ==    null    ||!cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
12	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.equals( "/   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( "/   "))  {	  if(cached    ==    null    ||!cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
13	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( "/* "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||!cached.equals( "/* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( "/* "))  {	  if(cached    ==    null    ||!cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
14	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  jsString(cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  jsString(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  context.getCurrentContext();  cached  =  jsString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  jsString(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  jsString(s);	  Context    cc    =    Context.getCurrentContext();    cached    =    jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  Context  cc  =  Context.currentContext();  cached  =  jsString(cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.currentContext();  cached  =  jsString(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.currentContext();  cached  =  jsString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  Context  context  =  Context.getCurrentContext();  cached  =  jsString(context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  context  =  Context.getCurrentContext();  cached  =  jsString(context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  context  =  Context.getCurrentContext();  cached  =  jsString(context);	  Context    cc    =    Context.getCurrentContext();    cached    =    jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.endsWith( "java "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.endsWith( "java "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.endsWith( "java "))  {	  if(cached!=    null    &&!cached.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
19	[BUG]  [BUGGY]  if(cached!=  null  ||!cached.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||!cached.endsWith( ".java "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||!cached.endsWith( ".java "))  {	  if(cached!=    null    &&!cached.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
20	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.endsWith( "java/ "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.endsWith( "java/ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.endsWith( "java/ "))  {	  if(cached!=    null    &&!cached.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
21	[BUG]  [BUGGY]  Cached  <  K,  V>  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Cached  <  K,  V>  cached  =  jsString(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Cached  <  K,  V>  cached  =  jsString(s);	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
22	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  }  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
23	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  }  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
24	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( "__ "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||!cached.equals( "__ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( "__ "))  {	  if(cached    ==    null    ||!cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  if(cached!=  null  ||!cached.equals( "__ "))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||!cached.equals( "__ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||!cached.equals( "__ "))  {	  if(cached    ==    null    ||!cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  if(cached  ==  null  &&!cached.equals( "__ "))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&!cached.equals( "__ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&!cached.equals( "__ "))  {	  if(cached    ==    null    ||!cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( "___ "))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||!cached.equals( "___ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( "___ "))  {	  if(cached    ==    null    ||!cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  context.getCurrentContext();  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  context.getCurrentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  Context  cc  =  Context.currentContext();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.currentContext();  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.currentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext(context);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createCurrentContext();  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createCurrentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "-   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "-   "))  {	  if(cached    ==    null    ||    cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
34	[BUG]  [BUGGY]  if(cached  ==  null  &&  cached.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&  cached.equals( "-   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&  cached.equals( "-   "))  {	  if(cached    ==    null    ||    cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
35	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "-_ "))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||  cached.equals( "-_ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "-_ "))  {	  if(cached    ==    null    ||    cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
36	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext,  s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext,  s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext,  s);	  Context    rhsContext    =    Context.getCurrentContext();    cached    =    jsString(rhsContext);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
37	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext,  cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext,  cached);	  Context    rhsContext    =    Context.getCurrentContext();    cached    =    jsString(rhsContext);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
38	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  cached  =  jsString(rhsContext);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  cached  =  jsString(rhsContext);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  context.getCurrentContext();  cached  =  jsString(rhsContext);	  Context    rhsContext    =    Context.getCurrentContext();    cached    =    jsString(rhsContext);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
39	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext,  context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext,  context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext,  context);	  Context    rhsContext    =    Context.getCurrentContext();    cached    =    jsString(rhsContext);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
40	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "/* "))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||  cached.equals( "/* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "/* "))  {	  if(cached    ==    null    ||    cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
41	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext(context);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
42	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext(cached);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
43	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(true);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext(true);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
44	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(false);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(false);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext(false);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
45	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(null);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(null);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext(null);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
46	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  context.getCurrentContext();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
47	[BUG]  [BUGGY]  if(cached  ==  null  &&!cached.equals( "*   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&!cached.equals( "*   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&!cached.equals( "*   "))  {	  if(cached    ==    null    ||!cached.equals(   "*   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
48	[BUG]  [BUGGY]  if(cached!=  null  ||!cached.equals( "* "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||!cached.equals( "* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||!cached.equals( "* "))  {	  if(cached    ==    null    ||!cached.equals(   "*   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
49	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( "*   "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.equals( "*   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( "*   "))  {	  if(cached    ==    null    ||!cached.equals(   "*   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
50	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( ".* "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||!cached.equals( ".* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( ".* "))  {	  if(cached    ==    null    ||!cached.equals(   "*   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
51	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "* "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "* "))  {	  if(cached!=    null    &&    cached.equals(   "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
52	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "_ "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "_ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "_ "))  {	  if(cached!=    null    &&    cached.equals(   "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
53	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "n "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "n "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "n "))  {	  if(cached!=    null    &&    cached.equals(   "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
54	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.add(context);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.add(context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  context.getCurrentContext();  cached  =  cc.add(context);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.add(context);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
55	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(context,  consumer);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(context,  consumer);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(context,  consumer);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.add(context);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
56	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.contains(context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.contains(context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.contains(context);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.add(context);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
57	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildObjectContext(context,  cached);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
58	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildObjectContext(s);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
59	[BUG]  [BUGGY]  Context  cc  =  Context.createChildContext(context,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createChildContext(context,  cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildContext(context,  cached);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
60	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(lhsContext);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildObjectContext(lhsContext);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
61	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  context);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildObjectContext(null,  context);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
62	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildObjectContext(s,  context);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
63	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(context,  cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(context,  cached);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(s);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(consume);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(consume);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(consume);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(null,  context);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(null,  context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(null,  context);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
67	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(this,  context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(this,  context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(this,  context);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
68	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s,  context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(s,  context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(s,  context);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||  cached.length()  >  0)  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.length()  >  0)  {	  if(cached!=    null    &&    cached.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
70	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()  <=  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.length()  <=  0)  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.length()  <=  0)  {	  if(cached!=    null    &&    cached.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
71	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()  <  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.length()  <  0)  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.length()  <  0)  {	  if(cached!=    null    &&    cached.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
72	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( ". "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.equals( ". "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( ". "))  {	  if(cached!=    null    &&!cached.equals(   "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
73	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( "n "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.equals( "n "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( "n "))  {	  if(cached!=    null    &&!cached.equals(   "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
74	[BUG]  [BUGGY]  if(cached  ==  null  &&  cached.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&  cached.length()  >  0)  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&  cached.length()  >  0)  {	  if(cached    ==    null    &&    cached.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
75	[BUG]  [BUGGY]  if(cached  ==  null  &&  cached.equals( "*   "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&  cached.equals( "*   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&  cached.equals( "*   "))  {	  if(cached!=    null    ||    cached.equals(   "*   "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
76	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( ".* "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||  cached.equals( ".* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( ".* "))  {	  if(cached    ==    null    ||    cached.equals(   "*   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  if(cached  ==  null  &&!cached.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&!cached.equals( "-   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&!cached.equals( "-   "))  {	  if(cached    ==    null    ||!cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
78	[BUG]  [BUGGY]  if(cached!=  null  ||!cached.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||!cached.equals( "- "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||!cached.equals( "- "))  {	  if(cached    ==    null    ||!cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
79	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.equals( "-   "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( "-   "))  {	  if(cached    ==    null    ||!cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
80	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  context.getCurrentContext();  cached  =  cc.addJsString(s);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJSString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJSString(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJSString(s);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  cached  =  jsString(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  cached  =  jsString(s.toLowerCase());  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  jsString(s.toLowerCase());	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
83	[BUG]  [BUGGY]  cached  =  jsString(s.trim());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  cached  =  jsString(s.trim());  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  jsString(s.trim());	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
84	[BUG]  [BUGGY]  cached  =  JsStringUtil.jsString(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  cached  =  JsStringUtil.jsString(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  JsStringUtil.jsString(s);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
85	[BUG]  [BUGGY]  cached  =  JsStringUtil.jsString(cached);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  cached  =  JsStringUtil.jsString(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  JsStringUtil.jsString(cached);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  cached  =  jsString(cached);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  cached  =  jsString(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  jsString(cached);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
87	[BUG]  [BUGGY]  cached  =  jsString(s.toCharArray());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  cached  =  jsString(s.toCharArray());  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  jsString(s.toCharArray());	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
88	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "__ "))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||  cached.equals( "__ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "__ "))  {	  if(cached    ==    null    ||    cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
89	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "_jsString "))  {  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||  cached.equals( "_jsString "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "_jsString "))  {	  if(cached    ==    null    ||    cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
90	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.equals( "__ "))  {  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||  cached.equals( "__ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.equals( "__ "))  {	  if(cached    ==    null    ||    cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
91	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "_js "))  {  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||  cached.equals( "_js "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "_js "))  {	  if(cached    ==    null    ||    cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
92	[BUG]  [BUGGY]  if(cached!=  null  ||!cached.endsWith( ".js "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||!cached.endsWith( ".js "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||!cached.endsWith( ".js "))  {	  if(cached!=    null    &&!cached.endsWith(   ".js   "))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
93	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.endsWith( "/.js "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.endsWith( "/.js "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.endsWith( "/.js "))  {	  if(cached!=    null    &&!cached.endsWith(   ".js   "))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
94	[BUG]  [BUGGY]  if(cached  ==  null  &&  cached.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&  cached.length()!=  0)  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&  cached.length()!=  0)  {	  if(cached!=    null    &&    cached.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
95	[BUG]  [BUGGY]  if(cached  ==  null  &&!cached.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&!cached.endsWith( ".java "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&!cached.endsWith( ".java "))  {	  if(cached!=    null    &&!cached.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
96	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createCurrentContext(context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createCurrentContext(context);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
97	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  CACHED);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(context,  CACHED);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(context,  CACHED);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
98	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  this);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(context,  this);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(context,  this);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
99	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.add(context);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
100	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(context,  cc);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(context,  cc);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(context,  cc);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.add(context);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
101	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(context);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.add(context);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
102	[BUG]  [BUGGY]  cached  =  jsString(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  cached  =  jsString(JS_STRINGS);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  jsString(JS_STRINGS);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  cached  =  JsStringUtilities.jsString(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  cached  =  JsStringUtilities.jsString(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  JsStringUtilities.jsString(cached);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(cached);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  cached  =  JS_STRINGS.get(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  JS_STRINGS.get(cached);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "-- "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "-- "))  {	  if(cached    ==    null    ||    cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
106	[BUG]  [BUGGY]  if(cached  ==  null  &&  cached.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  &&  cached.equals( "-- "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&  cached.equals( "-- "))  {	  if(cached    ==    null    ||    cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
107	[BUG]  [BUGGY]  Context  cc  =  Context.current();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.current();  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.current();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
108	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(null);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext(null);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext(null);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
109	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( ".* "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( ".* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( ".* "))  {	  if(cached!=    null    ||    cached.equals(   "*   "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
110	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "__ "))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "__ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "__ "))  {	  if(cached    ==    null    ||    cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
111	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.endsWith( ". "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.endsWith( ". "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.endsWith( ". "))  {	  if(cached!=    null    &&!cached.endsWith(   ".js   "))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
112	[BUG]  [BUGGY]  if(cached!=  null  ||!cached.equals( "_ "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||!cached.equals( "_ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||!cached.equals( "_ "))  {	  if(cached    ==    null    ||!cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
113	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( "__ "))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.equals( "__ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( "__ "))  {	  if(cached    ==    null    ||!cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
114	[BUG]  [BUGGY]  CACHED  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  CACHED  =  jsString(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	CACHED  =  jsString(s);	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
115	[BUG]  [BUGGY]  Cached  <  String>  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Cached  <  String>  cached  =  jsString(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Cached  <  String>  cached  =  jsString(s);	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
116	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  }  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
117	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(consume);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(consume);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildObjectContext(consume);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
118	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.equals( "-- "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( "-- "))  {	  if(cached    ==    null    ||!cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
119	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( ". "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( ". "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( ". "))  {	  if(cached!=    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
120	[BUG]  [BUGGY]  Context  rhsContext  =  Context.current();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.current();  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.current();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
121	[BUG]  [BUGGY]  Context  rhsContext  =  Context.current();  cached  =  jsString(rhsContext);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.current();  cached  =  jsString(rhsContext);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.current();  cached  =  jsString(rhsContext);	  Context    rhsContext    =    Context.getCurrentContext();    cached    =    jsString(rhsContext);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
122	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.length()  <  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||  cached.length()  <  0)  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.length()  <  0)  {	  if(cached    ==    null    ||    cached.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
123	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.currentTimeMillis();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
124	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
125	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "****** "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "****** "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "****** "))  {	  if(cached!=    null    ||    cached.equals(   "*   "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
126	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "_$ "))  {  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||  cached.equals( "_$ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "_$ "))  {	  if(cached    ==    null    ||    cached.equals(   "_   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
127	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(cached,  context);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(cached,  context);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(cached,  context);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.add(context);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
128	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( "/))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||!cached.equals( "/))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( "/))  {	  if(cached    ==    null    ||!cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
129	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(cached);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
130	[BUG]  [BUGGY]  Context  rhsContext  =  Context.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.currentTimeMillis();  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.currentTimeMillis();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
131	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(lhsContext);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext(lhsContext);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
132	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
133	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( ". "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||!cached.equals( ". "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( ". "))  {	  if(cached    ==    null    ||!cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
134	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.contains( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  ==  null  ||!cached.contains( "- "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.contains( "- "))  {	  if(cached    ==    null    ||!cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
135	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.trim().length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.trim().length()!=  0)  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.trim().length()!=  0)  {	  if(cached!=    null    &&    cached.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
136	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "./.* "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "./.* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "./.* "))  {	  if(cached!=    null    ||    cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
137	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "/> "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.equals( "/> "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "/> "))  {	  if(cached!=    null    ||    cached.equals(   "/   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
138	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis();  cached  =  jsString(cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.currentTimeMillis();  cached  =  jsString(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.currentTimeMillis();  cached  =  jsString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    jsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
139	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.length()  >>  0)  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.length()  >>  0)  {	  if(cached!=    null    ||    cached.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
140	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.endsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.endsWith( "- "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.endsWith( "- "))  {	  if(cached!=    null    &&!cached.endsWith(   ".js   "))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
141	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( "_ "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.equals( "_ "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( "_ "))  {	  if(cached!=    null    &&!cached.equals(   "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
142	[BUG]  [BUGGY]  if(cached  >=  null  ||  cached.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached  >=  null  ||  cached.equals( "- "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  >=  null  ||  cached.equals( "- "))  {	  if(cached    ==    null    ||    cached.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
143	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()  >  0)  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  cached.length()  >  0)  {  cached  =  jsString(s);  }  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.length()  >  0)  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
144	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( " "))  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.equals( " "))  {  cached  =  jsString(s);  }  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( " "))  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
145	[BUG]  [BUGGY]  if(cached!=  null  &&  jsString(s)!=  null)  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&  jsString(s)!=  null)  {  cached  =  jsString(s);  }  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  jsString(s)!=  null)  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
146	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(cached,  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(cached,  s);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(cached,  s);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
147	[BUG]  [BUGGY]  Context  rhsContext  =  Context.currentTimeMillis();  cached  =  jsString(rhsContext);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  rhsContext  =  Context.currentTimeMillis();  cached  =  jsString(rhsContext);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.currentTimeMillis();  cached  =  jsString(rhsContext);	  Context    rhsContext    =    Context.getCurrentContext();    cached    =    jsString(rhsContext);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
148	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(rhsContext);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(rhsContext);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildObjectContext(rhsContext);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
149	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(hsContext);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(hsContext);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildObjectContext(hsContext);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
150	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(rhsContext);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(rhsContext);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(rhsContext);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
151	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(lhsContext);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(lhsContext);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
152	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  STATEMENT);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  Context.createContext(context,  STATEMENT);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(context,  STATEMENT);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
153	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.equals( ".* "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  ||  cached.equals( ".* "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.equals( ".* "))  {	  if(cached    ==    null    ||    cached.equals(   "*   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
154	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  cached  =  cc.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  Context  cc  =  getCurrentContext();  cached  =  cc.addJsString(cached);  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  getCurrentContext();  cached  =  cc.addJsString(cached);	  Context    cc    =    Context.getCurrentContext();    cached    =    cc.addJsString(cached);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
155	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.endsWith( "java. "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);      [BUGGY]  if(cached!=  null  &&!cached.endsWith( "java. "))  {  [BUGGY]      cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.endsWith( "java. "))  {	  if(cached!=    null    &&!cached.endsWith(   ".java   "))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
