bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  Context  cc  =  Context.getCurrentContext();  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  jsString(cached);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  jsString(cached);  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  jsString(cached);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  Context  cc  =  Context.createContext(context);  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createContext(context);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(cached);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(cached);  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(cached);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  cached  =  jsString(s);  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	cached  =  jsString(s);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(s);  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.addJsString(s);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  if(cached  ==  null  &&!cached.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  &&!cached.equals( "   "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&!cached.equals( "   "))  {	  if(cached    ==    null    ||!cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  if(cached!=  null  ||!cached.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  ||!cached.equals( "   "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||!cached.equals( "   "))  {	  if(cached    ==    null    ||!cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  &&!cached.equals( "   "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.equals( "   "))  {	  if(cached    ==    null    ||!cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( "_ "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  ||!cached.equals( "_ "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( "_ "))  {	  if(cached    ==    null    ||!cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  ||  cached.length()!=  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.length()!=  0)  {	  if(cached    ==    null    ||    cached.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  &&  cached.length()!=  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.length()!=  0)  {	  if(cached    ==    null    ||    cached.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  ||  cached.length()  >=  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.length()  >=  0)  {	  if(cached    ==    null    ||    cached.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  if(cached  ==  null  &&  cached.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  &&  cached.length()  ==  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&  cached.length()  ==  0)  {	  if(cached    ==    null    ||    cached.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  &&  cached.length()  ==  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.length()  ==  0)  {	  if(cached    ==    null    ||    cached.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  &&  cached.equals( "   "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.equals( "   "))  {	  if(cached    ==    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  if(cached  ==  null  &&  cached.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  &&  cached.equals( "   "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  &&  cached.equals( "   "))  {	  if(cached    ==    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "* "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  ||  cached.equals( "* "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "* "))  {	  if(cached    ==    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "_ "))  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  ||  cached.equals( "_ "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "_ "))  {	  if(cached    ==    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "/ "))  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  ||  cached.equals( "/ "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "/ "))  {	  if(cached    ==    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  if(cached!=  null  &&  cached.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  &&  cached.length()  >  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&  cached.length()  >  0)  {	  if(cached!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.equals( "* "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  ||  cached.equals( "* "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.equals( "* "))  {	  if(cached    ==    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  if(cached  ==  null  ||  cached.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  ||  cached.equals( "- "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||  cached.equals( "- "))  {	  if(cached    ==    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  ||  cached.equals( " "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.equals( " "))  {	  if(cached    ==    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  ||  cached.length()  >=  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.length()  >=  0)  {	  if(cached    ==    null    ||    cached.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  if(cached  >=  null  ||  cached.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  >=  null  ||  cached.length()  ==  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  >=  null  ||  cached.length()  ==  0)  {	  if(cached    ==    null    ||    cached.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( "* "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  ||!cached.equals( "* "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( "* "))  {	  if(cached    ==    null    ||!cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(context);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(context);  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.getCurrentContext();  cached  =  cc.add(context);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.endsWith( ".js "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  &&!cached.endsWith( ".js "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.endsWith( ".js "))  {	  if(cached!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  if(cached!=  null  &&!cached.endsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  &&!cached.endsWith( ".java "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  &&!cached.endsWith( ".java "))  {	  if(cached!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( "/ "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  ||!cached.equals( "/ "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( "/ "))  {	  if(cached    ==    null    ||!cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  if(cached  ==  null  ||!cached.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  ==  null  ||!cached.equals( "- "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  ==  null  ||!cached.equals( "- "))  {	  if(cached    ==    null    ||!cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  if(cached!=  null  ||  cached.equals( "/ "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null  ||  cached.equals( "/ "))  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null  ||  cached.equals( "/ "))  {	  if(cached    ==    null    ||    cached.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  if(cached  >=  null  &&  cached.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  >=  null  &&  cached.length()  ==  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  >=  null  &&  cached.length()  ==  0)  {	  if(cached!=    null    ||    cached.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  if(cached  [Delete]  null  &&  cached.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached  [Delete]  null  &&  cached.length()  ==  0)  {  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached  [Delete]  null  &&  cached.length()  ==  0)  {	  if(cached!=    null    ||    cached.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  Context  cc  =  Context.createChildObjectContext(context);  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  cc  =  Context.createChildObjectContext(context);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext);  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	Context  rhsContext  =  Context.getCurrentContext();  cached  =  jsString(rhsContext);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);    [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  }  [BUGGY]    cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  }  [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	949	949	1	replace	if(cached!=  null)  {  cached  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
