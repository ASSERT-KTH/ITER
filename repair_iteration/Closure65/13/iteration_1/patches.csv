bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.getCurrentContext(context);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(context);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.getCurrentContext(s);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  Context  cc  =  Context.currentContext();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.currentContext();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.currentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  context.getCurrentContext();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentContext();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.createContext(context);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(context);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.createContext(s);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.entrySet();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cached  =  ESCAPED_JS_STRINGS.entrySet();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  ESCAPED_JS_STRINGS.entrySet();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.entrySet();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.entrySet();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  cached.entrySet();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.entrySet();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.entrySet();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.entrySet();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  add(ESCAPED_JS_STRINGS.entrySet());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  add(ESCAPED_JS_STRINGS.entrySet());  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(ESCAPED_JS_STRINGS.entrySet());	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  cached  =  entry.getKey()  +  entry.getValue();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cached  =  entry.getKey()  +  entry.getValue();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getKey()  +  entry.getValue();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  cached  =  jsString(s);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cached  =  jsString(s);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(s);	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  cc.addJsString(jsString);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cc.addJsString(jsString);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(jsString);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  jsString(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.toCharArray())  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.toCharArray())  {  cached  =  jsString(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  cached.toCharArray())  {  cached  =  jsString(s);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length()  -  1);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  cached);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  cached);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  addJsString(cc,  cached);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  ESCAPED_JS_STRINGS.put(s,  cached);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	ESCAPED_JS_STRINGS.put(s,  cached);	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  cc.addJsString(JSString.valueOf(s));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cc.addJsString(JSString.valueOf(s));  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.valueOf(s));	  cc.addJsString(jsString(s));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
51	[BUG]  [BUGGY]  cc.addJsString(jsString(s),  cached);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cc.addJsString(jsString(s),  cached);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(jsString(s),  cached);	  cc.addJsString(jsString(s));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  cc.addJsString(JSString.fromString(s));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cc.addJsString(JSString.fromString(s));  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.fromString(s));	  cc.addJsString(jsString(s));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  cc.addJsString(jsString(s,  cached));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cc.addJsString(jsString(s,  cached));  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(jsString(s,  cached));	  cc.addJsString(jsString(s));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
54	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(null);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.getCurrentContext(null);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(null);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  Context  cc  =  Context.current();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.current();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.current();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  s);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  s);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  addJsString(cc,  s);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  add(JsString.valueOf(cached));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  add(JsString.valueOf(cached));  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JsString.valueOf(cached));	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  add(JSString.valueOf(s));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  add(JSString.valueOf(s));  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JSString.valueOf(s));	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  addJsString(cc);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  cc.addJsString(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cc.addJsString(JS_STRINGS);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRINGS);	  cc.addJsString(jsString(s));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
63	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
66	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  add(entry.getKey());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  add(entry.getKey());  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(entry.getKey());	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
68	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
69	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
71	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
73	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
81	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
83	[BUG]  [BUGGY]  if(jsString(s)!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(jsString(s)!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString(s)!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
84	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.currentTimeMillis();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.currentTimeMillis();	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(rhsContext);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.getCurrentContext(rhsContext);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(rhsContext);	  Context    cc    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
92	[BUG]  [BUGGY]  cached  =  entry.getValue();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cached  =  entry.getValue();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getValue();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
93	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getValue();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
94	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
95	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addjsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addjsString(entry.getKey());  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addjsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getKey();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getKey();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
97	[BUG]  [BUGGY]  cached  =  entry.toLowerCase();  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cached  =  entry.toLowerCase();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.toLowerCase();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
98	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
99	[BUG]  [BUGGY]  cc.addJsString(JS_STRINGS.get(s));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cc.addJsString(JS_STRINGS.get(s));  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRINGS.get(s));	  cc.addJsString(jsString(s));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
100	[BUG]  [BUGGY]  cc.addJsString(JS_STRING_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  cc.addJsString(JS_STRING_SEPARATOR);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRING_SEPARATOR);	  cc.addJsString(jsString(s));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
101	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
102	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
103	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
104	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString(s);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  if(cached  ==  null)  {  cached  =  JsString(s);  }  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
105	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
106	[BUG]  [BUGGY]  jsString(s);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  jsString(s);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(s);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
107	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  rhsContext  =  Context.getCurrentContext();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
108	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.createChildObjectContext(context);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(context);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
109	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  Context.createChildObjectContext(s);  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(s);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
110	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);    [BUGGY]  Context  cc  =  getCurrentContext();  [BUGGY]      [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContext();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
