bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  cached  =  JsString.valueOf(s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsString.valueOf(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsString.valueOf(s);	  if(cached    ==    null)    {    cached    =    JsString.valueOf(s);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
2	[BUG]  [BUGGY]  CACHED  =  JsString.valueOf(s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CACHED  =  JsString.valueOf(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CACHED  =  JsString.valueOf(s);	  if(cached    ==    null)    {    cached    =    JsString.valueOf(s);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
3	[BUG]  [BUGGY]  result  =  JsString.valueOf(s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  result  =  JsString.valueOf(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	result  =  JsString.valueOf(s);	  if(cached    ==    null)    {    cached    =    JsString.valueOf(s);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
4	[BUG]  [BUGGY]  Context  cc  =  context.createContext(s);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.createContext(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.createContext(s);	  if(cached    ==    null)    {    cached    =    JsString.valueOf(s);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]  Context  cc  =  Context.createContext();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext();	  if(cached    ==    null)    {    cached    =    JsString.valueOf(s);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
6	[BUG]  [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
7	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toUpperCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
8	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toUpperCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
9	[BUG]  [BUGGY]  if(cached!=  null)  {  if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  }	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
10	[BUG]  [BUGGY]  if(cached!=  null)  {  if(cached!=  JsStringUtilities.jsString(s))  {  cached  =  JsStringUtilities.jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(cached!=  JsStringUtilities.jsString(s))  {  cached  =  JsStringUtilities.jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(cached!=  JsStringUtilities.jsString(s))  {  cached  =  JsStringUtilities.jsString(s);  }	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
11	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
12	[BUG]  [BUGGY]  if(cached!=  null)  {  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
13	[BUG]  [BUGGY]  if(cached!=  null)  {  if(cached!=  JsStringUtil.jsString(s))  {  cached  =  JsStringUtil.jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(cached!=  JsStringUtil.jsString(s))  {  cached  =  JsStringUtil.jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(cached!=  JsStringUtil.jsString(s))  {  cached  =  JsStringUtil.jsString(s);  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
14	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
15	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s,  cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(s,  cached);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(context,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(context,  s);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s,  context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(s,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(s,  context);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(consumer);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(consumer);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(consumer);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(consume);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(consume);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(consume);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  addJsString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addJsString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addJsString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet()));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet()));	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
23	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
24	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
25	[BUG]  [BUGGY]  cc.addJsString(JSString.valueOf(cached));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.valueOf(cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.valueOf(cached));	  cc.addJsString(JSString.valueOf(s));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
26	[BUG]  [BUGGY]  cc.add(JSString.valueOf(s));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(JSString.valueOf(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(JSString.valueOf(s));	  cc.addJsString(JSString.valueOf(s));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
27	[BUG]  [BUGGY]  cc.addJsString(JSString.valueOf(s),  cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.valueOf(s),  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.valueOf(s),  cached);	  cc.addJsString(JSString.valueOf(s));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
28	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  addJsString(cc,  cached);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.getCurrentContext();  addJsString(cc,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentContext();  addJsString(cc,  cached);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
29	[BUG]  [BUGGY]  cc  =  Context.getCurrentContext();  addJsString(cc,  cached);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc  =  Context.getCurrentContext();  addJsString(cc,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc  =  Context.getCurrentContext();  addJsString(cc,  cached);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
30	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached.addJsString(cc,  cached);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  cached.addJsString(cc,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  cached.addJsString(cc,  cached);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
31	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  add(cc,  cached);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  add(cc,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  add(cc,  cached);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
32	[BUG]  [BUGGY]  addJsString(cc,  Context.getCurrentContext());  [CE]  illegal  start  of  expression  [FE]                                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addJsString(cc,  Context.getCurrentContext());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addJsString(cc,  Context.getCurrentContext());	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    cached);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
33	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    *    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
34	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    *    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
35	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    *    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
36	[BUG]  [BUGGY]  cached  =  entry.getKey()  *  entry.getValue();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getKey()  *  entry.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getKey()  *  entry.getValue();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    *    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
37	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
38	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
39	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
40	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
41	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
42	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
43	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
44	[BUG]  [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
45	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  ESCAPED_JS_STRINGS.entrySet();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  ESCAPED_JS_STRINGS.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  ESCAPED_JS_STRINGS.entrySet();	  CachedEntry    <    String,    String>    cached    =    cached.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
46	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.getValue();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  cached.getValue();	  CachedEntry    <    String,    String>    cached    =    cached.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
47	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.toString();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.toString();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  cached.toString();	  CachedEntry    <    String,    String>    cached    =    cached.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
48	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  JS_STRINGS.entrySet();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  JS_STRINGS.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  JS_STRINGS.entrySet();	  CachedEntry    <    String,    String>    cached    =    cached.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
49	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  cc.entrySet();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  cc.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  cc.entrySet();	  CachedEntry    <    String,    String>    cached    =    cached.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
50	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  this.cached.entrySet();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  this.cached.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  this.cached.entrySet();	  CachedEntry    <    String,    String>    cached    =    cached.entrySet();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
51	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getValue());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
52	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s))  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s))  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s))  {  addJsString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
53	[BUG]  [BUGGY]  cached  =  JsStringUtil.jsString(s);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsStringUtil.jsString(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsStringUtil.jsString(s);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
54	[BUG]  [BUGGY]  cached  =  jsString(s.toLowerCase());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(s.toLowerCase());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(s.toLowerCase());	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
55	[BUG]  [BUGGY]  cached  =  jsString(s.trim());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(s.trim());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(s.trim());	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
56	[BUG]  [BUGGY]  cached  =  JsStringUtilities.jsString(s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsStringUtilities.jsString(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsStringUtilities.jsString(s);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
57	[BUG]  [BUGGY]  cached  =  JsStringUtil.jsString(cc,  s);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsStringUtil.jsString(cc,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsStringUtil.jsString(cc,  s);	  cached    =    jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
58	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addjsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addjsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addjsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addjsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
59	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addjsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addjsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addjsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addjsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
60	[BUG]  [BUGGY]  cached  =  s.substring(0,  s.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  s.substring(0,  s.length()  -  1);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  s.substring(0,  s.length()  -  1);	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    s.substring(0,    s.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
61	[BUG]  [BUGGY]  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length());  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length());  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    s.substring(0,    s.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
62	[BUG]  [BUGGY]  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length()  -  1);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length()  -  1);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    s.substring(0,    s.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
63	[BUG]  [BUGGY]  Character(s)  {  cached  =  s.substring(0,  s.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Character(s)  {  cached  =  s.substring(0,  s.length()  -  1);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Character(s)  {  cached  =  s.substring(0,  s.length()  -  1);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    s.substring(0,    s.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
64	[BUG]  [BUGGY]  Context  context  =  Context.createContext(s);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  context  =  Context.createContext(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  context  =  Context.createContext(s);	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    s.substring(0,    s.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
65	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
66	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
67	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
68	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
69	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
70	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
71	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toUpperCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
74	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toUpperCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
75	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
76	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toUpperCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
77	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.toUpperCase();  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.toUpperCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  	72	None	replace
78	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().getCurrentContext();  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContext().getCurrentContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContext().getCurrentContext();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  	110	None	replace
79	[BUG]  [BUGGY]  Context  cc  =  createCurrentContext();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  createCurrentContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  createCurrentContext();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
80	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(context);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContext(context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContext(context);	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  	110	None	replace
81	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(s);  [CE]  [FE]                                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContext(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContext(s);	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  	110	None	replace
82	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextInput();  [CE]  [FE]                                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContextInput();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContextInput();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  	110	None	replace
83	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  ESCAPED_JS_STRINGS.keySet();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  ESCAPED_JS_STRINGS.keySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  ESCAPED_JS_STRINGS.keySet();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	79	None	replace
84	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.keySet();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.keySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  ESCAPED_JS_STRINGS.keySet();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	79	None	replace
85	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getValue();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	79	None	replace
86	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getKey();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getKey();    }    	non-compiled	[CE]  	96	None	replace
87	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getKey();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getKey();    }    	non-compiled	[CE]  	96	None	replace
88	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getValue();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getKey();    }    	non-compiled	[CE]  	96	None	replace
89	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  cached  =  ESCAPED_JS_STRINGS.entrySet();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  cached  =  ESCAPED_JS_STRINGS.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  cached  =  ESCAPED_JS_STRINGS.entrySet();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getKey();    }    	non-compiled	[CE]  	96	None	replace
90	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getValue();  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getKey();    }    	non-compiled	[CE]  	96	None	replace
91	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.toLowerCase();    }    	non-compiled	[CE]  	98	None	replace
92	[BUG]  [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.toLowerCase();    }    	non-compiled	[CE]  	98	None	replace
93	[BUG]  [BUGGY]  cached  =  entries.toLowerCase();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entries.toLowerCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entries.toLowerCase();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.toLowerCase();    }    	non-compiled	[CE]  	98	None	replace
94	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toUpperCase();  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toUpperCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.toLowerCase();    }    	non-compiled	[CE]  	98	None	replace
95	[BUG]  [BUGGY]  cc.addJsString(s);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(s);	  cc.addJsString(jsString);    	non-compiled	[CE]  	38	None	replace
96	[BUG]  [BUGGY]  cc.addJsString(jsString,  cached);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(jsString,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(jsString,  cached);	  cc.addJsString(jsString);    	non-compiled	[CE]  	38	None	replace
97	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getValue());  }	  Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	65	None	replace
98	[BUG]  [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	65	None	replace
99	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  add(entry.getKey());  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  add(entry.getKey());  }	  Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	65	None	replace
100	[BUG]  [BUGGY]  Context.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	65	None	replace
101	[BUG]  [BUGGY]  Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	65	None	replace
102	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	65	None	replace
103	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getValue());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getValue());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  	75	None	replace
104	[BUG]  [BUGGY]  addString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  	75	None	replace
105	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addString(entry.getKey());  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  	75	None	replace
106	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  	75	None	replace
107	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  addString(entry.getKey());  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  addString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  addString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  	75	None	replace
108	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    this.cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	101	None	replace
109	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getKey();  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    this.cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	101	None	replace
110	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getKey();  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    this.cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	101	None	replace
111	[BUG]  [BUGGY]  cached  =  this.cached.entrySet().getValue();  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  this.cached.entrySet().getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  this.cached.entrySet().getValue();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    this.cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	101	None	replace
112	[BUG]  [BUGGY]  Context  cc  =  context.createContext();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.createContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.createContext();	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    }    	non-compiled	[CE]  	36	None	replace
113	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  addJsString(cc,  s);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.getCurrentContext();  addJsString(cc,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentContext();  addJsString(cc,  s);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    s);    	non-compiled	[CE]  	58	None	replace
114	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.valueOf(s));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.valueOf(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.valueOf(s));	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    s);    	non-compiled	[CE]  	58	None	replace
115	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  add(cc,  s);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  add(cc,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  add(cc,  s);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    s);    	non-compiled	[CE]  	58	None	replace
116	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  this.addJsString(cc,  s);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  this.addJsString(cc,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  this.addJsString(cc,  s);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    s);    	non-compiled	[CE]  	58	None	replace
117	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	55	None	replace
118	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  cached.entrySet();  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  cached.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  cached.entrySet();	  Map.Entry    <    String,    String>    entry    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	26	None	replace
119	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.get(s);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.get(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.get(s);	  Map.Entry    <    String,    String>    entry    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	26	None	replace
120	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.keySet();  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.keySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.keySet();	  Map.Entry    <    String,    String>    entry    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	26	None	replace
121	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  new  HashMap  <  String,  String>(ESCAPED_JS_STRINGS.entrySet());  [CE]  orphaned  case  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  new  HashMap  <  String,  String>(ESCAPED_JS_STRINGS.entrySet());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  new  HashMap  <  String,  String>(ESCAPED_JS_STRINGS.entrySet());	  Map.Entry    <    String,    String>    entry    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	26	None	replace
122	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.values();  [CE]  orphaned  case  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.values();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.values();	  Map.Entry    <    String,    String>    entry    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	26	None	replace
123	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  new  HashMap  <  String,  String>();  [CE]  orphaned  case  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  new  HashMap  <  String,  String>();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  new  HashMap  <  String,  String>();	  Map.Entry    <    String,    String>    entry    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	26	None	replace
124	[BUG]  [BUGGY]  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  orphaned  case	48	None	replace
125	[BUG]  [BUGGY]  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  orphaned  case	77	None	replace
126	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getValue();  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    map.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  orphaned  case	102	None	replace
127	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getKey();  }  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    map.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  orphaned  case	102	None	replace
128	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.map.entrySet())  {  cached  =  entry.getValue();  }  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.map.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.map.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    map.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  orphaned  case	102	None	replace
129	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  map.entrySet();  [CE]  orphaned  case  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  map.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  map.entrySet();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    map.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  orphaned  case	102	None	replace
130	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString    	non-compiled	[CE]  orphaned  case	68	None	replace
131	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  ESCAPED_JS_STRINGS.get(s);	  cached    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	11	None	replace
132	[BUG]  [BUGGY]  cached  =  JS_STRINGS.entrySet();  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JS_STRINGS.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JS_STRINGS.entrySet();	  cached    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	11	None	replace
133	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(cached);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.get(cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  ESCAPED_JS_STRINGS.get(cached);	  cached    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	11	None	replace
134	[BUG]  [BUGGY]  cached  =  JS_STRINGS.get(s);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JS_STRINGS.get(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JS_STRINGS.get(s);	  cached    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  orphaned  case	11	None	replace
135	[BUG]  [BUGGY]  add(JSString.valueOf(cached));  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(JSString.valueOf(cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JSString.valueOf(cached));	  add(JsString.valueOf(cached));    	non-compiled	[CE]  orphaned  case	59	None	replace
136	[BUG]  [BUGGY]  cc.add(JsString.valueOf(cached));  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(JsString.valueOf(cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(JsString.valueOf(cached));	  add(JsString.valueOf(cached));    	non-compiled	[CE]  orphaned  case	59	None	replace
137	[BUG]  [BUGGY]  cc.add(JSString.valueOf(cached));  [CE]  orphaned  case  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(JSString.valueOf(cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(JSString.valueOf(cached));	  add(JsString.valueOf(cached));    	non-compiled	[CE]  orphaned  case	59	None	replace
138	[BUG]  [BUGGY]  add(JSString.valueOf(cached),  s);  [CE]  orphaned  case  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(JSString.valueOf(cached),  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JSString.valueOf(cached),  s);	  add(JsString.valueOf(cached));    	non-compiled	[CE]  orphaned  case	59	None	replace
139	[BUG]  [BUGGY]  append(JSString.valueOf(cached));  [CE]  orphaned  case  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  append(JSString.valueOf(cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	append(JSString.valueOf(cached));	  add(JsString.valueOf(cached));    	non-compiled	[CE]  orphaned  case	59	None	replace
140	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  cached);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  cached);	  Context    cc    =    Context.getCurrentContextForCodeInsertion(s);    	non-compiled	[CE]  orphaned  case	84	None	replace
141	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForJsStringInsertion(s);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContextForJsStringInsertion(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForJsStringInsertion(s);	  Context    cc    =    Context.getCurrentContextForCodeInsertion(s);    	non-compiled	[CE]  orphaned  case	84	None	replace
142	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(jsString);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(jsString);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(jsString);	  Context    cc    =    Context.getCurrentContextForCodeInsertion(s);    	non-compiled	[CE]  orphaned  case	84	None	replace
143	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForJSCodeInsertion(s);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContextForJSCodeInsertion(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForJSCodeInsertion(s);	  Context    cc    =    Context.getCurrentContextForCodeInsertion(s);    	non-compiled	[CE]  orphaned  case	84	None	replace
144	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  context);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  context);	  Context    cc    =    Context.getCurrentContextForCodeInsertion(s);    	non-compiled	[CE]  orphaned  case	84	None	replace
145	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForJsString(s);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContextForJsString(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForJsString(s);	  Context    cc    =    Context.getCurrentContextForCodeInsertion(s);    	non-compiled	[CE]  orphaned  case	84	None	replace
146	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  orphaned  case	63	None	replace
147	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  orphaned  case	63	None	replace
148	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  orphaned  case	63	None	replace
149	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  orphaned  case	63	None	replace
150	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  cached  =  cached.entrySet();  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  cached  =  cached.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  cached  =  cached.entrySet();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  orphaned  case	20	None	replace
151	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  orphaned  case	66	None	replace
152	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  orphaned  case	66	None	replace
153	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(s,  cached);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(s,  cached);	  Context    cc    =    Context.getCurrentContext(s);    	non-compiled	[CE]  orphaned  case	2	None	replace
154	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  s);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(context,  s);	  Context    cc    =    Context.getCurrentContext(s);    	non-compiled	[CE]  orphaned  case	2	None	replace
155	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(consumer);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(consumer);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(consumer);	  Context    cc    =    Context.getCurrentContext(s);    	non-compiled	[CE]  orphaned  case	2	None	replace
156	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(s,  context);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(s,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(s,  context);	  Context    cc    =    Context.getCurrentContext(s);    	non-compiled	[CE]  orphaned  case	2	None	replace
157	[BUG]  [BUGGY]  cached  =  entry.getKey()  +  s.getValue();  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getKey()  +  s.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getKey()  +  s.getValue();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  orphaned  case	31	None	replace
158	[BUG]  [BUGGY]  cached  =  entry.getKey()  /  entry.getValue();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getKey()  /  entry.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getKey()  /  entry.getValue();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
159	[BUG]  [BUGGY]  cached  =  entry.getKey(),  entry.getValue();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getKey(),  entry.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getKey(),  entry.getValue();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
160	[BUG]  [BUGGY]  cached  =  entry.getValue()  +  entry.getKey();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getValue()  +  entry.getKey();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getValue()  +  entry.getKey();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
161	[BUG]  [BUGGY]  cached  =  s.getKey()  +  entry.getValue();  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  s.getKey()  +  entry.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  s.getKey()  +  entry.getValue();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
162	[BUG]  [BUGGY]  cached  =  entry.getValue()  +  s.getKey();  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getValue()  +  s.getKey();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getValue()  +  s.getKey();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
163	[BUG]  [BUGGY]  cached  =  entry.getKey()  +  s.toString();  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getKey()  +  s.toString();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getKey()  +  s.toString();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
164	[BUG]  [BUGGY]  if(cached!=  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
165	[BUG]  [BUGGY]  if(cached  ==  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
166	[BUG]  [BUGGY]  if(cached!=  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
167	[BUG]  [BUGGY]  if(cached!=  null)  {  if(s!=  null)  {  cached  =  jsString(s);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(s!=  null)  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(s!=  null)  {  cached  =  jsString(s);  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
168	[BUG]  [BUGGY]  if(cached!=  null)  {  if(jsString(s)!=  null)  {  cached  =  JsString.valueOf(s);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(jsString(s)!=  null)  {  cached  =  JsString.valueOf(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(jsString(s)!=  null)  {  cached  =  JsString.valueOf(s);  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
169	[BUG]  [BUGGY]  if(cached  ==  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  }	  if(jsString(s)    ==    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	82	None	replace
170	[BUG]  [BUGGY]  if(cached  ==  null)  {  if(s  ==  null)  {  cached  =  jsString(s);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  if(s  ==  null)  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  if(s  ==  null)  {  cached  =  jsString(s);  }	  if(jsString(s)    ==    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	82	None	replace
171	[BUG]  [BUGGY]  if(cached  ==  null)  {  if(jsString(s)  ==  null)  {  cached  =  JsString.valueOf(s);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  if(jsString(s)  ==  null)  {  cached  =  JsString.valueOf(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  if(jsString(s)  ==  null)  {  cached  =  JsString.valueOf(s);  }	  if(jsString(s)    ==    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	82	None	replace
172	[BUG]  [BUGGY]  cc.addJsString(JS_STRING_SEPARATOR,  cached);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRING_SEPARATOR,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRING_SEPARATOR,  cached);	  cc.addJsString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  	100	None	replace
173	[BUG]  [BUGGY]  cc.addJsString(JS_STRING_SEPARATOR  +  s);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRING_SEPARATOR  +  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRING_SEPARATOR  +  s);	  cc.addJsString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
174	[BUG]  [BUGGY]  cc.add(JS_STRING_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(JS_STRING_SEPARATOR);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(JS_STRING_SEPARATOR);	  cc.addJsString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
175	[BUG]  [BUGGY]  cc.addJsString(JS_STRING_SEPARATOR,  s);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRING_SEPARATOR,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRING_SEPARATOR,  s);	  cc.addJsString(JS_STRING_SEPARATOR);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
176	[BUG]  [BUGGY]  cc.addJsString(JS_STRINGS,  cached);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRINGS,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRINGS,  cached);	  cc.addJsString(JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
177	[BUG]  [BUGGY]  cc.add(JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(JS_STRINGS);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(JS_STRINGS);	  cc.addJsString(JS_STRINGS);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
178	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(context,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(context,  cached);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
179	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  STATEMENT);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(context,  STATEMENT);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(context,  STATEMENT);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
180	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  this);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(context,  this);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(context,  this);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
181	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(context,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(context,  context);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
182	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  true);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(context,  true);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(context,  true);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
183	[BUG]  [BUGGY]  jsString(JS_STRINGS);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(JS_STRINGS);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(JS_STRINGS);	  jsString(s);    	non-compiled	[CE]  	106	None	replace
184	[BUG]  [BUGGY]  jsString(JS_STRINGS.get(s));  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(JS_STRINGS.get(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(JS_STRINGS.get(s));	  jsString(s);    	non-compiled	[CE]  	106	None	replace
185	[BUG]  [BUGGY]  jsString(s,  cached);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(s,  cached);	  jsString(s);    	non-compiled	[CE]  	106	None	replace
186	[BUG]  [BUGGY]  jsString(s.toCharArray());  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(s.toCharArray());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(s.toCharArray());	  jsString(s);    	non-compiled	[CE]  	106	None	replace
187	[BUG]  [BUGGY]  jsString(s.substring(1));  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(s.substring(1));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(s.substring(1));	  jsString(s);    	non-compiled	[CE]  	106	None	replace
188	[BUG]  [BUGGY]  addJsString(s);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addJsString(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addJsString(s);	  jsString(s);    	non-compiled	[CE]  	106	None	replace
189	[BUG]  [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	12	None	replace
190	[BUG]  [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	12	None	replace
191	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	19	None	replace
192	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	19	None	replace
193	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.values())  {  cached  =  entry.getValue();  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.values())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.values())  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	19	None	replace
194	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  cached);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(context,  cached);	  Context    cc    =    Context.getCurrentContext(context);    	non-compiled	[CE]  	1	None	replace
195	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  STATEMENT);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  STATEMENT);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(context,  STATEMENT);	  Context    cc    =    Context.getCurrentContext(context);    	non-compiled	[CE]  	1	None	replace
196	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  this);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  this);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(context,  this);	  Context    cc    =    Context.getCurrentContext(context);    	non-compiled	[CE]  	1	None	replace
197	[BUG]  [BUGGY]  Context  cc  =  Context.currentToken();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.currentToken();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.currentToken();	  Context    cc    =    Context.current();    	non-compiled	[CE]  	57	None	replace
198	[BUG]  [BUGGY]  addJsString(Context.getCurrentContext());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addJsString(Context.getCurrentContext());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addJsString(Context.getCurrentContext());	  Context    cc    =    Context.getCurrentContext();    addJsString(cc);    	non-compiled	[CE]  	61	None	replace
199	[BUG]  [BUGGY]  cc  =  Context.getCurrentContext();  addJsString(cc);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc  =  Context.getCurrentContext();  addJsString(cc);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc  =  Context.getCurrentContext();  addJsString(cc);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc);    	non-compiled	[CE]  	61	None	replace
200	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext();  addJsString(cc);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.getCurrentContext();  addJsString(cc);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentContext();  addJsString(cc);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc);    	non-compiled	[CE]  	61	None	replace
201	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getKey();  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.keySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	70	None	replace
202	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.values())  {  cached  =  entry.getValue();  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.values())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.values())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.keySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	70	None	replace
203	[BUG]  [BUGGY]  cached  =  entries.getValue();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entries.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entries.getValue();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getValue();    }    	non-compiled	[CE]  	93	None	replace
204	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getValue();    }    	non-compiled	[CE]  	93	None	replace
205	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  entries.getValue();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  entries.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  entries.getValue();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getValue();    }    	non-compiled	[CE]  	93	None	replace
206	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJAsString(s);    }    	non-compiled	[CE]  	88	None	replace
207	[BUG]  [BUGGY]  Context  cc  =  this.context.getCurrentContext();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  this.context.getCurrentContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  this.context.getCurrentContext();	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  	4	None	replace
208	[BUG]  [BUGGY]  Context  cc  =  consumer.getCurrentContext();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  consumer.getCurrentContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  consumer.getCurrentContext();	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  	4	None	replace
209	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext(s);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.getCurrentContext(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentContext(s);	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  	4	None	replace
210	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext(true);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.getCurrentContext(true);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentContext(true);	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  	4	None	replace
211	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  cached);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  	105	None	replace
212	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(lhsContext);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  	105	None	replace
213	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(s);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(s);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  	105	None	replace
214	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  context);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(lhsContext,  context);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  	105	None	replace
215	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(cc);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(cc);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(cc);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  	105	None	replace
216	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(null,  context);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(null,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(null,  context);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  	105	None	replace
217	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.getCurrentContext(context);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  	107	None	replace
218	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(false);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(false);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.getCurrentContext(false);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  	107	None	replace
219	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(lhsContext);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(lhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.getCurrentContext(lhsContext);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  	107	None	replace
220	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(null);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContext(null);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.getCurrentContext(null);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  	107	None	replace
221	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextInstance();  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextInstance();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.getCurrentContextInstance();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  	107	None	replace
222	[BUG]  [BUGGY]  Context  rhsContext  =  Context.current();  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.current();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.current();	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  	107	None	replace
223	[BUG]  [BUGGY]  jsString(JSString.valueOf(s));  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(JSString.valueOf(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(JSString.valueOf(s));	  add(JSString.valueOf(s));    	non-compiled	[CE]  	60	None	replace
224	[BUG]  [BUGGY]  addJsString(JSString.valueOf(s));  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addJsString(JSString.valueOf(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addJsString(JSString.valueOf(s));	  add(JSString.valueOf(s));    	non-compiled	[CE]  	60	None	replace
225	[BUG]  [BUGGY]  add(JSString.valueOf(s),  cached);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(JSString.valueOf(s),  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JSString.valueOf(s),  cached);	  add(JSString.valueOf(s));    	non-compiled	[CE]  	60	None	replace
226	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached    ==    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  	9	None	replace
227	[BUG]  [BUGGY]  cc.addJsString(JS_STRINGS.get(s),  cached);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRINGS.get(s),  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRINGS.get(s),  cached);	  cc.addJsString(JS_STRINGS.get(s));    	non-compiled	[CE]  	99	None	replace
228	[BUG]  [BUGGY]  cc.addJsString(JS_STRINGS.get(s,  cached));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRINGS.get(s,  cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRINGS.get(s,  cached));	  cc.addJsString(JS_STRINGS.get(s));    	non-compiled	[CE]  	99	None	replace
229	[BUG]  [BUGGY]  cc.add(JS_STRINGS.get(s));  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(JS_STRINGS.get(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(JS_STRINGS.get(s));	  cc.addJsString(JS_STRINGS.get(s));    	non-compiled	[CE]  	99	None	replace
230	[BUG]  [BUGGY]  cc.addJsString(ESCAPED_JS_STRINGS.get(s));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(ESCAPED_JS_STRINGS.get(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(ESCAPED_JS_STRINGS.get(s));	  cc.addJsString(JS_STRINGS.get(s));    	non-compiled	[CE]  	99	None	replace
231	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getKey();  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  	22	None	replace
232	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  	22	None	replace
233	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.values())  {  cached  =  entry.getKey();  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.values())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.values())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  	22	None	replace
234	[BUG]  [BUGGY]  add(ESCAPED_JS_STRINGS,  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(ESCAPED_JS_STRINGS,  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(ESCAPED_JS_STRINGS,  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet()));    	non-compiled	[CE]  	16	None	replace
235	[BUG]  [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet()));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
236	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  cached.entrySet()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  cached.entrySet()));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  cached.entrySet()));	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet()));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
237	[BUG]  [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet()));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
238	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values()));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values()));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values()));	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet()));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
239	[BUG]  [BUGGY]  cm.addJsString(jsString(s),  cached);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cm.addJsString(jsString(s),  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cm.addJsString(jsString(s),  cached);	  cc.addJsString(jsString(s),    cached);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
240	[BUG]  [BUGGY]  cc.addJsString(JS_STRING_SIGNATURE,  cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRING_SIGNATURE,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRING_SIGNATURE,  cached);	  cc.addJsString(jsString(s),    cached);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
241	[BUG]  [BUGGY]  cm.addJsString(jsString(s));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cm.addJsString(jsString(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cm.addJsString(jsString(s));	  cc.addJsString(jsString(s),    cached);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
242	[BUG]  [BUGGY]  for(String  s  :  cached.toCharArray())  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(String  s  :  cached.toCharArray())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(String  s  :  cached.toCharArray())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.toCharArray())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
243	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.toCharArray())  {  cached  =  JsString.valueOf(s);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.toCharArray())  {  cached  =  JsString.valueOf(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  cached.toCharArray())  {  cached  =  JsString.valueOf(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.toCharArray())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
244	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.toCharArray())  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.toCharArray())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.toCharArray())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.toCharArray())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
245	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.toCharArray())  {  cached  =  JsStringUtil.jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.toCharArray())  {  cached  =  JsStringUtil.jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  cached.toCharArray())  {  cached  =  JsStringUtil.jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.toCharArray())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
246	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
247	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue()  *  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
248	[BUG]  [BUGGY]  cm.addJsString(jsString(s,  cached));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cm.addJsString(jsString(s,  cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cm.addJsString(jsString(s,  cached));	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
249	[BUG]  [BUGGY]  cc.addJsString(JSString.fromString(s,  cached));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.fromString(s,  cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.fromString(s,  cached));	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
250	[BUG]  [BUGGY]  cc.addJsString(jsString(s,  cached),  s);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(jsString(s,  cached),  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(jsString(s,  cached),  s);	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
251	[BUG]  [BUGGY]  cf.addJsString(jsString(s,  cached));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cf.addJsString(jsString(s,  cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cf.addJsString(jsString(s,  cached));	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
252	[BUG]  [BUGGY]  cc.addJsString(jsString(s,  cached),  JS_STRINGS);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(jsString(s,  cached),  JS_STRINGS);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(jsString(s,  cached),  JS_STRINGS);	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
253	[BUG]  [BUGGY]  cached  =  cached.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  cached.toLowerCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  cached.toLowerCase();	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
254	[BUG]  [BUGGY]  cached  =  s.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  s.toLowerCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  s.toLowerCase();	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
255	[BUG]  [BUGGY]  cached  =  cc.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  cc.toLowerCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  cc.toLowerCase();	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
256	[BUG]  [BUGGY]  cached  =  JsStringUtil.toLowerCase(entry);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsStringUtil.toLowerCase(entry);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsStringUtil.toLowerCase(entry);	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
257	[BUG]  [BUGGY]  cached  =  JsStringUtil.toLowerCase(cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsStringUtil.toLowerCase(cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsStringUtil.toLowerCase(cached);	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
258	[BUG]  [BUGGY]  cached  =  context.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  context.toLowerCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  context.toLowerCase();	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
259	[BUG]  [BUGGY]  for(String  s  :  cached.keySet())  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(String  s  :  cached.keySet())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(String  s  :  cached.keySet())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
260	[BUG]  [BUGGY]  Context  context  =  Context.createContext(context);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  context  =  Context.createContext(context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  context  =  Context.createContext(context);	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
261	[BUG]  [BUGGY]  for(String  s  :  cached.keySet())  {  cached  =  JsString.valueOf(s);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(String  s  :  cached.keySet())  {  cached  =  JsString.valueOf(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(String  s  :  cached.keySet())  {  cached  =  JsString.valueOf(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
262	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  cached);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(context,  cached);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
263	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(lhsContext);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(lhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(lhsContext);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
264	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  context);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(null,  context);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
265	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  context);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(s,  context);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
266	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  this);  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  this);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(context,  this);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
267	[BUG]  [BUGGY]  cc.addJsString(JSString.fromString(s),  cached);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.fromString(s),  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.fromString(s),  cached);	  cc.addJsString(JSString.fromString(s));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
268	[BUG]  [BUGGY]  cc.addJsString(JSString.fromString(cached));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.fromString(cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.fromString(cached));	  cc.addJsString(JSString.fromString(s));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
269	[BUG]  [BUGGY]  cc.add(JSString.fromString(s));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(JSString.fromString(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(JSString.fromString(s));	  cc.addJsString(JSString.fromString(s));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
270	[BUG]  [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
271	[BUG]  [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
272	[BUG]  [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
273	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  add(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  add(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
274	[BUG]  [BUGGY]  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
275	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentTimeMillis();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentTimeMillis();	  Context    cc    =    Context.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
276	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis()  +  1;  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.currentTimeMillis()  +  1;  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.currentTimeMillis()  +  1;	  Context    cc    =    Context.currentTimeMillis();    	non-compiled	[CE]  	85	None	replace
277	[BUG]  [BUGGY]  Context  cc  =  context.currentTimeMillis();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.currentTimeMillis();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.currentTimeMillis();	  Context    cc    =    Context.currentTimeMillis();    	non-compiled	[CE]  	85	None	replace
278	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis()  +  4;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.currentTimeMillis()  +  4;  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.currentTimeMillis()  +  4;	  Context    cc    =    Context.currentTimeMillis();    	non-compiled	[CE]  	85	None	replace
279	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis()  +  2;  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.currentTimeMillis()  +  2;  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.currentTimeMillis()  +  2;	  Context    cc    =    Context.currentTimeMillis();    	non-compiled	[CE]  	85	None	replace
280	[BUG]  [BUGGY]  cached  =  s.getValue();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  s.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  s.getValue();	  cached    =    entry.getValue();    	non-compiled	[CE]  	92	None	replace
281	[BUG]  [BUGGY]  cached  =  cached.getValue();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  cached.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  cached.getValue();	  cached    =    entry.getValue();    	non-compiled	[CE]  	92	None	replace
282	[BUG]  [BUGGY]  cached  =  jsString(entry.getValue());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(entry.getValue());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(entry.getValue());	  cached    =    entry.getValue();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
283	[BUG]  [BUGGY]  cached  =  this.entry.getValue();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  this.entry.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  this.entry.getValue();	  cached    =    entry.getValue();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
284	[BUG]  [BUGGY]  cached  =  cc.getValue();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  cc.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  cc.getValue();	  cached    =    entry.getValue();    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
285	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(lhsContext);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(lhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(lhsContext);	  Context    cc    =    Context.getCurrentContext(rhsContext);    	non-compiled	[CE]  	86	None	replace
286	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  lhsContext);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  lhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(context,  lhsContext);	  Context    cc    =    Context.getCurrentContext(rhsContext);    	non-compiled	[CE]  	86	None	replace
287	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  rhsContext);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  rhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(context,  rhsContext);	  Context    cc    =    Context.getCurrentContext(rhsContext);    	non-compiled	[CE]  	86	None	replace
288	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(rhsContext,  cached);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(rhsContext,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(rhsContext,  cached);	  Context    cc    =    Context.getCurrentContext(rhsContext);    	non-compiled	[CE]  	86	None	replace
289	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addString(entry.getKey());  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  	74	None	replace
290	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createCurrentContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createCurrentContext();	  Context    cc    =    Context.currentContext();    	non-compiled	[CE]  	3	None	replace
291	[BUG]  [BUGGY]  Context  cc  =  Context.newCurrentContext();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.newCurrentContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.newCurrentContext();	  Context    cc    =    Context.currentContext();    	non-compiled	[CE]  	3	None	replace
292	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  	81	None	replace
293	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s))  {  cached  =  entry.getKey();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s))  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s))  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  	81	None	replace
294	[BUG]  [BUGGY]  add(s.getKey());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(s.getKey());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(s.getKey());	  add(entry.getKey());    	non-compiled	[CE]  	67	None	replace
295	[BUG]  [BUGGY]  add(entry.getKey(),  cached);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(entry.getKey(),  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(entry.getKey(),  cached);	  add(entry.getKey());    	non-compiled	[CE]  	67	None	replace
296	[BUG]  [BUGGY]  add(entry.getValue());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(entry.getValue());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(entry.getValue());	  add(entry.getKey());    	non-compiled	[CE]  	67	None	replace
297	[BUG]  [BUGGY]  addJsString(entry.getKey());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addJsString(entry.getKey());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addJsString(entry.getKey());	  add(entry.getKey());    	non-compiled	[CE]  	67	None	replace
298	[BUG]  [BUGGY]  cc.add(entry.getKey());  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(entry.getKey());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(entry.getKey());	  add(entry.getKey());    	non-compiled	[CE]  	67	None	replace
299	[BUG]  [BUGGY]  add(s,  entry.getKey());  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(s,  entry.getKey());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(s,  entry.getKey());	  add(entry.getKey());    	non-compiled	[CE]  	67	None	replace
300	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toLowerCase();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  	71	None	replace
301	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  cached);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(s,  cached);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  	109	None	replace
302	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  s);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(context,  s);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  	109	None	replace
303	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  s);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(null,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(null,  s);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  	109	None	replace
304	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(consumer);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(consumer);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(consumer);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  	109	None	replace
305	[BUG]  [BUGGY]  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  	39	None	replace
306	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  JsString.valueOf(s);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  JsString.valueOf(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  JsString.valueOf(s);  }	  if(cached!=    null)    {    for(String    s    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  	39	None	replace
307	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s))  {  cached  =  entry.getValue();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s))  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s))  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	80	None	replace
308	[BUG]  [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }	  if(cached    ==    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  	45	None	replace
309	[BUG]  [BUGGY]  add(ESCAPED_JS_STRINGS.get(s));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(ESCAPED_JS_STRINGS.get(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(ESCAPED_JS_STRINGS.get(s));	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
310	[BUG]  [BUGGY]  add(ESCAPED_JS_STRINGS.keySet());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(ESCAPED_JS_STRINGS.keySet());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(ESCAPED_JS_STRINGS.keySet());	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
311	[BUG]  [BUGGY]  add(JS_STRINGS.keySet());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(JS_STRINGS.keySet());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JS_STRINGS.keySet());	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
312	[BUG]  [BUGGY]  cc.add(ESCAPED_JS_STRINGS.entrySet());  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(ESCAPED_JS_STRINGS.entrySet());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(ESCAPED_JS_STRINGS.entrySet());	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
313	[BUG]  [BUGGY]  add(JS_STRINGS.entrySet());  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(JS_STRINGS.entrySet());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JS_STRINGS.entrySet());	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
314	[BUG]  [BUGGY]  add(ESCAPED_JS_STRINGS.entrySet(),  cached);  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(ESCAPED_JS_STRINGS.entrySet(),  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(ESCAPED_JS_STRINGS.entrySet(),  cached);	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
315	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getValue());    }    	non-compiled	[CE]  	18	None	replace
316	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getValue());  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getValue());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getValue());    }    	non-compiled	[CE]  	18	None	replace
317	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  	13	None	replace
318	[BUG]  [BUGGY]  cached  =  entry.getValue()  +  entry.getValue();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getValue()  +  entry.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getValue()  +  entry.getValue();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getValue();    }    	non-compiled	[CE]  	29	None	replace
319	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toLowerCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  	44	None	replace
320	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  	44	None	replace
321	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.toLowerCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  	44	None	replace
322	[BUG]  [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  	17	None	replace
323	[BUG]  [BUGGY]  if(ESCAPED_JS_STRINGS.contains(s))  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(ESCAPED_JS_STRINGS.contains(s))  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(ESCAPED_JS_STRINGS.contains(s))  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  	17	None	replace
324	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  addJsString(entry.getKey());  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  addJsString(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  	17	None	replace
325	[BUG]  [BUGGY]  map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  	17	None	replace
326	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(false);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(false);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(false);	  Context    cc    =    Context.getCurrentContext(null);    	non-compiled	[CE]  	56	None	replace
327	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(null,  cached);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(null,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(null,  cached);	  Context    cc    =    Context.getCurrentContext(null);    	non-compiled	[CE]  	56	None	replace
328	[BUG]  [BUGGY]  if(cached!=  null)  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  ESCAPED_JS_STRINGS.put(s,  cached);  }	  ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  	47	None	replace
329	[BUG]  [BUGGY]  if(cached!=  null)  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  	47	None	replace
330	[BUG]  [BUGGY]  if(cached!=  null)  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }	  ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  	47	None	replace
331	[BUG]  [BUGGY]  cached  =  JsString(s);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsString(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsString(s);	  if(cached    ==    null)    {    cached    =    JsString(s);    }    	non-compiled	[CE]  	104	None	replace
332	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }	  if(cached    ==    null)    {    cached    =    JsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  	87	None	replace
333	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached    ==    null)    {    cached    =    JsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  	87	None	replace
334	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached    ==    null)    {    cached    =    JsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  	87	None	replace
335	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }	  if(cached    ==    null)    {    cached    =    JsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  	87	None	replace
336	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString(JS_STRINGS);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString(JS_STRINGS);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString(JS_STRINGS);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }	  if(cached    ==    null)    {    cached    =    JsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  	87	None	replace
337	[BUG]  [BUGGY]  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  	78	None	replace
338	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  	28	None	replace
339	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  not  a  statement	28	None	replace
340	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  map.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    map.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	102	None	replace
341	[BUG]  [BUGGY]  add(ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	25	None	replace
342	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	25	None	replace
343	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString(s);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString(s);  }	  if(cached    ==    null)    {    cached    =    JsString(s);    }    	non-compiled	[CE]  	104	None	replace
344	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString(JS_STRINGS);  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString(JS_STRINGS);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString(JS_STRINGS);  }	  if(cached    ==    null)    {    cached    =    JsString(s);    }    	non-compiled	[CE]  	104	None	replace
345	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(consume);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(consume);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(consume);	  Context    cc    =    Context.getCurrentContext(rhsContext);    	non-compiled	[CE]  	86	None	replace
346	[BUG]  [BUGGY]  if(this.cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(this.cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(this.cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    this.cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	101	None	replace
347	[BUG]  [BUGGY]  if(this.cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getKey();  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(this.cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(this.cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  this.cached.entrySet())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    this.cached.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	101	None	replace
348	[BUG]  [BUGGY]  Preconditions.checkState(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Preconditions.checkState(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Preconditions.checkState(cached  ==  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }	  if(cached    ==    null)    {    cached    =    JsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
349	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  JS_STRINGS.entrySet();  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  JS_STRINGS.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  JS_STRINGS.entrySet();	  Map.Entry    <    String,    String>    entry    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  not  a  statement	26	None	replace
350	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  esCAPED_JS_STRINGS.entrySet();  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  esCAPED_JS_STRINGS.entrySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  esCAPED_JS_STRINGS.entrySet();	  Map.Entry    <    String,    String>    entry    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  not  a  statement	26	None	replace
351	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.entrySet(s);  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.entrySet(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  =  ESCAPED_JS_STRINGS.entrySet(s);	  Map.Entry    <    String,    String>    entry    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  not  a  statement	26	None	replace
352	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(chunk);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(chunk);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(chunk);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  not  a  statement	48	None	replace
353	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue();  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
354	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.valueOf(cached));  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.valueOf(cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.valueOf(cached));	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    cached);    	non-compiled	[CE]  not  a  statement	43	None	replace
355	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  jsString);  [CE]  not  a  statement  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  jsString);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  addJsString(cc,  jsString);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    cached);    	non-compiled	[CE]  not  a  statement	43	None	replace
356	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  addJsString(cc,  cached);  [CE]  not  a  statement  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContext();  addJsString(cc,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContext();  addJsString(cc,  cached);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    cached);    	non-compiled	[CE]  not  a  statement	43	None	replace
357	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.toLowerCase();  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  not  a  statement	71	None	replace
358	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.toLowerCase();  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  not  a  statement	71	None	replace
359	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.josString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.josString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtilities.josString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  	78	None	replace
360	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.getString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.getString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtilities.getString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  not  a  statement	78	None	replace
361	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }	  if(cached    ==    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  not  a  statement	23	None	replace
362	[BUG]  [BUGGY]  if(cached!=  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	83	None	replace
363	[BUG]  [BUGGY]  if(cached  ==  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  if(jsString(s)!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	83	None	replace
364	[BUG]  [BUGGY]  if(cached!=  null)  {  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	83	None	replace
365	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  orphaned  case	81	None	replace
366	[BUG]  [BUGGY]  cached  =  jsString.toLowerCase();  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString.toLowerCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString.toLowerCase();	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  orphaned  case	97	None	replace
367	[BUG]  [BUGGY]  cached  =  entry.toLowerCase(false);  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.toLowerCase(false);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.toLowerCase(false);	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  not  a  statement	97	None	replace
368	[BUG]  [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getKey());  }	  if(cached    ==    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  not  a  statement	15	None	replace
369	[BUG]  [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getKey());  }	  if(cached    ==    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  not  a  statement	15	None	replace
370	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getKey();    }    	non-compiled	[CE]  not  a  statement	32	None	replace
371	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  addString(entry.getKey());  }  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  addString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  addString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  not  a  statement	75	None	replace
372	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  not  a  statement	75	None	replace
373	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getKey());  }  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  not  a  statement	17	None	replace
374	[BUG]  [BUGGY]  ((  Map.Entry  <  String,  String>)entry).keySet())  {  add(entry.getKey());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  ((  Map.Entry  <  String,  String>)entry).keySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	((  Map.Entry  <  String,  String>)entry).keySet())  {  add(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	66	None	replace
375	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  orphaned  case	77	None	replace
376	[BUG]  [BUGGY]  result  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  result  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	result  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);	  if(cached!=    null)    {    cached    =    JsString.valueOf(cached);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  orphaned  case	77	None	replace
377	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    }    	non-compiled	[CE]  orphaned  case	36	None	replace
378	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(cached);  }  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtil.jsString(cached);  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    }    	non-compiled	[CE]  orphaned  case	36	None	replace
379	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(null,  s);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(null,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(null,  s);	  Context    cc    =    Context.getCurrentContext(null);    	non-compiled	[CE]  orphaned  case	56	None	replace
380	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(null,  context);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(null,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(null,  context);	  Context    cc    =    Context.getCurrentContext(null);    	non-compiled	[CE]  orphaned  case	56	None	replace
381	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  orphaned  case	103	None	replace
382	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsStringUtilities.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  orphaned  case	103	None	replace
383	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.getString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.getString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtilities.getString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  orphaned  case	103	None	replace
384	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	55	None	replace
385	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entries.getKey();  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entries.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entries.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getKey();    }    	non-compiled	[CE]  orphaned  case	96	None	replace
386	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  entries.entrySet())  {  cached  =  entries.getKey();  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  entries.entrySet())  {  cached  =  entries.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  entries.entrySet())  {  cached  =  entries.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getKey();    }    	non-compiled	[CE]  not  a  statement	96	None	replace
387	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entries.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.toLowerCase();    }    	non-compiled	[CE]  not  a  statement	98	None	replace
388	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  JsString.valueOf(cached.keySet()))  {  cached  =  jsString(s);  }  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  JsString.valueOf(cached.keySet()))  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  JsString.valueOf(cached.keySet()))  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  not  a  statement	40	None	replace
389	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  JsString.valueOf(s);  }  [CE]  not  a  statement  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  JsString.valueOf(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  JsString.valueOf(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  not  a  statement	40	None	replace
390	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  this.cached.keySet())  {  cached  =  jsString(s);  }  [CE]  not  a  statement  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  this.cached.keySet())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  this.cached.keySet())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  not  a  statement	40	None	replace
391	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentState();  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentState();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentState();	  Context    cc    =    Context.current();    	non-compiled	[CE]  not  a  statement	57	None	replace
392	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  JSON_STRING_ELSE);  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(context,  JSON_STRING_ELSE);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(context,  JSON_STRING_ELSE);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  not  a  statement	5	None	replace
393	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getValue());  }  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addString(entry.getValue());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  not  a  statement	74	None	replace
394	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  not  a  statement	74	None	replace
395	[BUG]  [BUGGY]  Context  cc  =  getCurrentStatementContext();  [CE]  not  a  statement  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentStatementContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentStatementContext();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  not  a  statement	110	None	replace
396	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().getCurrentStatement();  [CE]  not  a  statement  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContext().getCurrentStatement();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContext().getCurrentStatement();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  not  a  statement	110	None	replace
397	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s)));  [CE]  not  a  statement  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s)));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.get(s)));	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet()));    	non-compiled	[CE]  not  a  statement	16	None	replace
398	[BUG]  [BUGGY]  add(map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [CE]  not  a  statement  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet()));    	non-compiled	[CE]  not  a  statement	16	None	replace
399	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.keySet();  [CE]  not  a  statement  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.keySet();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  cached.keySet();	  CachedEntry    <    String,    String>    cached    =    cached.entrySet();    	non-compiled	[CE]  not  a  statement	21	None	replace
400	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.values();  [CE]  not  a  statement  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  cached.values();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  cached.values();	  CachedEntry    <    String,    String>    cached    =    cached.entrySet();    	non-compiled	[CE]  not  a  statement	21	None	replace
401	[BUG]  [BUGGY]  if(cached  ==  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(jsString(s)    ==    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	82	None	replace
402	[BUG]  [BUGGY]  if(cached!=  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(jsString(s)    ==    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	82	None	replace
403	[BUG]  [BUGGY]  cached  =  jsString(JS_STRINGS);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(JS_STRINGS);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(JS_STRINGS);	  cached    =    jsString(s);    	non-compiled	[CE]  	33	None	replace
404	[BUG]  [BUGGY]  cached  =  jsString(JS_STRINGS.get(s));  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(JS_STRINGS.get(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(JS_STRINGS.get(s));	  cached    =    jsString(s);    	non-compiled	[CE]  	33	None	replace
405	[BUG]  [BUGGY]  cached  =  jsString(cached);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(cached);	  cached    =    jsString(s);    	non-compiled	[CE]  	33	None	replace
406	[BUG]  [BUGGY]  cached  =  JsStringUtilities.jsString(cached);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsStringUtilities.jsString(cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsStringUtilities.jsString(cached);	  cached    =    jsString(s);    	non-compiled	[CE]  orphaned  case	33	None	replace
407	[BUG]  [BUGGY]  cached  =  JsStringUtil.jsString(cached);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  JsStringUtil.jsString(cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  JsStringUtil.jsString(cached);	  cached    =    jsString(s);    	non-compiled	[CE]  orphaned  case	33	None	replace
408	[BUG]  [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  orphaned  case	24	None	replace
409	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.class);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.class);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.class);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
410	[BUG]  [BUGGY]  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.valueOf(s));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.valueOf(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc  =  Context.getCurrentContext();  addJsString(cc,  JsString.valueOf(s));	  Context    cc    =    Context.getCurrentContext();    addJsString(cc,    s);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
411	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextInstance(context);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextInstance(context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.getCurrentContextInstance(context);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
412	[BUG]  [BUGGY]  s  =  JsString.valueOf(cached);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  s  =  JsString.valueOf(cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	s  =  JsString.valueOf(cached);	  if(cached    ==    null)    {    cached    =    JsString.valueOf(s);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
413	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
414	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
415	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
416	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  lhsContext);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  lhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  lhsContext);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
417	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  JSON_STRING_ELSE);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  JSON_STRING_ELSE);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  JSON_STRING_ELSE);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
418	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  this);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  this);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  this);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
419	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  add(entry.getValue());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
420	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(context);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(context);	  Context    cc    =    Context.getCurrentContextForCodeInsertion(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
421	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  this);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  this);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  this);	  Context    cc    =    Context.getCurrentContextForCodeInsertion(s);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
422	[BUG]  [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	For(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
423	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
424	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
425	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
426	[BUG]  [BUGGY]  if(!ESCAPED_JS_STRINGS.containsKey(s))  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(!ESCAPED_JS_STRINGS.containsKey(s))  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(!ESCAPED_JS_STRINGS.containsKey(s))  {  ESCAPED_JS_STRINGS.put(s,  cached);  }	  ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
427	[BUG]  [BUGGY]  if(!ESCAPED_JS_STRINGS.contains(s))  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(!ESCAPED_JS_STRINGS.contains(s))  {  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(!ESCAPED_JS_STRINGS.contains(s))  {  ESCAPED_JS_STRINGS.put(s,  cached);  }	  ESCAPED_JS_STRINGS.put(s,    cached);    	non-compiled	[CE]  	47	None	replace
428	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext(context);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.getCurrentContext(context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentContext(context);	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  	4	None	replace
429	[BUG]  [BUGGY]  Context  cc  =  context.createCurrentContext();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.createCurrentContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.createCurrentContext();	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  	4	None	replace
430	[BUG]  [BUGGY]  Context  cc  =  currentContext.getCurrentContext();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  currentContext.getCurrentContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  currentContext.getCurrentContext();	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  	4	None	replace
431	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getKey());  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  addJsString(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  	73	None	replace
432	[BUG]  [BUGGY]  cc.addJsString(JSString.fromString(s),  ESCAPED_JS_STRINGS);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.fromString(s),  ESCAPED_JS_STRINGS);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.fromString(s),  ESCAPED_JS_STRINGS);	  cc.addJsString(JSString.fromString(s));    	non-compiled	[CE]  	52	None	replace
433	[BUG]  [BUGGY]  cc.addJsString(JSString.fromPath(s));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.fromPath(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.fromPath(s));	  cc.addJsString(JSString.fromString(s));    	non-compiled	[CE]  	52	None	replace
434	[BUG]  [BUGGY]  cc.addJsString(JSString.fromHexString(s));  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.fromHexString(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.fromHexString(s));	  cc.addJsString(JSString.fromString(s));    	non-compiled	[CE]  	52	None	replace
435	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.keySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  	64	None	replace
436	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached    ==    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	54	None	replace
437	[BUG]  [BUGGY]  Preconditions.checkState(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Preconditions.checkState(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Preconditions.checkState(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJAsString(s);    }    	non-compiled	[CE]  	88	None	replace
438	[BUG]  [BUGGY]  cc.addJsString(JSString.valueOf(s),  ESCAPED_JS_STRINGS);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.valueOf(s),  ESCAPED_JS_STRINGS);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.valueOf(s),  ESCAPED_JS_STRINGS);	  cc.addJsString(JSString.valueOf(s));    	non-compiled	[CE]  	50	None	replace
439	[BUG]  [BUGGY]  cc.addJsString(JSString.valueOf(chunk));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.valueOf(chunk));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.valueOf(chunk));	  cc.addJsString(JSString.valueOf(s));    	non-compiled	[CE]  	50	None	replace
440	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getValue());  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  addJsString(entry.getValue());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getValue());    }    	non-compiled	[CE]  	94	None	replace
441	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entries.getValue();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entries.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entries.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getValue();    }    	non-compiled	[CE]  	93	None	replace
442	[BUG]  [BUGGY]  cc.addJsString(JS_STRINGS.get(s)+  1);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRINGS.get(s)+  1);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRINGS.get(s)+  1);	  cc.addJsString(JS_STRINGS.get(s));    	non-compiled	[CE]  	99	None	replace
443	[BUG]  [BUGGY]  cc.addJsString(jsString,  s);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(jsString,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(jsString,  s);	  cc.addJsString(jsString);    	non-compiled	[CE]  	38	None	replace
444	[BUG]  [BUGGY]  cc.add(JsString.valueOf(s));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.add(JsString.valueOf(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.add(JsString.valueOf(s));	  cc.addJsString(jsString);    	non-compiled	[CE]  	38	None	replace
445	[BUG]  [BUGGY]  cc.addJsString(JS_STRING);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRING);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRING);	  cc.addJsString(jsString);    	non-compiled	[CE]  	38	None	replace
446	[BUG]  [BUGGY]  add(JS_STRINGS.get(s));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(JS_STRINGS.get(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JS_STRINGS.get(s));	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
447	[BUG]  [BUGGY]  add(JS_STRINGS.toArray(new  String[]  {  s  }  ));  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(JS_STRINGS.toArray(new  String[]  {  s  }  ));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JS_STRINGS.toArray(new  String[]  {  s  }  ));	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
448	[BUG]  [BUGGY]  add(JS_STRINGS.values());  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(JS_STRINGS.values());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JS_STRINGS.values());	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
449	[BUG]  [BUGGY]  cached  =  jsString.getValue();  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString.getValue();	  cached    =    entry.getValue();    	non-compiled	[CE]  	92	None	replace
450	[BUG]  [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.entrySet());  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(ESCAPED_JS_STRINGS.entrySet());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(ESCAPED_JS_STRINGS.entrySet());	  cached    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  	11	None	replace
451	[BUG]  [BUGGY]  cached  =  ESCAPED_JS_STRINGS.values();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  ESCAPED_JS_STRINGS.values();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  ESCAPED_JS_STRINGS.values();	  cached    =    ESCAPED_JS_STRINGS.entrySet();    	non-compiled	[CE]  	11	None	replace
452	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentTimeMillis();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.getCurrentTimeMillis();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentTimeMillis();	  Context    cc    =    Context.currentTimeMillis();    	non-compiled	[CE]  	85	None	replace
453	[BUG]  [BUGGY]  Context  cc  =  getContext().currentTimeMillis();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getContext().currentTimeMillis();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getContext().currentTimeMillis();	  Context    cc    =    Context.currentTimeMillis();    	non-compiled	[CE]  	85	None	replace
454	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtil.jsString(cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  	49	None	replace
455	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  	13	None	replace
456	[BUG]  [BUGGY]  cached  =  entry.getKey()  -  entry.getValue();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getKey()  -  entry.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getKey()  -  entry.getValue();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
457	[BUG]  [BUGGY]  cached  =  entry.getKey()  +  s;  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getKey()  +  s;  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getKey()  +  s;	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
458	[BUG]  [BUGGY]  cached  =  entries.getKey()  +  entry.getValue();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entries.getKey()  +  entry.getValue();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entries.getKey()  +  entry.getValue();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
459	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(null,  s);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(null,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(null,  s);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  	6	None	replace
460	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(rhsContext);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(rhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(rhsContext);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  	6	None	replace
461	[BUG]  [BUGGY]  Set  <  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Set  <  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Set  <  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	65	None	replace
462	[BUG]  [BUGGY]  cc.addJsString(JS_STRINGS,  s);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRINGS,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRINGS,  s);	  cc.addJsString(JS_STRINGS);    	non-compiled	[CE]  	62	None	replace
463	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  JS_STRINGS.toCharArray())  {  cached  =  jsString(s);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  JS_STRINGS.toCharArray())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  JS_STRINGS.toCharArray())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.toCharArray())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  	41	None	replace
464	[BUG]  [BUGGY]  jsString(JsString.valueOf(cached));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(JsString.valueOf(cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(JsString.valueOf(cached));	  jsString(s);    	non-compiled	[CE]  	106	None	replace
465	[BUG]  [BUGGY]  jsString(JsString.valueOf(s));  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(JsString.valueOf(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(JsString.valueOf(s));	  jsString(s);    	non-compiled	[CE]  	106	None	replace
466	[BUG]  [BUGGY]  jsString(cached);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(cached);	  jsString(s);    	non-compiled	[CE]  	106	None	replace
467	[BUG]  [BUGGY]  jsString(JAVA_STRING);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(JAVA_STRING);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(JAVA_STRING);	  jsString(s);    	non-compiled	[CE]  	106	None	replace
468	[BUG]  [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  	69	None	replace
469	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  	69	None	replace
470	[BUG]  [BUGGY]  addJsString(context);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addJsString(context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addJsString(context);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc);    	non-compiled	[CE]  	61	None	replace
471	[BUG]  [BUGGY]  add(entry.getKey(),  s);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(entry.getKey(),  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(entry.getKey(),  s);	  add(entry.getKey());    	non-compiled	[CE]  	67	None	replace
472	[BUG]  [BUGGY]  addJsString(entry.getValue());  [CE]  orphaned  default  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addJsString(entry.getValue());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addJsString(entry.getValue());	  add(entry.getKey());    	non-compiled	[CE]  orphaned  default	67	None	replace
473	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length());  }  [CE]  orphaned  default  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  cached.keySet())  {  cached  =  s.substring(0,  s.length());  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    s.substring(0,    s.length()    -    1);    }    	non-compiled	[CE]  orphaned  default	42	None	replace
474	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  orphaned  default	12	None	replace
475	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [CE]  orphaned  default  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  orphaned  default	12	None	replace
476	[BUG]  [BUGGY]  cached.addJsString(jsString(s,  cached));  [CE]  orphaned  default  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached.addJsString(jsString(s,  cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached.addJsString(jsString(s,  cached));	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  orphaned  default	53	None	replace
477	[BUG]  [BUGGY]  cached.addJsString(jsString(s));  [CE]  orphaned  default  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached.addJsString(jsString(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached.addJsString(jsString(s));	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  orphaned  default	53	None	replace
478	[BUG]  [BUGGY]  cached.add(jsString(s,  cached));  [CE]  orphaned  default  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached.add(jsString(s,  cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached.add(jsString(s,  cached));	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  orphaned  default	53	None	replace
479	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  false);  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  false);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(context,  false);	  Context    cc    =    Context.getCurrentContext(context);    	non-compiled	[CE]  orphaned  default	1	None	replace
480	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  JSON_STRING_ELSE);  [CE]  orphaned  default  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  JSON_STRING_ELSE);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(context,  JSON_STRING_ELSE);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  orphaned  default	108	None	replace
481	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  context);  [CE]  orphaned  default  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(context,  context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(context,  context);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  orphaned  default	108	None	replace
482	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getKey()  *  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey()    *    entry.getValue();    }    	non-compiled	[CE]  orphaned  default	90	None	replace
483	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getKey();  }  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getKey();    }    	non-compiled	[CE]  orphaned  default	89	None	replace
484	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  entry.getValue()  +  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue()    +    entry.getKey();    }    	non-compiled	[CE]  orphaned  default	89	None	replace
485	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [CE]  orphaned  default  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  JS_STRINGS.keySet())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  orphaned  default	39	None	replace
486	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.get(s))  {  cached  =  jsString(s);  }  [CE]  orphaned  default  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.get(s))  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.get(s))  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  orphaned  default	39	None	replace
487	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  this);  [CE]  orphaned  default  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  this);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(s,  this);	  Context    cc    =    Context.createChildObjectContext(s);    	non-compiled	[CE]  orphaned  default	109	None	replace
488	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [CE]  orphaned  default  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  orphaned  default	10	None	replace
489	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [CE]  orphaned  default  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getValue());    }    	non-compiled	[CE]  orphaned  default	18	None	replace
490	[BUG]  [BUGGY]  add(JSString.valueOf(s),  ESCAPED_JS_STRINGS);  [CE]  :  expected  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(JSString.valueOf(s),  ESCAPED_JS_STRINGS);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(JSString.valueOf(s),  ESCAPED_JS_STRINGS);	  add(JSString.valueOf(s));    	non-compiled	[CE]  :  expected	60	None	replace
491	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  orphaned  default  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  orphaned  default	72	None	replace
492	[BUG]  [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  orphaned  default  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(Map.Entry  <  String,  String>  entry  :  ESCAPED_S_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  orphaned  default	72	None	replace
493	[BUG]  [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  orphaned  default  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(ESCAPED_JS_STRINGS!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  orphaned  default	24	None	replace
494	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(s,  this);  [CE]  orphaned  default  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(s,  this);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(s,  this);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  orphaned  default	6	None	replace
495	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(lhsContext);  [CE]  orphaned  default  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(lhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(lhsContext);	  Context    cc    =    Context.createContext(s);    	non-compiled	[CE]  orphaned  default	6	None	replace
496	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [CE]  orphaned  default  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  orphaned  default	10	None	replace
497	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  SHORT_OF_EXPR);  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(context,  SHORT_OF_EXPR);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(context,  SHORT_OF_EXPR);	  Context    cc    =    Context.getCurrentContext(context);    	non-compiled	[CE]  orphaned  default	1	None	replace
498	[BUG]  [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  orphaned  default  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  orphaned  default	72	None	replace
499	[BUG]  [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [CE]  orphaned  default  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toUpperCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  orphaned  default	72	None	replace
500	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [CE]  orphaned  default  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getValue());  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getValue());    }    	non-compiled	[CE]  orphaned  default	18	None	replace
501	[BUG]  [BUGGY]  if(jsString(s)  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(jsString(s)  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString(s)  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  default	55	None	replace
502	[BUG]  [BUGGY]  if(jsString(s)!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(jsString(s)!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString(s)!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  default	55	None	replace
503	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  orphaned  default  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getKey()  +  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getKey()    +    entry.getValue();    }    	non-compiled	[CE]  orphaned  default	63	None	replace
504	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.josString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  orphaned  default  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtilities.josString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtilities.josString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  orphaned  default	103	None	replace
505	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [CE]  orphaned  default  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }	  if(cached    ==    null)    {    cached    =    JsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString(s);    }    	non-compiled	[CE]  orphaned  default	87	None	replace
506	[BUG]  [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  orphaned  default  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(ESCAPED_JS_STRINGS!=  null)  {  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  orphaned  default	25	None	replace
507	[BUG]  [BUGGY]  map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	25	None	replace
508	[BUG]  [BUGGY]  Context  cc  =  Context.createCurrentContext(context);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createCurrentContext(context);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createCurrentContext(context);	  Context    cc    =    Context.currentContext();    	non-compiled	[CE]  	3	None	replace
509	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s,  cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s,  cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsStringUtil.jsString(s,  cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  	69	None	replace
510	[BUG]  [BUGGY]  cc.addJsString(JSString.fromBuffer(s));  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.fromBuffer(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.fromBuffer(s));	  cc.addJsString(JSString.fromString(s));    	non-compiled	[CE]  	52	None	replace
511	[BUG]  [BUGGY]  cc.addJsString(JSString.fromInteger(s));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.fromInteger(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.fromInteger(s));	  cc.addJsString(JSString.fromString(s));    	non-compiled	[CE]  	52	None	replace
512	[BUG]  [BUGGY]  cc.addJsString(JS_STRING_SIGNATURE,  s);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRING_SIGNATURE,  s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRING_SIGNATURE,  s);	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  	53	None	replace
513	[BUG]  [BUGGY]  cc.addJAsString(jsString(s,  cached));  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJAsString(jsString(s,  cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJAsString(jsString(s,  cached));	  cc.addJsString(jsString(s,    cached));    	non-compiled	[CE]  	53	None	replace
514	[BUG]  [BUGGY]  cached  =  entries.getKey();  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entries.getKey();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entries.getKey();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getKey();    }    	non-compiled	[CE]  	96	None	replace
515	[BUG]  [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	12	None	replace
516	[BUG]  [BUGGY]  if(jsString!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(jsString!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
517	[BUG]  [BUGGY]  if(cached  ==  null)  {  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached  ==  null)  {  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached  ==  null)  {  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(jsString(s)!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	83	None	replace
518	[BUG]  [BUGGY]  jsString(entry.getKey());  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(entry.getKey());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(entry.getKey());	  add(entry.getKey());    	non-compiled	[CE]  	67	None	replace
519	[BUG]  [BUGGY]  addString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  	75	None	replace
520	[BUG]  [BUGGY]  wired  =  JsStringUtil.jsString(s);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  wired  =  JsStringUtil.jsString(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	wired  =  JsStringUtil.jsString(s);	  if(cached!=    null)    {    cached    =    JsStringUtil.jsString(s);    }    	non-compiled	[CE]  	36	None	replace
521	[BUG]  [BUGGY]  jsString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet()));    	non-compiled	[CE]  	16	None	replace
522	[BUG]  [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  }  else  {  cached  =  jsString(s);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  }  else  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(ESCAPED_JS_STRINGS!=  null)  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet()));  }  else  {  cached  =  jsString(s);  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet()));    	non-compiled	[CE]  	16	None	replace
523	[BUG]  [BUGGY]  ESCAPED_JS_STRINGS.put(s,  null);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  ESCAPED_JS_STRINGS.put(s,  null);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	ESCAPED_JS_STRINGS.put(s,  null);	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  	78	None	replace
524	[BUG]  [BUGGY]  Context  cc  =  getContextForCodeInsertion(s);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getContextForCodeInsertion(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getContextForCodeInsertion(s);	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  	78	None	replace
525	[BUG]  [BUGGY]  Context  cc  =  getContext();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getContext();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getContext();	  if(cached!=    null)    {    cached    =    JsStringUtilities.jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    	non-compiled	[CE]  	78	None	replace
526	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  Context.START_OF_EXPR);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(s,  Context.START_OF_EXPR);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(s,  Context.START_OF_EXPR);	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    s.substring(0,    s.length()    -    1);    }    	non-compiled	[CE]  	42	None	replace
527	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  JsString.class);  [CE]  [FE]                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  JsString.class);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContextForCodeInsertion(s,  JsString.class);	  Context    cc    =    Context.getCurrentContextForCodeInsertion(s);    	non-compiled	[CE]  	84	None	replace
528	[BUG]  [BUGGY]  addjsString(entry.getKey());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addjsString(entry.getKey());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addjsString(entry.getKey());	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addjsString(entry.getKey());    }    	non-compiled	[CE]  	95	None	replace
529	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContextForCodeInsertion(s);  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.getCurrentContextForCodeInsertion(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentContextForCodeInsertion(s);	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  	4	None	replace
530	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentContext(rhsContext);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  context.getCurrentContext(rhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  context.getCurrentContext(rhsContext);	  Context    cc    =    context.getCurrentContext();    	non-compiled	[CE]  	4	None	replace
531	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  mapping.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  mapping.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  mapping.entrySet())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    map.entrySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	102	None	replace
532	[BUG]  [BUGGY]  cached  =  jsString(s.substring(0,  cached.length()  -  1));  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(s.substring(0,  cached.length()  -  1));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(s.substring(0,  cached.length()  -  1));	  cached    =    entry.getValue();    	non-compiled	[CE]  	92	None	replace
533	[BUG]  [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	For(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }	  for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  	22	None	replace
534	[BUG]  [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	For(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }	  for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toLowerCase();    }    	non-compiled	[CE]  	44	None	replace
535	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext(s,  this);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext(s,  this);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext(s,  this);	  Context    cc    =    Context.getCurrentContext(s);    	non-compiled	[CE]  	2	None	replace
536	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  new  HashMap  <  String,  String>())  {  cached  =  entry.getKey();  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  new  HashMap  <  String,  String>())  {  cached  =  entry.getKey();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  new  HashMap  <  String,  String>())  {  cached  =  entry.getKey();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    cached.entrySet())    {    cached    =    entry.getKey();    }    	non-compiled	[CE]  	20	None	replace
537	[BUG]  [BUGGY]  cached  =  this.entry.toLowerCase();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  this.entry.toLowerCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  this.entry.toLowerCase();	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  	97	None	replace
538	[BUG]  [BUGGY]  cached  =  entry.toLowerCase(lhsContext);  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.toLowerCase(lhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.toLowerCase(lhsContext);	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  	97	None	replace
539	[BUG]  [BUGGY]  cached  =  cached.toUpperCase();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  cached.toUpperCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  cached.toUpperCase();	  cached    =    entry.toLowerCase();    	non-compiled	[CE]  	97	None	replace
540	[BUG]  [BUGGY]  cached  =  entry.getKey()  +  s.toLowerCase();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.getKey()  +  s.toLowerCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.getKey()  +  s.toLowerCase();	  cached    =    entry.getKey()    +    entry.getValue();    	non-compiled	[CE]  	31	None	replace
541	[BUG]  [BUGGY]  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString(s)  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJAsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJAsString(s);    }    	non-compiled	[CE]  	88	None	replace
542	[BUG]  [BUGGY]  if(jsString  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(jsString  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(jsString(s)    ==    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	82	None	replace
543	[BUG]  [BUGGY]  Context  cc  =  Context.createContext(context,  SHORT_OF_EXPR);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createContext(context,  SHORT_OF_EXPR);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createContext(context,  SHORT_OF_EXPR);	  Context    cc    =    Context.createContext(context);    	non-compiled	[CE]  	5	None	replace
544	[BUG]  [BUGGY]  cc.addJsString(JS_STRING_ELSE,  cached);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JS_STRING_ELSE,  cached);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JS_STRING_ELSE,  cached);	  cc.addJsString(jsString(s),    cached);    	non-compiled	[CE]  	51	None	replace
545	[BUG]  [BUGGY]  Context  cc  =  Context.createChildObjectContext(rhsContext);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.createChildObjectContext(rhsContext);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.createChildObjectContext(rhsContext);	  Context    cc    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  	108	None	replace
546	[BUG]  [BUGGY]  if(jsString(s)  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(jsString(s)  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString(s)  ==  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  	8	None	replace
547	[BUG]  [BUGGY]  if(jsString(s)!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(jsString(s)!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString(s)!=  null)  {  cached  =  JsString.valueOf(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  	8	None	replace
548	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s,  cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  cached  =  JsString.valueOf(s,  cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  JsString.valueOf(s,  cached);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	  if(cached!=    null)    {    cached    =    JsString.valueOf(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    add(null);    }    	non-compiled	[CE]  	8	None	replace
549	[BUG]  [BUGGY]  cached  =  jsString(s.toUpperCase());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(s.toUpperCase());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(s.toUpperCase());	  cached    =    jsString(s);    	non-compiled	[CE]  	33	None	replace
550	[BUG]  [BUGGY]  cached  =  jsString(s.substring(1));  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  jsString(s.substring(1));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  jsString(s.substring(1));	  cached    =    jsString(s);    	non-compiled	[CE]  	33	None	replace
551	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getValue();  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  cached  =  entry.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    entry.getValue();    }    	non-compiled	[CE]  	79	None	replace
552	[BUG]  [BUGGY]  jsString(ESCAPED_JS_STRINGS.entrySet());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(ESCAPED_JS_STRINGS.entrySet());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(ESCAPED_JS_STRINGS.entrySet());	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
553	[BUG]  [BUGGY]  add(ESCAPED_JS_STRINGS.values());  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  add(ESCAPED_JS_STRINGS.values());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	add(ESCAPED_JS_STRINGS.values());	  add(ESCAPED_JS_STRINGS.entrySet());    	non-compiled	[CE]  	27	None	replace
554	[BUG]  [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  STATEMENT);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.createChildObjectContext(context,  STATEMENT);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.createChildObjectContext(context,  STATEMENT);	  Context    rhsContext    =    Context.createChildObjectContext(context);    	non-compiled	[CE]  	105	None	replace
555	[BUG]  [BUGGY]  CachedEntry  <  String,  String>  cached  =  jsString(cached.entrySet());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  CachedEntry  <  String,  String>  cached  =  jsString(cached.entrySet());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	CachedEntry  <  String,  String>  cached  =  jsString(cached.entrySet());	  CachedEntry    <    String,    String>    cached    =    cached.entrySet();    	non-compiled	[CE]  	21	None	replace
556	[BUG]  [BUGGY]  if(jsString  ==  null)  {  if(cached!=  null)  {  cached  =  jsString(s);  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(jsString  ==  null)  {  if(cached!=  null)  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(jsString  ==  null)  {  if(cached!=  null)  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    cached    =    jsString(s);    ESCAPED_JS_STRINGS.put(s,    cached);    }    else    {    addJsString    	non-compiled	[CE]  	68	None	replace
557	[BUG]  [BUGGY]  jsString(JS_STRINGS.valueOf(cached));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(JS_STRINGS.valueOf(cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(JS_STRINGS.valueOf(cached));	  add(JsString.valueOf(cached));    	non-compiled	[CE]  	59	None	replace
558	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(entries!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.toLowerCase();    }    	non-compiled	[CE]  	98	None	replace
559	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentToken();  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentToken();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentToken();	  Context    cc    =    Context.currentTimeMillis();    	non-compiled	[CE]  	85	None	replace
560	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  add(cc);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.getCurrentContext();  add(cc);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();  add(cc);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc);    	non-compiled	[CE]  	61	None	replace
561	[BUG]  [BUGGY]  Context  cc  =  Context.currentTimeMillis();  addJsString(cc);  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  Context.currentTimeMillis();  addJsString(cc);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.currentTimeMillis();  addJsString(cc);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc);    	non-compiled	[CE]  	61	None	replace
562	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext();  addJsString(cc);  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContext();  addJsString(cc);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContext();  addJsString(cc);	  Context    cc    =    Context.getCurrentContext();    addJsString(cc);    	non-compiled	[CE]  	61	None	replace
563	[BUG]  [BUGGY]  addString(entry.getKey());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  addString(entry.getKey());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	addString(entry.getKey());	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addString(entry.getKey());    }    	non-compiled	[CE]  	74	None	replace
564	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  add(entry.getKey());  }  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  add(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.values())  {  add(entry.getKey());  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.keySet())    {    add(entry.getKey());    }    	non-compiled	[CE]  	66	None	replace
565	[BUG]  [BUGGY]  append(JSString.valueOf(s));  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  append(JSString.valueOf(s));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	append(JSString.valueOf(s));	  add(JSString.valueOf(s));    	non-compiled	[CE]  	60	None	replace
566	[BUG]  [BUGGY]  cc.addJsString(JSString.valueOf(s,  cached));  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cc.addJsString(JSString.valueOf(s,  cached));  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(JSString.valueOf(s,  cached));	  cc.addJsString(JSString.valueOf(s));    	non-compiled	[CE]  	50	None	replace
567	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.getCurrentContextForCodeInsertion(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  	107	None	replace
568	[BUG]  [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodec(s);  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  rhsContext  =  Context.getCurrentContextForCodec(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  rhsContext  =  Context.getCurrentContextForCodec(s);	  Context    rhsContext    =    Context.getCurrentContext();    	non-compiled	[CE]  	107	None	replace
569	[BUG]  [BUGGY]  jsString(ESCAPED_JS_STRINGS.entrySet())  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(ESCAPED_JS_STRINGS.entrySet())  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(ESCAPED_JS_STRINGS.entrySet())  {  add(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	  add(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    addJsString(entry.getKey());    }    	non-compiled	[CE]  	17	None	replace
570	[BUG]  [BUGGY]  jsString(s.trim());  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(s.trim());  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(s.trim());	  jsString(s);    	non-compiled	[CE]  	106	None	replace
571	[BUG]  [BUGGY]  jsString(JAVA_STRING_ELSE);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  jsString(JAVA_STRING_ELSE);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	jsString(JAVA_STRING_ELSE);	  jsString(s);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
572	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForCodeInsertion(s);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContextForCodeInsertion(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContextForCodeInsertion(s);	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
573	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextInstance();  [CE]  [FE]                                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContextInstance();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContextInstance();	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  	110	None	replace
574	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().addJsString(s);  [CE]  [FE]                                        ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  Context  cc  =  getCurrentContext().addJsString(s);  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  getCurrentContext().addJsString(s);	  Context    cc    =    getCurrentContext();    	non-compiled	[CE]  	110	None	replace
575	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  cached  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  cached  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  cached  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  	40	None	replace
576	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  JsString(s);  }  [CE]  [FE]                                ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  JsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.keySet())  {  cached  =  JsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  	40	None	replace
577	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.values())  {  cached  =  jsString(s);  }  [CE]  [FE]                                  ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  cached.values())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  cached.values())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  	40	None	replace
578	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  jsStrings.keySet())  {  cached  =  jsString(s);  }  [CE]  [FE]                                    ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  jsStrings.keySet())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  jsStrings.keySet())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    cached.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  	40	None	replace
579	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  entries.entrySet())  {  cached  =  entries.getValue();  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  entries.entrySet())  {  cached  =  entries.getValue();  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  entries.entrySet())  {  cached  =  entries.getValue();  }	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entries.getValue();    }    	non-compiled	[CE]  	93	None	replace
580	[BUG]  [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.values())  {  cached  =  jsString(s);  }  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.values())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(String  s  :  ESCAPED_JS_STRINGS.values())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  	39	None	replace
581	[BUG]  [BUGGY]  for(String  s  :  ESCAPED_JS_STRINGS.values())  {  cached  =  jsString(s);  }  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  for(String  s  :  ESCAPED_JS_STRINGS.values())  {  cached  =  jsString(s);  }  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	for(String  s  :  ESCAPED_JS_STRINGS.values())  {  cached  =  jsString(s);  }	  if(cached!=    null)    {    for(String    s    :    ESCAPED_JS_STRINGS.keySet())    {    cached    =    jsString(s);    }    	non-compiled	[CE]  	39	None	replace
582	[BUG]  [BUGGY]  cached  =  entry.toUpperCase();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ComparisonFailure      [CONTEXT]      void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);      [BUGGY]  cached  =  entry.toUpperCase();  [BUGGY]        [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cached  =  entry.toUpperCase();	  if(cached!=    null)    {    for(Map.Entry    <    String,    String>    entry    :    ESCAPED_JS_STRINGS.entrySet())    {    cached    =    entry.toUpperCase();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
