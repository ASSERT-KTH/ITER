bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getValue();  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
2	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey();  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
3	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.getKey()  +  entry.getValue();  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
4	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  cached  =  entry.toLowerCase();  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
5	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  addJsString(entry.getKey());  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
6	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  ESCAPED_JS_STRINGS.entrySet())  {  add(entry.getKey());  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
7	[BUG]  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  for(Map.Entry  <  String,  String>  entry  :  cached.entrySet())  {  cached  =  entry.getValue();  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]    [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
9	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
10	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
11	[BUG]  [BUGGY]  Context  cc  =  Context.getCurrentContext();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  Context  cc  =  Context.getCurrentContext();  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	Context  cc  =  Context.getCurrentContext();	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
12	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  addJsString(s);  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
13	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  jsString(s);  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
14	[BUG]  [BUGGY]  cc.addJsString(jsString(s));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  cc.addJsString(jsString(s));  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	cc.addJsString(jsString(s));	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
15	[BUG]  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  void  addJsString(String  s)  {  String  cached  =  ESCAPED_JS_STRINGS.get(s);  if  (cached  ==  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  add(cached);  [BUGGY]  if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }  [BUGGY]    [CLASS]  CodeGenerator  Context  [METHOD]  addJsString  [RETURN_TYPE]  void  String  s  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  CodeConsumer  cc  consumer  String  cached  s  Map  ESCAPED_JS_STRINGS  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  	projects/Closure65/src/com/google/javascript/jscomp/CodeGenerator.java	0.23570226039551587	954	954	1	replace	if(cached!=  null)  {  cached  =  jsString(s);  ESCAPED_JS_STRINGS.put(s,  cached);  }  else  {  add(null);  }	}  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
