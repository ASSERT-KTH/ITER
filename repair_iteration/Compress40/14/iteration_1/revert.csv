projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByteOrder(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByte(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.parseInt(in):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?1:byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MIN_VALUE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MAXIMUM;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MAXIMUM_CACHE_SIZE|Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MAXIMUM_CACHE_SIZE-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=newint[Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=Integer.parseInt(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=newlong[Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=newint[Math.max(MAXIMUM_CACHE_SIZE),MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=newlong[Math.max(MAXIMUM_CACHE_SIZE),MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=newlong[byteOrder.length];System.arraycopy(byteOrder,0,this.bitsCachedSize,0,byteOrder.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=MAXIMUM_CACHE_SIZE==ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toString(MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toString(MAXIMUM_CACHE_SIZE):ByteOrder.DEFAULT_BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MINIMUM_CACHE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.toString(ByteOrder.MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.toString(byteOrder.MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.toString(MASKS_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.toString(byteOrder):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.toString(byteOrder.MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MINIMUM_CACHE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.toString(ByteOrder.MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByte(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder.parseByte(ByteOrder.DEFAULT);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder.parseByte(ByteOrder.DEFAULT_BYTE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByte(byteOrder,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder.parseByte(ByteOrder.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseByte(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder.length+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder.length-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder.length,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder.length-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder.size());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MINIMUM_CACHE_SIZE?1:byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder!=ByteOrder.MAXIMUM_CACHE_SIZE?1:byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.BYTE_SIZE?1:byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.SIZE?1:byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder.parseByteOrder(ByteOrder.DEFAULT);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByteOrder(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByteOrder(byteOrder,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder.parseByteOrder(ByteOrder.DEFAULT_BYTE_ORDER);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseByteOrder(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder.parseByteOrder(ByteOrder.DEFAULT_BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=in==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.parseInt(byteOrder):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=in==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.parseInt(in):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MINIMUM_CACHE_SIZE?Integer.parseInt(in):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(in,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(MAXIMUM_CACHE_SIZE,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(INVALID_BYTE_SIZE,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(out,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(byteOrder,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder.getBytes());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=MAXIMUM_CACHE_SIZE==ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder!=ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=in==ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(byteOrder,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(in,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(byteOrder,maximum_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(Integer.toHexString(in),byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(Integer.toHexString(in,byteOrder));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(byteOrder,MISSING_BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=in==ByteOrder.MINIMUM_CACHE_SIZE?Integer.parseInt(in):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.DEFAULT?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MAXIMUM_VALUE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MAXIMUM_BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MAXIMUM_BACKSLASH;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.toString(byteOrder):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.DEFAULT?Integer.toString(MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(byteOrder.toByteArray());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=newint[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=MAXIMUM_CACHE_SIZE+byteOrder.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=byteOrder.size();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByteOrder(in,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByteOrder(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByteOrder(byteOrder,Integer.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=in==ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(MAXIMUM_CACHE_SIZE,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(Integer.toHexString(byteOrder),MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(Integer.toHexString(byteOrder,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(INCRDETERMINISTIC_BYTE_SIZE,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByte(in,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByte(byteOrder,Integer.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=ByteOrder.parseByte(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder.parseByte(ByteOrder.DEFAULT_BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(ByteOrder.DEFAULT_BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(ByteOrder.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=newByteOrder(in,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.MAXIMUM_CACHE_SIZE+byteOrder.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder!=ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.DEFAULT_BYTE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):in;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(MASKS_SIZE,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.toHexString(MASKS,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.MAXIMUM_CACHE_SIZE?Integer.parseInt(in):in;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=in!=ByteOrder.MAXIMUM_CACHE_SIZE?Integer.parseInt(in):byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.BYTE_MAXIMUM_CACHE_SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.SIZE?Integer.toString(MAXIMUM_CACHE_SIZE):null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=newlong[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=MAXIMUM_CACHE_SIZE+byteOrder.length();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.bitsCachedSize=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=byteOrder==ByteOrder.BYTE_MAXIMUM_CACHE_SIZE?1:byteOrder;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(MASKS_SIZE,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java54this.byteOrder=Integer.parseInt(MAXIMUM_CACHE_SIZE);
