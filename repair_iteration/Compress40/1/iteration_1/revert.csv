projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){while(count<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongnextByte=in.read();if(nextByte>=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){while(bitsCachedSize<8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=16){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){while(bitsCachedSize<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&count<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.defaultRead();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.defaultReadBits();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){while(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=newByteInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(bytesCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=byteOrder.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=readBits(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){While(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(ByteOrder.DEFAULT_TIME_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){While(bitsCachedSize<8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in.read();bitsCachedSize=0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in.read();bitsCachedSize=8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){While(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){longbitsCachedSize=in.read();if(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalintbitsCachedSize=in.read();if(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&Integer.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();if(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();if(bitsCachedSize<MAXIMUM_CACHE_SIZE){
