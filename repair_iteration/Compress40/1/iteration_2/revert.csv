projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){while(count<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongnextByte=in.read();if(nextByte>=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){while(bitsCachedSize<8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=16){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){while(bitsCachedSize<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&count<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.defaultRead();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.defaultReadBits();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){while(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=newByteInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(bytesCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=byteOrder.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=readBits(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){While(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(ByteOrder.DEFAULT_TIME_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){While(bitsCachedSize<8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in.read();bitsCachedSize=0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in.read();bitsCachedSize=8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){While(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){longbitsCachedSize=in.read();if(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalintbitsCachedSize=in.read();if(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&Integer.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();if(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();if(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){in=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<MAXIMUM_CACHE_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<=count){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<=count){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS.length&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){while(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){While(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();if(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();if(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();if(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){in.read();bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){in.read();bitsCachedSize=0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){in.read();bitsCachedSize=0;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){bitsCachedSize=in.read();bitsCachedSize=0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){in.read();bitsCachedSize=8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){bitsCachedSize=in.read();bitsCachedSize=0;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){in.read();bitsCachedSize=8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in==null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in<bitsCachedSize&&count>=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){in=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(in.read());}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE)||(bitsCachedSize>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){while(count<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){InputStreamin=newByteInputStream(count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){longnextByte=in.read();if(nextByte>=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){longnextByte=in.read();if(nextByte<0){returnnextByte;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(count-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(count+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(bitsOut,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){in=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut.length){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<=MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){bitsCachedSize=in.read();if(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){bitsCachedSize=in.read();if(bitsCachedSize<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){finallongnextByte=in.read();if(nextByte<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){bitsCachedSize=in.read();if(bitsCachedSize<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<0&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=0||in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<=count){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MAXIMUM_CACHE_SIZE&&in.read()<=bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){finalintbitsCachedSize=in.read();if(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){finalintbitsCachedSize=in.read();if(bitsCachedSize<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){finalintbitsCachedSize=in.read();if(bitsCachedSize<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize<8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<maxIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){while(count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();if(count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<1){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<=MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<count){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){in=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()<bitsCachedSize){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<=MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&count<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&count<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&count<=bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE)||(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE)||(bitsCachedSize<=MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintnextByte=in.read();if(nextByte>=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finallongnextByte=in.read();if(nextByte>=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){While((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){whil((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){while((count>=MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85intnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bytenextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read()-count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85shortnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()>>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()[Delete]MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalInputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=this.in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()>>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalint[]bitsOut=newint[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsOut<MAXIMUM_CACHE_SIZE){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&bitsOut!=null){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>bitsOut.length){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finalintnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){nextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(in.read());}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){returnnextByte;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=16){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<16){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=16){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<MAXIMUM_CACHE_SIZE){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MASKS.length){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS.length){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsOut.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=readBits(count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.close();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<8)||(bitsCachedSize<8)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<1)||(bitsCachedSize<2)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<1)||(bitsCachedSize<1)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<8)&&(bitsCachedSize<8)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<8)||(bitsCachedSize>8)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsOut&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&count<=MAXIMUM_CACHE_SIZE){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<2)||(bitsCachedSize<2)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MAXIMUM_CACHE_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()<=bitsOut){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()>>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()[Delete]MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){while(bitsCachedSize<count&&in.read()[BUGGY]MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=newBufferedInputStream(in.read(),count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finalintnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS.length){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){in.available()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<in.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCached.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bits.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0||in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<0||in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<in.read()){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE||in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=getInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=getInputStream(),count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=getInputStream().readBits(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=getInputStream(),count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=getInputStream().readBits(0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<=MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=count&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=8&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MASKS_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()<=bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<=MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<=MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){while(bitsCachedSize<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){finallongnextByte=in.read();if(nextByte>=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=(int)this.in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.readUTF();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(this.in,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.readInt(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.readInt()-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85shortbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.available()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS_SIZE&&in.available()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in.read(),count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(bytesOut.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(bytesOut,in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in.read(),MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(byteOrder.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in.read()+count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0||in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=0||in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0||in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&Integer.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<count&&Integer.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&Integer.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<count&&Integer.available()>MAXIMUM_CACHE_SIZE)||(bitsCachedSize<count&&Integer.available()>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<1){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in.close();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<=MAXIMUM_CACHE_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0||in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<0&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<1)||(bitsCachedSize<=1)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<1)||(bitsCachedSize<=0)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<1)||(bitsCachedSize<=8)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS_SIZE&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(Math.min(bitsCachedSize,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=0&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=0&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=0||in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=0&&bitsCachedSize.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){While((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){while((count<bitsCachedSize)&&in.read()<maxIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){while((count>=bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE)
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(byteOrder.DEFAULT_TIME_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(ByteOrder.DEFAULT_TIME_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(bytesOut,ByteOrder.DEFAULT_TIME_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(ByteOrder.DEFAULT_TIME_SIZE+count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(ByteOrder.DEFAULT_TIME_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(ByteOrder.DEFAULT_TIME_SIZE*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(ByteOrder.DEFAULT_TIME_SIZE-count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<=MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(in.read());}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(in.read());}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<=MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<MAXIMUM_CACHE_SIZE&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<=count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()>count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut.length){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read();if(bytesCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85shortnextByte=in.read();if(bytesCachedSize<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0||count>0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){in=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){in=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut.length){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bytesCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85AssertionErrorin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){InputStreamin=newByteInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=newByteInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=newByteInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){in=newByteInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)&&(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MASKS_SIZE)||(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<0)||(count>0)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<1)||(count>1)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=newBufferedInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<1)||(bitsCachedSize>1)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<1)||(bitsCachedSize>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>0){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()>>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){in.read();bitsCachedSize=0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){in.read();bitsCachedSize=0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in.read();bitsCachedSize=0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){in.read();bitsCachedSize=0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<bitsCachedSize){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&bitsCachedSize<=MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>bitsCachedSize){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){while(bitsCachedSize<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finallongnextByte=in.read();if(nextByte>=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finallongnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finallongnextByte=in.read();if(nextByte<0){returnbitsCachedSize;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){in=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=8&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=8&&bitsCachedSize.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.available()>>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.available()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.available()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.available()[Delete]MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize<in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE)||(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();if(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();if(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85int[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<=MAXIMUM_CACHE_SIZE)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.byteOrder.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=byteOrder.readUTF();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=readBits(byteOrder.readInt());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=byteOrder.readFully(MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=readBits(count,byteOrder.readInt());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=byteOrder.readFully(MASKS,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.readBits(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=(int)this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=readBits(count,this.in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.readBits();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MASKS_SIZE)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<=bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)&&in.read()<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<1)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<2)&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){while(count<bitsCachedSize&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){while(count<bitsCachedSize&&in==null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){while(count<bitsCachedSize&&in>=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){in.available()>MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE|&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){in=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in=newBufferedInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finallongnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut){finallongnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85bitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MAXIMUM_CACHE_SIZE&&bitsOut.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE||in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.defaultRead(bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=8&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){return
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut.length){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS.length){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){in.read(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){nextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count){nextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut){nextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){nextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=readBits(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=readBits(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){finalintbitsCachedSize=readBits(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finalintbitsCachedSize=readBits(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=readBits(count,in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&(bitsOut<=MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsOut<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finalInputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){in=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.readBits(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.readBits(count,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.defaultReadBits(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.readBits(bytesCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.readBits(bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.readBits(count,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<2){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<8){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.parseLong(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){return
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.parseLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=bitsCachedSize){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MASKS.length){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE||in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0||in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIM
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize==1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>=1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0&&in.available()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=16&&in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read(bits);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read(bytes);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=in.available()&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>=MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in.read(nextByte);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(ByteOrder.DEFAULT_TIME_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<=MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(byteOrder<bitsCachedSize){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut.length){nextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count){nextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE||in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(bytes.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in,readBits(count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()>=MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finalintcount=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&(bitsCachedSize>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE||in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE||in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<=MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){in=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=Integer.parseInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=0&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=0&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finallongnextByte=in.read(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){while(in.available()<count&&bitsCachedSize>maxIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(byteOrder<bitsCachedSize){finallongnextByte=in.read();if(nextByte>=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(byteOrder<bitsCachedSize){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<bitsCachedSize&&count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<=bitsCachedSize&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<bitsCachedSize&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.skipChild(bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){finalintnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){InputStreamin=newByteInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){InputStreamin=newByteInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){InputStreamin=newByteInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(bits);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.defaultReadBits(count,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.defaultReadBits(bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.readBits(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){finalInputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){finalintcount=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){finalint[]bitsOut=newint[size()];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85While(bitsCachedSize<1){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(bits);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIM
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.read(bits);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.read(this.bits);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.read(bytes);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=readBits(this.in,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=readBits(this.in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=Integer.parseInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=Integer.parseInt(ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=getBitsCachedSize();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){in=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize>0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize>=0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize==0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize==0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=Integer.parseInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=Integer.parseInt(ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.parseLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&count<=8){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<2)||(count>1)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<1)||(count>2)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(bitsCachedSize,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0||in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=bitsOut.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()<MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=in.read();if(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<bitsCachedSize){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0||in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=readInt(byteOrder.readInt());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in.read();bitsCachedSize=1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finalintnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){lastByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in.read(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.parseLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longbitsCachedSize=in.read();if(bitsCachedSize<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsOut){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsOut.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=readBits(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){finalintbitsCachedSize=readBits(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalintbitsCachedSize=readBits(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalintbitsCachedSize=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){longwhile((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){intbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsCachedSize&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=2){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){longbitsCachedSize&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){longbitsCachedSize=in.read();while(count<bitsCachedSize&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){longbitsCachedSize=in.read();if(bitsCachedSize==0){returnbitsCachedSize;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<0&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=0&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=isEnabled(Feature.QUOTE_FIELD_NAMES)?getInputStream():BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintbitsCachedSize=in.read();if(bitsCachedSize!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()<=MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=in.read(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsByteSize.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finallong[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=0&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){finalintnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(byteOrder<bitsCachedSize){finallongnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){finalintnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<bitsCachedSize){finallongnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut.length&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8&&in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){while((count<bitsCachedSize)&&Integer.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=1){finallongbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE||in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)){while((count<MAXIMUM_CACHE_SIZE)||(count>MAXIMUM_CACHE_SIZE)),{
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85While(bitsCachedSize<count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut.length&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){nextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finallongbitsCachedSize=in.read();if(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85longnextByte=in.read();if(nextByte<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()){bitsCachedSize=in.read();if(bitsCachedSize<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();if(bitsCachedSize<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){While(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();while(count<bitsCachedSize&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){longnextByte=in.read();while(count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){While(count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();while(count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut.available()&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()>MAXIMUM_CACHE_SIZE){in=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in.read();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in.read(),bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newBufferedInputStream(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<bitsCachedSize){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<bitsCachedSize){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count){finallongnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=newByteInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){While(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<maxIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){While(count<bitsCachedSize&&in.read()!=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){InputStreamin=newBufferedInputStream(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<bitsCachedSize){finallongnextByte=in.read();if(nextByte>=ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finalintnextByte=in.read();if(nextByte<ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finallongnextByte=in.read();if(nextByte<ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalint[]bitsOut=newint[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE){finallong[]bitsOut=newlong[bitsCachedSize];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in<bitsCachedSize){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut.read()&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){longbitsOut=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){finalintbitsOut=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){finallongbitsOut=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<1){longnextByte=in.read();if(nextByte<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()>MAXIMUM_CACHE_SIZE){bitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()>0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE||in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8||in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=8||in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>bitsOut.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&(bitsCachedSize<=MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&(count<=MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){finalintbitsCachedSize=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<0||in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<0&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=0&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){While(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){while(in.available()>=count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){while(in.available()<count&&bitscachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((bitsCachedSize<1)||(bitsCachedSize<8)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){While(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){while(count<bitsCachedSize&&in.read()<maxIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){While(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE|&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<bitsCachedSize){InputStreamin=newBufferedInputStream(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in.read();bitsCachedSize=0;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in.read();bitsCachedSize=1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut.length&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte!=ByteOrder.LITTLE_ENDIAN){returnLong.
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<count){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){intbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){in.read();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalintbitsCachedSize=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){While(count<bitsCachedSize||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){While(count<bitsCachedSize&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){While(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();while(count<bitsCachedSize&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<8){in.read();bitsCachedSize=8;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){in.read();bitsCachedSize=8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<0||in.read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()<MAXIMUM_CACHE_SIZE){while(bitsCachedSize<0&&in.read()<maxIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE||in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){shortbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut.length&&in.available()>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){longbitsCachedSize=in.read();if(bitsCachedSize<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<bitsCachedSize){longbitsCachedSize=in.read();while(bitsCachedSize<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85finallongbitsCachedSize=in.read();if(bitsCachedSize<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in<2){Integerin=getInput();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){bytenextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.setChildCount(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE||in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsByte.length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize).length){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<MAXIMUM_CACHE_SIZE){finalintnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&out.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<MAXIMUM_CACHE_SIZE&&in.available()>maxIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<MAXIMUM_CACHE_SIZE){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<bitsCachedSize){nextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<bitsCachedSize){nextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsOut<count){nextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in<bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&bitsCachedSize<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){while((count<bitsCachedSize)&&in.Read()<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<MAXIMUM_CACHE_SIZE){while((count<bitsCachedSize)&&in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<1){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();while(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){for(intbitsCachedSize>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();if(bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){for(intbitsCachedSize>MAXIMUM_CACHE_SIZE){finallongnextByte=in.read();if(nextByte<=0){returnbitsCached;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){longbitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize>MAXIMUM_CACHE_SIZE){for(intbitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalInputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){bitsCachedSize=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){bitsCachedSize=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<<&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.read(ByteOrder.SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.read(ByteOrder.BYTE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.read(this.bitsOut,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=this.in.read(ByteOrder.BASE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut.length&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<count&&in.available()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){IntegerbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=readInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalintbitsCachedSize=readBits(in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=readBits(in,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<1){finalintbitsCachedSize=readBits(in.read());
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize||in.read()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){nextByte=in.read();if(nextByte<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte<0){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize){if(nextByte<=MAXIMUM_CACHE_SIZE){nextByte=in.read();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut.length){nextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){While(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();while(count<bitsCachedSize&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0){in.read();bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85InputStreamin=byteOrder.readFully(MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)||(count>MAXIMUM_CACHE_SIZE)){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while((count<bitsCachedSize)&&in.read()<1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<MAXIMUM_CACHE_SIZE||in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count||in.available()>MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.read();while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0&&in.read()>MAXIMUM_CACHE_SIZE){while(bitsCachedSize<0||in.read()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<bitsCachedSize&&count<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.available()<bitsCachedSize&&count<MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<=bitsCachedSize){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&count<=1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&count<=2){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){longbitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){While(count<bitsCachedSize&&in.available()>=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&in.read()>MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){return
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bytesCachedSize<0||in.read()<=MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count||in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()<MAXIMUM_CACHE_SIZE){finalintbitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut.length&&in.available()>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.available()>1){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalint[]bitsCachedSize=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count||in.available()>MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(in.read());bitsCachedSize=in.available();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){While(count<bitsCachedSize&&in!=null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in!=null){while(count<bitsCachedSize&&in>>null){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsOut.length){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in<bitsCachedSize){InputStreamin=this.in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=count&&in.read()<MAXIMUM_CACHE_SIZE){longnextByte=in.read();if(nextByte==ByteOrder.LITTLE_ENDIAN){returnLong.pars
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){While(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){longnextByte=in.read();while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){while(count<MAXIMUM_CACHE_SIZE||count>MESSAGE_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){while(count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE){lastByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.available()>MAXIMUM_CACHE_SIZE){longbitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=MAXIMUM_CACHE_SIZE&&in.available()>MAXIMUM_CACHE_SIZE){bitsCachedSize=in.available()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<2){finalintnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(nextByte<2){finallongnextByte=in.read();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<=bitsOut.read()&&in.read()>MAXIMUM_CACHE_SIZE){InputStreamin=getInputStream();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&bitsCachedSize>MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){While(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){while(bitsCachedSize>=count&&in.read()==MAXIMUM_CACHE_SIZE){
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<count&&in.read()==MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()==MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<bitsCachedSize&&in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(bitsCachedSize<0||in.read()<MAXIMUM_CACHE_SIZE){longbitsCachedSize=count&&in.read()<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(in.read()<count&&in.read()<MAXIMUM_CACHE_SIZE){InputStreamin=newBufferedInputStream(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java85while(count<=MAXIMUM_CACHE_SIZE&&in.read()<=count){
