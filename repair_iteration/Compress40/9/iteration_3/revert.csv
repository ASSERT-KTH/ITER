projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<8?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut=(bytesCached<<MAXIMUM_CACHE_SIZE)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(10,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count+1]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<4)?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnsbitsOut&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MILLIS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=readInt(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=readInt(bytes,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnnextByteOrder.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<MAXIMUM_CACHE_SIZE?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<0?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<16?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<8?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(bytesCached>=(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(bytesCached>>(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4||bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4&&bitsCachedSize>MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<16&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>>0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toByteArray(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.FIELD_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;in.read(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;in.read(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;in.read(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;bitsOut=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length&MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108ReturnbitsOut&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,16));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4&&bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE<<4?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=readBits(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=readBits(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize-MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize-bitsOut.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=nextByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=readInt(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=newInputStreamReader(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=readBits(this.bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=readInt(this.bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=readInt(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;intcount=this.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnthis.bitsCachedSize;InputStreamin=readInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut+=MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=readByte(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut+=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASK_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsIn&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CAMCHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_STIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<8&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count==MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<=MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count!=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count>==MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsCachedSize.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsIn.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsByteOrder.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsCached.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,maxIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,MASKS[count],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,size);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2?bitsCachedSize:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MIN_VALUE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MINIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==Integer.MIN_VALUE)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(bytesCachedSize==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==Integer.MAXIMUM_CACHE_SIZE)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(0,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(bitsCachedSize,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}else{bitsOut+=count;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}else{bitsOut=Integer.toString(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}else{in.skipChildren();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}else{in.close();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(MAXIMUM_CACHE_SIZE,this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(bytesOut,ByteOrder.BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,in);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.readBits(ByteOrder.BYTE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.readBits(ByteOrder.BYTE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108Integercount=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(MASKS,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,0,count-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,0,count-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,0,count-1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,0,count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,0,count*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,0,count+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<MAXIMUM_CACHE_SIZE?bitsOut:bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsOut:bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2?bitsOut:bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3?bitsOut:bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<16?bitsOut:bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(0,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(1,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1||bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1&&count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1&&bitsCachedSize<=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1&&bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1&&bitsCachedSize>MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=MASK[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=MASS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=MASCS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bytesCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(Math.PI*(bitsCachedSize-1,count)));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,count)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(10,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(bytesCached>=(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(bytesCached>>(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(bytesCached<<1)?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE)+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(10,MAXIMUM_CACHE_SIZE)+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize)+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBitsInputStream(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBitsInputStream(in,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCachedSize>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsOut:(bitsCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<4)?bitsOut:(bitsCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2?bitsOut:(bitsCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bytesCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCachedSize>MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3||bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3&&bitsCachedSize>MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3&&bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3&&bitsCachedSize<=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bitsCached>=(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bitsCached>>(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);intcount=this.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bitsCached>=(this.bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bitsCached>=(this.bitsCachedSize))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(count-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(MAXIMUM_CACHE_SIZE-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize-MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(maximum_CACHE_SIZE-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.min(MASKS_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(bytesOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbyteOrder.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(byteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,offset,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&1?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<1)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsInt:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize>=0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>>0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(10,MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);InputStreamin=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(bytes,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bytes,count);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(bytes,count);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108nextByteOrder=readBits(bytes,count);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<16||bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<16&&bitsCachedSize<=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<16&&bitsCachedSize<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count]&MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count,MAXIMUM_CACHE_SIZE]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count]-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count]+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4||bitsCachedSize>MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2&&bitsCachedSize>MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4&&count>MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4&&bitsCachedSize<MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(count+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(MAXIMUM_CACHE_SIZE+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(itemsCachedSize+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(maximum_CACHE_SIZE+bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(maximum_CACHE_SIZE+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1],MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1],MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-3];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize>>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;intcount=readBits(bytesOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;bitsOut&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?1:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&2?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsCachedSize-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-4;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MASKS[count],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,dataArea,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(byteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(byteOrder,ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(bytesCachedSize,ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.LITTLE_ENDIAN,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;bitsOut=(bytesCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=this.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize<<1)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=this.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize<<1)?MAXIMUM_CACHE_SIZE:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize<<6)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize>=MAXIMUM_CACHE_SIZE)?0:this.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.add(Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.add(Math.min(MAXIMUM_CACHE_SIZE,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,count);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(byteOrder,count);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,count)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(count,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(count*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize*MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize*MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(maximum_CACHE_SIZE*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;bitsOut*2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;bitsOut=(bytesCached<<MAXIMUM_CACHE_SIZE)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(ByteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(bytesCachedSize==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);InputStreamin=readInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bytesCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytesCachedSize,ByteOrder.BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.BYTE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytesCachedSize,BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intcount=readBits(bytesOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intcount=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1||bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1||bitsCachedSize==MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1||bitsCachedSize!=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1||bitsCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(in,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,count)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,count)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached!=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE/MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder!=ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toByteArray(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toByteArray(bitsOut,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toByteArray(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toByteArray(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toByteArray(count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toByteArray(bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count-2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsOut,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],0,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],0,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],0,MASKS.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],0,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[0],0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?1:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length+1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length+3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS_CachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASK_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKSSIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=(bytesCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4||bitsCachedSize>MAXIMUM_CACHE_SIZE-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2||bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached<<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached==(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached<<1)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108nextByteOrder=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(bytesCachedSize,bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108nextByteOrder=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,0,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MINIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(bitsCachedSize-count))&MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS[count-MAXIMUM_CACHE_SIZE))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(MASKS[count-MAXIMUM_CACHE_SIZE))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(Math.max(0,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(Math.max(10,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnnextByte.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.toByteArray()&&bitsOut.length()>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.toByteArray()&&bitsCachedSize<=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.toByteArray()&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(MINIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(Math.max(MAXIMUM_CACHE_SIZE),MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE,bitsCachedSize.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE+count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&count.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE*bitsCachedSize.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<0?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<16?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached!=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached[Delete](bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;in.read(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;in.read(bitsOut,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;in.read(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in.read(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;in.read(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;in.read(bitsCachedSize,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;in.read(bitsOut,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder!=ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?MASKS[count-1]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnsbitsOut-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnsbitsOut&MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(bytesCachedSize==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}else{bitsOut=newlong[Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}else{bitsOut=newlong[Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}else{bitsOut=Integer.toString(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}else{bitsOut=newlong[Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE));}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.byteSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.byteValue(),MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.byteByte,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.FIELD_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.FIELD_SIZE,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.FIELD_SIZE,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.FIELD_SIZE,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize>>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<4)?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached<<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached>=(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached==(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached>>(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count+1],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count+1]&MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count+1]-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count+1],MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MASKS[MAXIMUM_CACHE_SIZE]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MASKS[MAXIMUM_CACHE_SIZE+1]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MASK_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MASKS[MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(count-MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize-1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize/MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize-1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize*MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize-count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize-2));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;longMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;shortMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108shortMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,count);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE,bitsCachedSize);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(MAXIMUM_CACHE_SIZE,count);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108BitInputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE,bitsOut);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108Integercount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached<<1)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?MASKS[count-1]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count>MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;longMAXIMUM_CACHE_SIZE=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;shortMAXIMUM_CACHE_SIZE=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE*2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(in.skipChildren()){returnthis.bitsCachedSize;in.skipChildren();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(in.skipChildren()){returnthis.bitsCachedSize;}else{in.skipChildren();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(in.skipChildren()){returnthis.bitsCachedSize;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=this.bitsCachedSize;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=Math.max(bitsCachedSize,0)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=Math.max(bitsCachedSize,MASKS[count])+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=Math.max(bitsCachedSize,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<4)?bitsCachedSize:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:(bytesCached>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsCachedSize:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:(bytesCached>MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:(bytesCached>MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),10);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MINIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MINIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MASKS_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bytesCached>=(bitsCachedSize-count))?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;intMAXIMUM_CACHE_SIZE=this.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;intMAXIMUM_CACHE_SIZE=this.bitsCachedSize-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize*MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.abs(bitsCachedSize*MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MASKS[count])+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>0)?this.bitsCachedSize:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){returnbitsOut-1;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){bitsOut-=in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){returnbitsOut-1;in.skipChildren();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L};
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L+1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L<<2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCachedSize>MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<4)?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,maxIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder!=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?MAXIMUM_CACHE_SIZE:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached<<1)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached<<1)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached&MAXIMUM_CACHE_SIZE)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached<<1)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached+MAXIMUM_CACHE_SIZE)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached<<MAXIMUM_CACHE_SIZE)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached<<6)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached<<6)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.read(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.read(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in.read(bitsOut,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.read(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.read(bits,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.read(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&&count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returncount>MAXIMUM_CACHE_SIZE&&bitsOut>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut||count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut>MAXIMUM_CACHE_SIZE&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&&count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut>MAXIMUM_CACHE_SIZE&&count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsOut:(bytesCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsCachedSize:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsOut:(bytesCached<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize==0)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize==0)?this.bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==1)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=bitsOut.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);intMAXIMUM_CACHE_SIZE=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),0,MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),10;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(count>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(bitsCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(bytesCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(bitsCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(ByteOrder.LITTLE_ENDIAN>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(size>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<1)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=newInputStreamReader(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=newInputStreamReader(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=newInputStreamReader(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=newInputStreamReader(this,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=newInputStreamReader(this,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,count-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(byteOrder,count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1]+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1],MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,MAXIMUM_CACHE_SIZE]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-2]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*3];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count/2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*4];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,MAXIMUM_CACHE_SIZE-1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count+1,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,MAXIMUM_CACHE_SIZE,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,BYTE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,MAXIMUM_CACHE_SIZE+1]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(2,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(ByteOrder.LITTLE_ENDIAN,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsCached,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize>MAXIMUM_CACHE_SIZE)?bitsOut:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=Math.min(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(bitsOut,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBitsOut.read(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBitsInt(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits.read(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()/MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()-count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()-MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()-(bytesCachedSize-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(bytesCached,bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(bytesCached,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(bytesCached,byteOrder.MINIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(bytesCached,bytesCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASK_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,MASK_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASK_SIZE,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intcount=readBits(bytesOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;bitsOut+=(bytesCachedSize<<MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;InputStreamin=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intcount=readBits(bytesOut,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(Math.min(MASKS_SIZE,bitsCachedSize)));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>=(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>>(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>=(bitsCachedSize-1))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>>(bitsCachedSize-1))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached!=(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(bytesCached,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108Integercount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>>(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(maximum_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(Math.MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length%MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length/MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsCachedSize&MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0]+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MILLIS_BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/4;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-4;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>=(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.toByteArray()&&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()||MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnMAXIMUM_CACHE_SIZE.toByteArray()&&bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&MAXIMUM_CACHE_SIZE||count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN,maxIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readByte(byteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108Integercount=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?MASKS[count-MAXIMUM_CACHE_SIZE:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?MAXIMUM_CACHE_SIZE:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108nextByteOrder=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;bitsOut-2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;intcount=readBits(bytesOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize>>0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize>>0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,count-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,count*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE||bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE||bitsCachedSize%MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE||bitsCachedSize*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytesCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.MINIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,max);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,10);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readByte(byteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108nextByte=readByte(byteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108BitInputStreamin=readByte(byteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.read(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in.read(bitsOut,0,count);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in.read(bitsOut,count);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.read(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.read(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this,bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(this,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this,count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this,bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS[count,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,count));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize<0)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length/MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsCachedSize-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-1,MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=byteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=Integer.toString(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(bytesOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbytesOut.read(ByteOrder.BYTE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbyteOrder.read(ByteOrder.BYTE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MINIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==Integer.MAXIMUM_CACHE_SIZE)?bitsOut:Integer.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==Integer.MINIMUM_CACHE_SIZE)?bitsOut:Integer.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MIN_VALUE_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==Integer.MIN_VALUE)?bitsOut:Integer.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);InputStreamin=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?MAXIMUM_CACHE_SIZE:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.ceil(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(10,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsInt:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[3];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.SECOND,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(10,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,count,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytesCachedSize,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytes,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(MAXIMUM_CACHE_SIZE-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(Math.max(0,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsIn*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MASK_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE|MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached!=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intcount=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intcount=readBits(bytesOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bytesCachedSize>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<4)?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize<MAXIMUM_CACHE_SIZE?bitsOut:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<=MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut.length-MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut.length&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&MASK[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut|=MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-count*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-(bytesCachedSize*MAXIMUM_CACHE_SIZE)*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE/MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-(bytesCachedSize*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-(bytesCachedSize*MAXIMUM_CACHE_SIZE)/MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+3];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1],MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1],MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bytes,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bytes,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bytes,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bytes,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bytes,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bytes,16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(this.bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(this.bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(this.bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(this.bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(this.bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(bytesCached>>(bitsCachedSize-1))&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(bitsCached>=(bitsCachedSize-1))&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached>=(count-MAXIMUM_CACHE_SIZE))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&maxIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returncount&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASK[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,count-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytesCachedSize,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbytesOut.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(10,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(16,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(12,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(2,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(10,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<MAXIMUM_CACHE_SIZE||count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<MAXIMUM_CACHE_SIZE,bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;longMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;shortMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108shortMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(0,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(1,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize/MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize-count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.max(MAXIMUM_CACHE_SIZE,count-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&0?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<0?bitsOut:bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE)+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,count);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*count-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MASKS_SIZE-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=(bytesCachedSize<<1)?MAXIMUM_CACHE_SIZE:Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=(bytesCachedSize<<1)?MAXIMUM_CACHE_SIZE:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;bitsOut/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;intcount=readBits(bytesOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(bytesCachedSize[count],MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MAXIMUM_CACHE_SIZE,bitsCachedSize-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],count,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASK[count],MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytesCachedSize,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.BYTE_SIZE,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,0,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(0,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(Math.max(10,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE+count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=newInputStreamReader(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(in,bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4||bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2&&bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<16&&bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4||bitsCachedSize>>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<MAXIMUM_CACHE_SIZE?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<MAXIMUM_CACHE_SIZE?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<MAXIMUM_CACHE_SIZE?bitsOut:Integer.MAXIMUM_VALUE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?count:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?MAXIMUM_CACHE_SIZE:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?MAXIMUM_CACHE_SIZE:count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?1:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?in:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-(bytesCachedSize-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(Math.min(MASKS_SIZE,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(byteOrder>=(bitsCachedSize-count))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(byteOrder>=(bitsCachedSize-1))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(bytesCached>=(bitsCachedSize+count))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(bytesCached>=(bitsCachedSize+1))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(in,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<1)?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<3)?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<2)?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCached<<4)?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bytesOut<<1)?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<6)?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returncount&MAXIMUM_CACHE_SIZE[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASK[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(byteOrder>=(bitsCachedSize-count))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(bytesCached>=(bitsCachedSize*2))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(bytesCached>>(bitsCachedSize*2))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut.write(MASKS[count*2]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsCached,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsCached,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached!=(bitsCachedSize-1))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<8||bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<8)&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<0&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.MAXIMUM_CACHE_SIZE,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder,MAXIMUM_CACHE_SIZE,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.BYTE_SIZE,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(bytesCachedSize,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.MINIMUM_CACHE_SIZE,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&Math.min(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&Math.min(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached<<1)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?MASKS[count-1]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()||bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&counts>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&MAXIMUM_CACHE_SIZE>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsIn.toByteArray()&&count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(0,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;bitsOut-3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;intcount=readBits(bytesOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;intcount=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2&&count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsCachedSize,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(byteOrder!=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,16));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(16,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,12));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,16));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,32));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(bytesCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bytes,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(bytes,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108nextByteOrder=readBits(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize>=0)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize>>0)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;longMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;shortMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;longMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108shortMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this.bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(this.bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this.bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this.bitsCachedSize,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this.bitsCachedSize,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(this.bitsCachedSize,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(this.bitsCachedSize,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+4;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(count-bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(MAXIMUM_CACHE_SIZE-bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(itemsCachedSize-bitsOut.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize-bitsOut.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.min(count,bitsCachedSize-bitsOut.length));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.abs(bitsCachedSize-bitsOut.length));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&count<<4?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE<<2?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE<<4?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE<<8?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE<<1?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE<<3?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-2+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-5;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);InputStreamin=readBits(byteOrder,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE*1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&MAXIMUM_CACHE_SIZE+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.PI*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(itemsCachedSize*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(MAXIMUM_CACHE_SIZE*bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut&MASKS[count];bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;bitsOut=(bytesCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&4?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(bitsCachedSize[count],MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.NAME,MASKS[count],MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],0,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(bitsCachedSize[count],MAXIMUM_CACHE_SIZE,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(0,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MASKS;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnsbitsOut*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()-2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()-BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in.read(bitsOut,0,MAXIMUM_CACHE_SIZE);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in.read(bitsOut,0,MAXIMUM_CACHE_SIZE);bitsOut-=MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.read(byte,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(count,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(bytesOut,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(bitsOut,ByteOrder.BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(Math.PI*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}else{bitsOut=newlong[MAXIMUM_CACHE_SIZE];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}else{bitsOut=newlong[MAXIMUM_CACHE_SIZE];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}else{bitsOut=newlong[Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;bitsOut%MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=newlong[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+4;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(Math.PI-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];bitsOut&MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=Math.min(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=bitsOut.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(this,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(this,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(BYTE_SIZE,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS,0,count-2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;bitsOut/=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;in.read(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(bitsOut<MAXIMUM_CACHE_SIZE){bitsOut=readByte(byteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.min(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);bitsOut&=Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.ceil(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(0,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&MASKS[count];InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);}else{bitsOut=readIn
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached!=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>>(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>>(MASKS.length-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>>(MASKSSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder,MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.LITTLE_ENDIAN,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-(bitsCachedSize+MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnBitReader.toByteArray(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerbitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);InputStreamin=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.FIELD_NAME)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(bitsCachedSize==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut.intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);longMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut&=Math.max(0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut&=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut&=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut&=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut&=Math.max(0,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(ByteOrder.LITTLE_ENDIAN-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(bytesCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(Math.PI-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsIn);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut&MASKS[count];intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut&MASKS[count];intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);}else{bitsOut=readBits(byteOrder,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=Integer.parseInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(BYTE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(BITS_CachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(ByteOrder.MINIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(ByteOrder.MINUTE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bits,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bytes,BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bytes,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*BYTE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_ENDIAN,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_ENDIAN,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MASKS.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASK_CAMCHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKSSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut+=MASS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count];bitsOut+=MASK[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bits,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(bits,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=Integer.parseInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=Integer.parseInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toByteArray(bitsOut+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toByteArray(bitsOut-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.log(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.pow(10,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached!=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,bitsOut.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&MASKS[count];InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);}else{bitsOut=readInt
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,3);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.min(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder!=ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<this.bitsCachedSize?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=this.bitsCachedSize?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<=this.bitsCachedSize?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<1?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnsbitsOut/MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsIn/MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin;InputStreamin=readInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);bitsOut&=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);in.read(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(Math.PI-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS.length-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(Math.PI*count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(Math.CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached!=(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108ReturnbitsOut-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),4);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),8);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE+8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE+4;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1&&bitsCachedSize==MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;InputStreamin=readInt(MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsCachedSize==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;InputStreamin=readInt(MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;InputStreamin=readInt(MAXIMUM_CACHE_SIZE);}else{bitsOut=readInt(MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;InputStreamin=readInt(MAXIMUM_CACHE_SIZE);}else{bitsOut=readInt(MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MASKSSize-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MASKS.length-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.ceil(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.floor(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.log(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.MINIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.MINIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2&&bitsCachedSize==MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,MASKS[count],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=Integer.parseInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.min(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>ByteOrder.LITTLE_ENDIAN)?MAXIMUM_CACHE_SIZE:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize!=ByteOrder.LITTLE_ENDIAN)?MAXIMUM_CACHE_SIZE:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>ByteOrder.LITTLE_ENDIAN)?MASKS[count-1]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<this.bitsCachedSize)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.SIZE,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsCachedSize&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut&=Math.max(bitsCachedSize,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=newInputStreamReader(this,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=newInputStreamReader(this,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){return-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){return-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;}else{bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){return-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;}else{bitsOut=readBits(byteOrder,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&&bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<0&&bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_ENDIAN,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.read(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached<(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=Integer.parseInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached<(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readInt(MAXIMUM_CACHE_SIZE,this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(MAXIMUM_CACHE_SIZE,this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(in,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(in,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(Math.PI*MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE-1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS_SIZE,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(byteOrder,BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(in,MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bitsCached<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bitsCached>=(this.bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bitsCached>=(this.bitsCachedSize-count))&MASK[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnnextByteArray.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbyteOrder.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut||bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut||MAXIMUM_CACHE_SIZE>bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&&count<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longcount=bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count]-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize>>(MAS
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize>>(MA
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize!=(MAS
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize!=(MA
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize}(MA
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize>>(mas
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;in.read(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize-bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(MAXIMUM_CACHE_SIZE-bitsOut.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(ByteOrder.MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(MAXIMUM_CACHE_SIZE*MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(MAXIMUM_CACHE_SIZE<<[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,count,bitsCachedSize);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsCachedSize!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut+=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE*1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut&MASKS[count];bitsOut&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut.length-MASKS[count];bitsOut&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut.length&MASKS[count];bitsOut&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut.length-MASKS[count];bitsOut-=MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut.length-MASK[count];bitsOut&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=(MASKS.length-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intcount=readBits(byteOrder,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intcount=readBits(byteOrder,MASK_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=newInputStreamReader(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;bitsOut=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MM_SIZE,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(bytesCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[BYTEOrder.LITTLE_ENDIAN];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%1?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(ByteOrder.MIN_BYTE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(in,MAXIMUM_CACHE_SIZE,bitsOut);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;bitsOut=readBits(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut*MAXIMUM_CACHE_SIZE:ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut/MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE:ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut/MAXIMUM_CACHE_SIZE:ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=Integer.MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?0:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.toByteArray()&&count<MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=Integer.parseInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached>=0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=this.bitsCachedSize)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==this.bitsCachedSize)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<this.bitsCachedSize)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKSSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(MAXIMUM_CACHE_SIZE-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MAXIMUM_CACHE_SIZE-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize>=(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize>>(bitsCachedSize-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(bitsCachedSize-1))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&MAXIMUM_CACHE_SIZE>bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&size>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut&MASKS[count];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(BITS_CachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE<<4?bitsOut:MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=this.bitsCachedSize)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE+bitsCachedSize.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE+bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;intcount=this.bitsCachedSize;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsCachedSize==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;intcount=this.bitsCachedSize;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;intcount=this.bitsCachedSize;}else{bitsOut=newint[MAXIMUM_CACHE_SIZE];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;intcount=this.bitsCachedSize;}else{bitsOut=newlong[MAXIMUM_CACHE_SIZE];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;intcount=this.bitsCachedSize;}else{bitsOut=newint[Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut>=MAXIMUM_CACHE_SIZE){returnbitsOut*MAXIMUM_CACHE_SIZE;}elseif(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count+1]-1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-1+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?MAXIMUM_CACHE_SIZE:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?MAXIMUM_CACHE_SIZE:bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?0,MAXIMUM_CACHE_SIZE:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS.length-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS[count-1]))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(MASKS-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS[count-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut&=MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=ByteOrder.LITTLE_ENDIAN)?MAXIMUM_CACHE_SIZE:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached&MAXIMUM_CACHE_SIZE)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize<<MAXIMUM_CACHE_SIZE)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached+MAXIMUM_CACHE_SIZE)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;in.read(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(MASKS-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut&=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut&=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.read(in,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.read(byte,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(bitsCachedSize[count],0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],0,MASKSSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=Integer.parseInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:(bitsCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:(bytesCached>16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?bitsCachedSize:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(mode-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(Math.PI-count))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCachedSize>>(bitsCachedSize-1))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[0,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,1]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,16));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1,MASKS_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;in.read(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;in.read(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached>>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=Integer.parseInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;intMAXIMUM_CACHE_SIZE=this.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=readBits(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1]*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1]+BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1]+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,count);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.log(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(bytesCached,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=bitsByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-1;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.FIELD_NAME)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.MINIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsOut:(bitsCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(BYTE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(BYTE_SIZE,BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(size,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(BYTE_SIZE,MASK_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut+=MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(10,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){returnthis.bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){returnthis.bitsCachedSize;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){returnthis.bitsCachedSize;in.skipChildren();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<32&&bitsCachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;in.read(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;in.read(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(bytesCached,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MASKS[MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],BYTE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4&&bitsCachedSize>=MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&&bitsCachedSize>MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;bitsOut/MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;in.read(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached<(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=Integer.parseInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bytesCached>>(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.FIELD_NAME)?bitsOut:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;bitsOut+=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut+=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut+=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),16;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(),4;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CA
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[bitsCachedSize+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:(bitsCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCachedSize>16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&3?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3?bitsOut:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&16?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<32?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(Math.PI-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=Integer.parseInt(this.bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=readBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&2?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=Math.max(bitsCachedSize,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut+=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)*1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&1?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(1<<1?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;bitsOut&=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-2L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.ceil(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;byteMAXIMUM_CACHE_SIZE=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,16)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,10);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsIn.length&MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L<<8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASK;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=this.bitsCachedSize)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsCachedSize-MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count===MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count!==MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsOut:(bytesCached>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(bytesCached>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<4)?bitsOut:(bytesCached>16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder,3);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*=MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(bitsCached>=(bitsCachedSize-count))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(bitsCached>>(bitsCachedSize-count))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut+=MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut.add(ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[bitsCachedSize-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1]+MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASK[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,maxIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<8?bitsCachedSize:MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}else{bitsOut=Integer.parseInt(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}else{bitsOut=newlong[bitsCachedSize];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MASKS_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(Math.MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bytesCachedSize>MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bytesCachedSize>MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MASKS[count],count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MASKS[count],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MASKS[count],bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,BYTEOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut&MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];InputStreamin=readInt(bits,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,0,bitsOut.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.LITTLE_ENDIAN,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,0,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readInt(bits,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(bits,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN,BYTE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=(MASKSSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bytesCachedSize-MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.abs(bitsCachedSize-MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.max(bitsCachedSize-MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.LITTLE_ENDIAN,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,MASKS,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_ENDIAN,MASKS);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.FIELD_SIZE,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder,BYTE_SIZE,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,MASKS,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)&MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCached:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;bitsOut=ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;bitsOut=ByteOrder.LITTLE_ENDIAN&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,count);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInputStream.read(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(bitsCachedSize,byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(byteOrder.LITTLE_ENDIAN,16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.LITTLE_ENDIAN,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.LITTLE_ENDIAN,BYTEOrder.MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0];bitsOut+=MASKS[0];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin&Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut<MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut>=MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASK_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[BYTE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[BYTE_ENDIAN];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<1&&MAXIMUM_CACHE_SIZE>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;bitsOut=(byteOrder!=ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;bitsOut/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut/=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/1;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(ByteOrder.LITTLE_ENDIAN,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,bitsCachedSize-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,bitsOut-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,bitsCachedSize-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbyteOrder.read(ByteOrder.BYTE_SIZE,bitsOut-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readByte(buffs,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(bitsCachedSize-1))?MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readInt(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached[Delete](bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<=1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<=2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<=32;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<=16;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<=3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&(value>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returncount-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=bitsOut){returncount-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(bitsOut<MAXIMUM_CACHE_SIZE){count=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut+=count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-MAXIMUM_CACHE_SIZE,bitsCachedSize;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsIn&MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length&MASKS_SIZE*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length&MASKS_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsOut>>(bitsCached
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsOut!=(bitsCached
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsOut>=(bitsCached
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCached>>(bitsC
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCached>=(bitsC
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsOut>>(bytesCached
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCachedSize>1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCachedSize>1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=Integer.parseInt(this.bits);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;intcount=this.bitsCachedSize;}else{bitsOut=newlong[ByteOrder.LITTLE_ENDIAN];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];bitsOut&MASKS[count];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];}else{bitsOut&MASKS[count];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(bitsOut<MAXIMUM_CACHE_SIZE){bitsOut&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut&MASKS[count];}else{bitsOut&=MASKS[count];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut,bitsCachedSize+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut,count+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;bitsOut+=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+2;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MASKS[MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],MASKS[count],bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count],BYTE_ENDIAN,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.toByteArray()-MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnthis.bitsCachedSize;InputStreamin=readInt(MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(in!=null){returnthis.bitsCachedSize;InputStreamin=readInt(MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4&&bitsCachedSize<=MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)-1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(bitsOut<MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(bitsOut<MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached<(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>=(bitsCachedSize-1))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bytesCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(byteOrder>>(bitsCachedSize-count))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(byteOrder>>(bitsCachedSize+1))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(byteOrder>>(bitsCachedSize-1))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut.write(MASKS[count+1]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count+1];bitsOut=(byteOrder>>(bitsCachedSize+count))&MASKS[count+1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[0],MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE+2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE+1);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(2,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(ByteOrder.LITTLE_ENDIAN,bitsCachedSize));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108ReturnbitsOut&MASKS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==this.bitsCachedSize)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?bitsOut:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<2?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut!=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[0,MAXIMUM_CACHE_SIZE-1]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsIn.length-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize-MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(Math.max(16,bitsCachedSize-MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.toByteArray()&&count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<0)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&MAXIMUM_CACHE_SIZE>bitsOut.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&cachedSize>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;InputStreamin=readBits(byteOrder,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut=(byteOrder!=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.pow(10,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&&size>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnsbitsOut&&count>MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut*MAXIMUM_CACHE_SIZE;}elseif(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108byte[count]=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin&Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCached,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;in.read(bitsOut,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*MAXIMUM_CACHE_SIZE;in.read(bitsOut,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<8&&bitsCachedSize>=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;byteMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108byteMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=(MASKS[count-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=bitsOut*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=bitsOut*ByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=bitsCachedSize*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(ByteOrder.BYTE_SIZE,0,MASKS.length);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byte,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108byte[count*MAXIMUM_CACHE_SIZE]=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.min(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(this,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin;bitsOut=readBits(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in.read(MASKS,count);bitsOut=(byteOrder!=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=(byteOrder!=ByteOrder.LITTLE_ENDIAN)?bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108nextByteOrder=(byteOrder>=ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(count,MAXIMUM_CACHE_SIZE);intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut&Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut&=Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut&Math.min(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);bitsOut&Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut+=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);}else{bitsOut&=MASKS[count];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);bitsOut&=MAXIMUM_CACHE_SIZE;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize!=0)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bytesCached<<8)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CAPCHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this.bitsCachedSize,bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsOut>=(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCached>16);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;}else{bitsOut
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;}else{bitsOut
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-8;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(count,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.pow(10,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in.read(bitsOut,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.read(ByteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbyteOrder.read(ByteOrder.BYTE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,16));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);intMAXIMUM_CACHE_SIZE=bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=bitsIn.length;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(ByteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInteger.toString(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitOut.toByteArray();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(byteOrder.FIELD_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(ByteOrder.FIELD_SIZE,BYTEOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intMAXIMUM_CACHE_SIZE=nextByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE-1;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=readBits(byteOrder,0,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);bitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Math.min(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut+=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;bitsOut&Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached>>0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached>=(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=(bitsCached!=0)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:bitsOut;bitsOut=Integer.parseInt(this.bits);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bitsCached>=(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bitsCached>=(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=(bitsCached>>(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;bitsOut=Integer.parseInt(this.bits);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&maxIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&OSXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(Math.abs(count-bitsCachedSize))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=(byteOrder!=ByteOrder.LITTLE_ENDIAN)&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;bitsOut+=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;bitsOut+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut+1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intMAXIMUM_CACHE_SIZE=nextByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+2;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);}else{bitsOut.write(MASKS[count]);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<MAXIMUM_CACHE_SIZE?bitsOut:(bytesCachedSize>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(10.0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(1,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1L;bitsOut-1L;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(16,bitsCachedSize+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,count+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS_SIZE,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-(bitsCachedSize*MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-(bitsCachedSize*MAXIMUM_CACHE_SIZE)*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-16*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut&MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut<MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut<MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);}else{bitsOut=
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut<MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut=ByteOrder.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);}else{bitsOut
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS.length,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(BITS.length,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length-(bitsCachedSize-count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-Math.min(count,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;bitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize>>(bit
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize>>(mes
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize!=(bit
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCachedSize>=(bit
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count-1];bitsOut+=MASKS[count-1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108BitInputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsOut>>(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=null){returnbitsOut-1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut-1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut-1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();}else{bitsOut=in.readInt();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=null){returnbitsOut-1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();}else{bitsOut=in.readInt();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byte,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(MASKS,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.toString(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<<4)?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin&Math.max(bitsOut,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;InputStreamin=readBits(byteOrder,0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.pow(10,MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:(bitsOut>MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;intMAXIMUM_CACHE_SIZE=nextByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE+1;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count]-1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsInt*MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MILLIS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE*BYTE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnreadBits(in,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intMAXIMUM_CACHE_SIZE=Math.min(MASKS_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut-=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut+=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-2;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached<MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){returnthis.bitsCachedSize;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){bitsOut.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){returnbitsOut;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(in,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(MASKS_OUT,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(count,MAXIMUM_CACHE_SIZE);InputStreamin=readBits(bytesCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;bitsOut=(bytesCached>>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsCachedSize:MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.pow(10,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnthis.bitsCachedSize;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnthis.bitsCachedSize;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);}else{bitsOut=readBits(byteOrder,MAXIMUM_CACHE_SIZE
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.read(byteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(byteOrder.BYTE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}else{bitsOut.close();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=MAXIMUM_CACHE_SIZE;}else{bitsOut=in.readInt();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnBits.toByteArray(bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=nextByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=byteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>>(MASKS[count-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(in.skipChildren()){returnbitsOut-1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbyteOrder.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbyteOrder.read(ByteOrder.BYTE_SIZE,bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbytesOut.read(ByteOrder.BYTE_SIZE,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE*2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=(MASKS_SIZE-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108longbitsOut=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE>4?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE<<4?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MAXIMUM_CACHE_SIZE<<4?bitsOut:newlong(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsOut>>(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsOut>=(bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS-count))&this.bitsCachedSize[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MASKS.length-count))&this.bitsCachedSize[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[bitsCachedSize+1]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCached>>(MAXIM
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCached!=(MAXIM
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulSfântulOut=(bitsCached>=(MAXIM
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returncount-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108Intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<MAXIMUM_CACHE_SIZE?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);bitsOut=(bytesCached>>(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut&=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);bitsOut&=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<1||bitsCachedSize>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut<1)?this.bitsCachedSize:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%Math.pow(10,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bytesCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=readBits(byteOrder);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bytesCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.read(ByteOrder.BYTE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(byteOrder>>(bitsCachedSize-count))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(byteOrder>>(bitsCachedSize*2))&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut&MASKS[count*2]:null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)&MASKS[count*2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[count*2];bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:null;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.length/(bitsCachedSize-MAXIMUM_CACHE_SIZE));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MILLIS_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(0,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE)/1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached>=ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*4;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*3;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCached<(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108while(bitsOut<MAXIMUM_CACHE_SIZE){bitsOut+=MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==bitsOut){returnbitsOut&MASKS[count];bitsOut+=MASKS[count];}else{bitsOut.write(Integer.toString(MAXIMUM_CACHE_SIZE));}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==bitsOut){returnbitsOut&MASKS[count];bitsOut+=MASKS[count];}else{bitsOut=Integer.parseInt(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==bitsOut){returnbitsOut&MASKS[count];bitsOut+=MASKS[count];}else{bitsOut=newint[MAXIMUM_CACHE_SIZE];}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==bitsOut){returnbitsOut&MASKS[count];bitsOut+=MASKS[count];}else{bitsOut=Integer.toString(bitsCachedSize);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut+=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-3;InputStreamin=readInt(bitsOut,MAXIMUM_CACHE_SIZE);bitsOut-=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(0,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;bitsOut&Math.max(bitsCachedSize,count)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;bitsOut+=Math.max(bitsCachedSize,count)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;bitsOut&Math.max(MAXIMUM_CACHE_SIZE,count)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>>(this.bitsCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(MAXIMUM_CACHE_SIZE-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=MAXIMUM_CACHE_SIZE)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerbitsOut=readBits(bytesCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1],MAXIMUM_CACHE_SIZE,bitsCachedSize-1]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1]+1,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASKS[count-1],bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;InputStreamin=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);bitsOut+=in.readInt();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*2;intcount=readBits(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-1,count;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut>=MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut-1;bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE);}else{bitsOut
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?bitsOut:MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut?bitsIn:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut&=Math.max(bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);bitsOut&Math.max(bitsCachedSize,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,count);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,count);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASK_SIZE,MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut.write(MASK_SIZE,MASKS[count]);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut*MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut*MAXIMUM_CACHE_SIZE;in.skipChildren();
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,0);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);bitsOut&=Math.max(bitsCachedSize,1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,1);intMAXIMUM_CACHE_SIZE=Math.max(Math.max(bitsCachedSize,1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_S
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<maxIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray()&&count<2;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE)+1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);}else{bitsOut=readByte
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);}else{bitsOut=readByte(
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);}else{bitsOut=readByte(byteOrder
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);}else{bitsOut
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);}else{bitsOut=
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<2&&bitsCachedSize<=MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];bitsOut+=MASKS[MAXIMUM_CACHE_SIZE];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[MAXIMUM_CACHE_SIZE];intMAXIMUM_CACHE_SIZE=byteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut&Math.max(bitsCachedSize,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);bitsOut+=Math.max(bitsCachedSize,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);intMAXIMUM_CACHE_SIZE=Math.max(0,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);intMAXIMUM_CACHE_SIZE=Math.max(Math.max(bitsCachedSize,2));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(bitsCachedSize,2);intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,2);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut%MAXIMUM_CACHE_SIZE:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut%MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut&MASKS[count]:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(count,MAXIMUM_CACHE_SIZE)+1;intMAXIMUM_CACHE_SIZE=Math.max(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.max(count,MAXIMUM_CACHE_SIZE)+1;intcount=readBits(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108readBits(this,MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108in=readBits(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(this,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.min(MAXIMUM_CACHE_SIZE,bitsOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:0;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=Math.max(bitsOut,bitsCachedSize);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=nextByteOrder.LITTLE_ENDIAN;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut/MAXIMUM_CACHE_SIZE;intMAXIMUM_CACHE_SIZE=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:1;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=(bitsCachedSize>>(MAXIMUM_CACHE_SIZE-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MIN_VALUE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108nextByte-=(byteOrder==ByteOrder.LITTLE_ENDIAN)?bitsOut:Integer.MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut&MASKS[1];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bytesCached>>(bitsCachedSize-count))&MASKS[2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&MASKS[1];bitsOut=(bytesCached>=(bitsCachedSize-count))&MASKS[2];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCached>MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut<<4?bitsOut:(bitsCachedSize>MAXIMUM_CACHE_SIZE+1));
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE-1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MISSING_MASKS_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut=readBits(MAXIMUM_CACHE_SIZE,MISSING_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnthis.bitsCachedSize;InputStreamin=readInt(bytes,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnthis.bitsCachedSize;InputStreamin=readInt(bytes,MAXIMUM_CACHE_SIZE);bitsOut=in.readInt();}else{bitsOut=in.readInt();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnthis.bitsCachedSize;InputStreamin=readInt(MAXIMUM_CACHE_SIZE,bitsOut);bitsOut=in.readInt();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnin.toByteArray(MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut.toByteArray(Math.max(MAXIMUM_CACHE_SIZE),MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.read(bitsOut,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut-=in.read(buffer,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==0)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=readByte(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=readByte(byteOrder.LITTLE_ENDIAN,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=readByte(byteOrder.LITTLE_ENDIAN);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];InputStreamin=readInt(bitsCached,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];bitsOut=readByte(bytes,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut-MASKS[count];InputStreamin=readBits(in,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==MAXIMUM_CACHE_SIZE){returnin;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut!=MAXIMUM_CACHE_SIZE){returnin;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut>=MAXIMUM_CACHE_SIZE){returnin;}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=newInputStreamReader(this,MAXIMUM_CACHE_SIZE+1);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=MAXIMUM_CACHE_SIZE)?bitsOut:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut==this.bitsCachedSize)?this.bitsCachedSize:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=this.bitsCachedSize)?bitsOut:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnbitsOut&Math.min(bitsCachedSize,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(2,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108bitsOut&Math.max(0,MAXIMUM_CACHE_SIZE);InputStreamin=readInt(bitsCachedSize,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==bitsOut){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder.LITTLE_ENDIAN);}else{bitsOut=readByte(byteOrder.LITTLE_ENDIAN);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==bitsOut){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder.LITTLE_ENDIAN);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==bitsOut){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder.LITTLE_ENDIAN);}else{bitsOut=in.readInt();}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==bitsOut){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder.LITTLE_ENDIAN);}else{bitsOut=readByteInputStream(byteOrder.LITTLE_ENDIAN);}
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==bitsOut){returnbitsOut&MASKS[count];bitsOut=readByte(byteOrder.LITTLE_ENDIAN);}else{bitsOut=readByte(byteOrder.LITTLE_ENDIAN
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108IntegerMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIM
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MA
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108if(bitsOut==null){returnbitsOut&Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM_CACHE_SIZE);intMAXIMUM_CACHE_SIZE=Math.max(MAXIMUM_CACHE_SIZE,MAXIMUM
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108InputStreamin=readBits(bytesCached,bytesOut);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(this.bitsCachedSize>=0)?bitsOut:bitsOut;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108returnInputStream.read(byteOrder,MAXIMUM_CACHE_SIZE);
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(byteOrder==ByteOrder.LITTLE_ENDIAN)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bitsCached>=(bytesCachedSize-count))&MASKS[count];
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>>(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108return(bitsOut>=0)?this.bitsCachedSize:MAXIMUM_CACHE_SIZE;bitsOut=(bytesCached>=(bitsCachedSize-count))&MAXIMUM_CACHE_SIZE;
projects/Compress40/src/main/java/org/apache/commons/compress/utils/BitInputStream.java108intcount=bitsOut.length&MASKS[count];bitsOut=(byteOrder>>ByteOrder.LITTLE_ENDIAN)&MASKS[count];
