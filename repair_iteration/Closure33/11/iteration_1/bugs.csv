bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  prettyPrint  =  true;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  =  true;  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  true;	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
2	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
3	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
4	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  }  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  }	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
5	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
6	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
7	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  }	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
8	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                  AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]    [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	  	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
9	[BUG]  [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type "  +  implicitPrototypeFallback.getImplicitPrototype();	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
10	[BUG]  [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getInferredPrototype();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getInferredPrototype();  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type "  +  implicitPrototypeFallback.getInferredPrototype();	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
11	[BUG]  [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getNativeType();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getNativeType();  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type "  +  implicitPrototypeFallback.getNativeType();	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
12	[BUG]  [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type "  +  implicitPrototypeFallback.getPrettyPrint();	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
13	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  forAnnotations;  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  forAnnotations;	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
14	[BUG]  [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "native  type "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type "  +  implicitPrototypeFallback.getImplicitPrototypeName();	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
15	[BUG]  [BUGGY]  prettyPrint  = "null ";  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "null ";  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "null ";	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
16	[BUG]  [BUGGY]  prettyPrint  = "immutable ";  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "immutable ";  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "immutable ";	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
17	[BUG]  [BUGGY]  prettyPrint  = " ";  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = " ";  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = " ";	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
18	[BUG]  [BUGGY]  prettyPrint  = "native  type ";  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "native  type ";  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type ";	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
19	[BUG]  [BUGGY]  prettyPrint  = "not  implemented ";  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {    [BUGGY]  prettyPrint  = "not  implemented ";  [BUGGY]    Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "not  implemented ";	prettyPrint  =  false;  	non-compiled	[CE]  <identifier>  expected	21	None	replace
