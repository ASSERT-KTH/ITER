bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "not  implemented: "  +  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: "  +  forAnnotations;	  prettyPrint    =   "not    implemented   ";    	non-compiled	[CE]  <identifier>  expected	19	None	replace
2	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "not  implemented "  +  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented "  +  forAnnotations;	  prettyPrint    =   "not    implemented   ";    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented: ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "not  implemented: ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented: ";	  prettyPrint    =   "not    implemented   ";    	non-compiled	[CE]  <identifier>  expected	19	None	replace
4	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented. ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "not  implemented. ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented. ";	  prettyPrint    =   "not    implemented   ";    	non-compiled	[CE]  <identifier>  expected	19	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
10	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
16	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
17	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getImplicitPrototypeName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getImplicitPrototypeName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
18	[BUG]  [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "immutable "  +  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "immutable "  +  forAnnotations;	  prettyPrint    =   "immutable   ";    	non-compiled	[CE]  <identifier>  expected	16	None	replace
19	[BUG]  [BUGGY]  prettyPrint  =   "nativeType ";  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "nativeType ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "nativeType ";	  prettyPrint    =   "immutable   ";    	non-compiled	[CE]  <identifier>  expected	16	None	replace
20	[BUG]  [BUGGY]  prettyPrint  =   "unknown  type ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "unknown  type ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "unknown  type ";	  prettyPrint    =   "immutable   ";    	non-compiled	[CE]  <identifier>  expected	16	None	replace
21	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations;	  prettyPrint    =   "native    type   ";    	non-compiled	[CE]  <identifier>  expected	18	None	replace
22	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type: "  +  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  forAnnotations;	  prettyPrint    =   "native    type   ";    	non-compiled	[CE]  <identifier>  expected	18	None	replace
23	[BUG]  [BUGGY]  prettyPrint  = "native  type: ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  = "native  type: ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type: ";	  prettyPrint    =   "native    type   ";    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  prettyPrint  =   "Native  type ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "Native  type ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "Native  type ";	  prettyPrint    =   "native    type   ";    	non-compiled	[CE]  <identifier>  expected	18	None	replace
25	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  implicitPrototypeFallback;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  implicitPrototypeFallback;	  prettyPrint    =   "native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
26	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  inferred;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  inferred;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  inferred;	  prettyPrint    =   "native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
27	[BUG]  [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  = "Native  type  forAnnotations: "  +  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "Native  type  forAnnotations: "  +  forAnnotations;	  prettyPrint    =   "native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
28	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  prettyPrint;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  prettyPrint;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  prettyPrint;	  prettyPrint    =   "native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
29	[BUG]  [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  implicitPrototype;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  = "native  type  forAnnotations: "  +  implicitPrototype;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  = "native  type  forAnnotations: "  +  implicitPrototype;	  prettyPrint    =   "native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
30	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.toString();	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
31	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.toString();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?   "null "  :  implicitPrototypeFallback.toString();	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
32	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
33	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback  ==  null)?   "null "  :  implicitPrototypeFallback.getName();	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
34	[BUG]  [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =(forAnnotations  ||  implicitPrototypeFallback!=  null)?  null  :  implicitPrototypeFallback.toString();	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations;	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
36	[BUG]  [BUGGY]  prettyPrint  |=  FOR_Annotations;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  FOR_Annotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_Annotations;	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTAL;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTAL;	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
38	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTED;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTED;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTED;	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTS;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  FOR_NOT_IMPLEMENTS;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_NOT_IMPLEMENTS;	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  prettyPrint  |=  FOR_ANNOTATION;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  FOR_ANNOTATION;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  FOR_ANNOTATION;	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  prettyPrint  =  null;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  null;	  prettyPrint    =   "null   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
42	[BUG]  [BUGGY]  prettyPrint  =  new  StringBuilder().append( "null ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =  new  StringBuilder().append( "null ");  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  new  StringBuilder().append( "null ");	  prettyPrint    =   "null   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
43	[BUG]  [BUGGY]  prettyPrint  =   "[null] ";  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "[null] ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "[null] ";	  prettyPrint    =   "null   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getNativeType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getNativeType();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getNativeType();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
52	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getNativeType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getNativeType();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getNativeType();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getNativeType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getNativeType();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getNativeType();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
54	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
58	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeObjectType()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  FORANNotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
60	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeType()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeType()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback.getNativeType()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  0);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  0);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  prettyPrint);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  prettyPrint);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  prettyPrint);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  i);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  i);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  inferred);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localeCount);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
67	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getInferredPrototype();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getInferredPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getInferredPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
68	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getInferredPrototype();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getInferredPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getInferredPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
70	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
71	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  String  propertyNames  =  Sets.newTreeSet();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newTreeSet();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newStringSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  String  propertyNames  =  Sets.newStringSet();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newStringSet();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
74	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  String  propertyNames  =  Sets.newHashSet();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyNames  =  Sets.newHashSet();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
75	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
76	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
77	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  ' "  +  implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototype.getImplicitPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototype.getImplicitPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  properties);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
82	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  propertyNames);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTS,  propertyNames);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
84	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getPrettyPrint();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getPrettyPrint();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getPrettyPrint();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getPrettyPrint();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type: "  +  implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
86	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getReferenceName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getReferenceName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getReferenceName();	  prettyPrint    =   "native    type   ";    	non-compiled	[CE]  <identifier>  expected	18	None	replace
87	[BUG]  [BUGGY]  prettyPrint  =   "native  type:  {  0  }   ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type:  {  0  }   ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type:  {  0  }   ";	  prettyPrint    =   "native    type   ";    	non-compiled	[CE]  <identifier>  expected	18	None	replace
88	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getName();	  prettyPrint    =   "native    type   ";    	non-compiled	[CE]  <identifier>  expected	18	None	replace
89	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getPrettyPrint();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getPrettyPrint();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getPrettyPrint();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
90	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint());  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getPrettyPrint());	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getPrettyPrint();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
91	[BUG]  [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  inferred?  implicitPrototypeFallback  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
94	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
95	[BUG]  [BUGGY]  prettyPrint  =   "null "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "null "  +  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "null "  +  forAnnotations;	  prettyPrint    =   "null   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
96	[BUG]  [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =  this.implicitPrototypeFallback;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  this.implicitPrototypeFallback;	  prettyPrint    =   "null   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  properties,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
99	[BUG]  [BUGGY]  prettyPrint  =   "native  type  forAnnotations: "  +  nativeType;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type  forAnnotations: "  +  nativeType;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  forAnnotations: "  +  nativeType;	  prettyPrint    =   "native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
100	[BUG]  [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  %s "  +  forAnnotations;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type  forAnnotations:  %s "  +  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type  forAnnotations:  %s "  +  forAnnotations;	  prettyPrint    =   "native    type    forAnnotations:   "    +    forAnnotations;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
101	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototypeName());	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
102	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototypeName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
103	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototypeName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototypeName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
104	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getImplicitPrototypeName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getImplicitPrototypeName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
106	[BUG]  [BUGGY]  prettyPrint  |=  false;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  false;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  false;	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
107	[BUG]  [BUGGY]  PrettyPrint  =  false;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  PrettyPrint  =  false;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	PrettyPrint  =  false;	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
108	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback.getImplicitPrototype());	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
109	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(implicitPrototypeFallback).getImplicitPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
110	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getImplicitPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getImplicitPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
111	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
112	[BUG]  [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototype());  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type( "  +  implicitPrototypeFallback.getImplicitPrototype());	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
113	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  String  propertyName  =  getReferenceName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getReferenceName();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
114	[BUG]  [BUGGY]  String  propertyName  =  getPropertyName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  String  propertyName  =  getPropertyName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	String  propertyName  =  getPropertyName();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
115	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
116	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(prettyPrint);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(prettyPrint);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(prettyPrint);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
117	[BUG]  [BUGGY]  forAnnotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  forAnnotations  =  Sets.newHashSet();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	forAnnotations  =  Sets.newHashSet();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
118	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInferredPrototype();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInferredPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getInferredPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
119	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getReferenceName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getReferenceName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getReferenceName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
120	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getPadding();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getPadding();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getPadding();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
121	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  inferred.getInferredPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  inferred.getInferredPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
122	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getNativeType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getNativeType();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  this.implicitPrototypeFallback.getNativeType();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
123	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getNativeType();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
124	[BUG]  [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }   ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "not  implemented:  {  0  }   ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "not  implemented:  {  0  }   ";	  prettyPrint    =   "not    implemented   ";    	non-compiled	[CE]  <identifier>  expected	19	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  -  1);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount  -  1);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
126	[BUG]  [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  nativeType  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  localCount,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  localCount,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  0);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	System.arraycopy(implicitPrototypeFallback,  0,  forAnnotations,  0);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
129	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrint();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =  getPrettyPrint();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrint();	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
130	[BUG]  [BUGGY]  prettyPrint  =  '[';  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =  '[';  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  '[';	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
131	[BUG]  [BUGGY]  prettyPrint  =  'n';  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =  'n';  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  'n';	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
132	[BUG]  [BUGGY]  prettyPrint  =' "';  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =' "';  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =' "';	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
133	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  getNativeType(UNKNOWN_TYPE);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  getNativeType(UNKNOWN_TYPE);	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
134	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototype();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
135	[BUG]  [BUGGY]  sb.append( ", ").append(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  sb.append( ", ").append(forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ", ").append(forAnnotations);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
136	[BUG]  [BUGGY]  sb.append( ", ").append(forAnnotations).append( ", ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  sb.append( ", ").append(forAnnotations).append( ", ");  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	sb.append( ", ").append(forAnnotations).append( ", ");	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
137	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
138	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
139	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
140	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
141	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  0,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
142	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localeCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
143	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  1,  propertyNames,  localCount,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
144	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
145	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  [Delete]  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	[Delete]	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
146	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeObjectType()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
147	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getNativeType()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
148	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getReferenceName()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getReferenceName()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getReferenceName()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
149	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getName()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getName()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getName()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
150	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  null;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstance()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    localCount);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
151	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
152	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
153	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTE	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
154	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
155	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
156	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  0,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
157	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }  else  {  forAnnotations  =  Sets.newTreeSet();  System.arraycopy(implicitPrototypeFallback,  propertyNames,  localCount++,  MAX_PRETTY_PRINTED	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	6	None	replace
158	[BUG]  [BUGGY]  prettyPrint  =   "implicitable ";  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "implicitable ";  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "implicitable ";	  prettyPrint    =   "immutable   ";    	non-compiled	[CE]  <identifier>  expected	16	None	replace
159	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.getInstanceType()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
160	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations?  implicitPrototypeFallback.getImplicitPrototype()  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
161	[BUG]  [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  null;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  implicitPrototypeFallback  =  forAnnotations?  implicitPrototypeFallback.instance  :  null;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
162	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  }	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
163	[BUG]  [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnnotations);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
164	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
165	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.class)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  <  implicitPrototypeFallback.class)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.class)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
166	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
167	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.size())  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
168	[BUG]  [BUGGY]  Annotations  <  implicitPrototypeFallback.length)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  <  implicitPrototypeFallback.length)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  implicitPrototypeFallback.length)  {  prettyPrint  =  false;  }  else  {  System.arraycopy(implicitPrototypeFallback,  MAX_PRETTY_PRINTED_PROPERTIES,  forAnn	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    System.arraycopy(implicitPrototypeFallback,    MAX_PRETTY_PRINTED_PROPERTIES,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
169	[BUG]  [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations)  {  prettyPrint  =  true;  }  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations)  {  prettyPrint  =  true;  }	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
170	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {  prettyPrint  =  false;  }	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
171	[BUG]  [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  <  ObjectType>  inferred  =  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  <  ObjectType>  inferred  =  forAnnotations;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
172	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(propertyName);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingName(propertyName);	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
173	[BUG]  [BUGGY]  Annotations  inferred  =  forAnnotations;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  Annotations  inferred  =  forAnnotations;  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	Annotations  inferred  =  forAnnotations;	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
174	[BUG]  [BUGGY]  if(forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  if(forAnnotations  ||  inferred)  {  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	if(forAnnotations  ||  inferred)  {	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
175	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(getReferenceName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  aughtExceptionHandler.handleMissingClass(getReferenceName());  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	aughtExceptionHandler.handleMissingClass(getReferenceName());	  if(forAnnotations)    {    prettyPrint    =    false;    }    else    {    forAnnotations    =    Sets.newTreeSet();    System.arraycopy(implicitPrototypeFallback,    0,    propertyNames,    localCount++,    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	5	None	replace
176	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getImplicitPrototypeName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getImplicitPrototypeName();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getImplicitPrototypeName();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getImplicitPrototypeName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
177	[BUG]  [BUGGY]  prettyPrint  =  getPrettyPrinter();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =  getPrettyPrinter();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =  getPrettyPrinter();	  prettyPrint    =   "   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
178	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getInferredType();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getInferredType();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  implicitPrototypeFallback.getInferredType();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
179	[BUG]  [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getInferredPrototype();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  =   "native  type "  +  forAnnotations.getInferredPrototype();  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  =   "native  type "  +  forAnnotations.getInferredPrototype();	  prettyPrint    =   "native    type   "    +    implicitPrototypeFallback.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
180	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(forAnnotations);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(forAnnotations);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(forAnnotations);	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
181	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(getImplicitPrototype());  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(getImplicitPrototype());	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
182	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(defaultPrototypeFallback);	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
183	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(propertyNames);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(propertyNames);	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
184	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(getImplicitPrototypeFallback());	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
185	[BUG]  [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(nativeType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {      [BUGGY]  prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(nativeType);  [BUGGY]      Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	prettyPrint  |=  forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations)||  implicitPrototypeFallback.equals(nativeType);	  prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
